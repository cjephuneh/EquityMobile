Index: app/src/main/java/com/chachadeveloper/equitymobile/ui/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.ui\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.animation.ExperimentalAnimationApi\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material.MaterialTheme\r\nimport androidx.compose.material.Surface\r\nimport androidx.compose.material.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport com.chachadeveloper.equitymobile.presentation.NavGraphs\r\nimport com.chachadeveloper.equitymobile.presentation.components.StandardScaffold\r\nimport com.chachadeveloper.equitymobile.presentation.destinations.BorrowDestination\r\nimport com.chachadeveloper.equitymobile.presentation.destinations.HomeDestination\r\nimport com.chachadeveloper.equitymobile.presentation.destinations.MoreDestination\r\nimport com.chachadeveloper.equitymobile.presentation.destinations.TransactDestination\r\nimport com.chachadeveloper.equitymobile.ui.theme.EquityMobileTheme\r\nimport com.google.accompanist.navigation.animation.rememberAnimatedNavController\r\nimport com.google.accompanist.pager.ExperimentalPagerApi\r\nimport com.ramcosta.composedestinations.DestinationsNavHost\r\nimport com.ramcosta.composedestinations.rememberNavHostEngine\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    @OptIn(ExperimentalAnimationApi::class, ExperimentalPagerApi::class)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n            EquityMobileTheme {\r\n                // A surface container using the 'background' color from the theme\r\n                Surface(\r\n                    modifier = Modifier.fillMaxSize(),\r\n                    color = MaterialTheme.colors.background\r\n                ) {\r\n                    val navController = rememberAnimatedNavController()\r\n                    val navHostEngine = rememberNavHostEngine()\r\n                    val newBackStackEntry by navController.currentBackStackEntryAsState()\r\n                    val route = newBackStackEntry?.destination?.route\r\n\r\n\r\n                    StandardScaffold(\r\n                        navController = navController,\r\n                        showBottomBar = route in listOf(\r\n                            HomeDestination.route,\r\n                            TransactDestination.route,\r\n                            BorrowDestination.route,\r\n                            MoreDestination.route\r\n                        )\r\n\r\n                    ){ innerPadding ->\r\n                        Box(modifier = Modifier.padding(innerPadding)){\r\n                            DestinationsNavHost(\r\n                                navGraph = NavGraphs.root,\r\n                                navController = navController,\r\n                                engine = navHostEngine\r\n                            )\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/ui/MainActivity.kt b/app/src/main/java/com/chachadeveloper/equitymobile/ui/MainActivity.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/ui/MainActivity.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/ui/MainActivity.kt	(date 1665290901227)
@@ -17,10 +17,7 @@
 import androidx.navigation.compose.currentBackStackEntryAsState
 import com.chachadeveloper.equitymobile.presentation.NavGraphs
 import com.chachadeveloper.equitymobile.presentation.components.StandardScaffold
-import com.chachadeveloper.equitymobile.presentation.destinations.BorrowDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.HomeDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.MoreDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.TransactDestination
+import com.chachadeveloper.equitymobile.presentation.destinations.*
 import com.chachadeveloper.equitymobile.ui.theme.EquityMobileTheme
 import com.google.accompanist.navigation.animation.rememberAnimatedNavController
 import com.google.accompanist.pager.ExperimentalPagerApi
@@ -43,14 +40,13 @@
                     val newBackStackEntry by navController.currentBackStackEntryAsState()
                     val route = newBackStackEntry?.destination?.route
 
-
                     StandardScaffold(
                         navController = navController,
                         showBottomBar = route in listOf(
-                            HomeDestination.route,
-                            TransactDestination.route,
-                            BorrowDestination.route,
-                            MoreDestination.route
+                            HomeScreenDestination.route,
+                            TransactionScreenDestination.route,
+                            BorrowScreenDestination.route,
+                            MoreScreenDestination.route
                         )
 
                     ){ innerPadding ->
Index: app/src/main/java/com/chachadeveloper/equitymobile/domain/model/BottomNavItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.domain.model\r\n\r\nimport com.chachadeveloper.equitymobile.R\r\n\r\nimport com.chachadeveloper.equitymobile.presentation.destinations.*\r\n\r\n\r\nsealed class BottomNavItem(var title: String, var icon: Int, var destination: Destination) {\r\n    object Home : BottomNavItem(\r\n        title = \"Home\",\r\n        icon = R.drawable.home,\r\n        destination = HomeDestination\r\n    )\r\n\r\n    object Transact : BottomNavItem(\r\n        title = \"Transact\",\r\n        icon = R.drawable.ic_creditcard,\r\n        destination = TransactDestination\r\n    )\r\n\r\n    object Borrow : BottomNavItem(\r\n        title = \"Borrow\",\r\n        icon = R.drawable.ic_loan,\r\n        destination = BorrowDestination\r\n    )\r\n    object More : BottomNavItem(\r\n        title = \"More\",\r\n        icon = R.drawable.more,\r\n        destination = MoreDestination\r\n    )\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/domain/model/BottomNavItem.kt b/app/src/main/java/com/chachadeveloper/equitymobile/domain/model/BottomNavItem.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/domain/model/BottomNavItem.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/domain/model/BottomNavItem.kt	(date 1665290900640)
@@ -9,24 +9,24 @@
     object Home : BottomNavItem(
         title = "Home",
         icon = R.drawable.home,
-        destination = HomeDestination
+        destination = HomeScreenDestination
     )
 
     object Transact : BottomNavItem(
         title = "Transact",
-        icon = R.drawable.ic_creditcard,
-        destination = TransactDestination
+        icon = R.drawable.mobilepayment,
+        destination = TransactionScreenDestination
     )
 
     object Borrow : BottomNavItem(
         title = "Borrow",
         icon = R.drawable.ic_loan,
-        destination = BorrowDestination
+        destination = BorrowScreenDestination
     )
     object More : BottomNavItem(
         title = "More",
         icon = R.drawable.more,
-        destination = MoreDestination
+        destination = MoreScreenDestination
     )
 
 }
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/ui/theme/Type.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.ui.theme\r\n\r\nimport androidx.compose.material.Typography\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.Font\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.unit.sp\r\nimport com.chachadeveloper.equitymobile.R\r\n\r\n// Set of Material typography styles to start with\r\nval poppins = FontFamily(\r\n    Font(R.font.poppins_light, FontWeight.Light),\r\n    Font(R.font.poppins_regular, FontWeight.Normal),\r\n    Font(R.font.poppins_medium, FontWeight.Medium),\r\n    Font(R.font.poppins_semibold, FontWeight.SemiBold),\r\n    Font(R.font.poppin_bold, FontWeight.Bold),\r\n)\r\n\r\nval Typography = Typography(\r\n    body1 = TextStyle(\r\n        fontFamily = poppins,\r\n        fontWeight = FontWeight.Normal,\r\n        fontSize = 16.sp,\r\n        color = lightGray\r\n    ),\r\n    h1 = TextStyle(\r\n        fontFamily = poppins,\r\n        fontWeight = FontWeight.Bold,\r\n        fontSize = 30.sp,\r\n        color = lightGray\r\n    ),\r\n    h2 = TextStyle(\r\n        fontFamily = poppins,\r\n        fontWeight = FontWeight.Medium,\r\n        fontSize = 24.sp,\r\n        color = lightGray\r\n    ),\r\n    body2 = TextStyle(\r\n        fontFamily = poppins,\r\n        fontWeight = FontWeight.Normal,\r\n        fontSize = 12.sp,\r\n        color = lightGray\r\n    ),\r\n    caption = TextStyle(\r\n        fontFamily = poppins,\r\n        fontWeight = FontWeight.Normal,\r\n        color = lightGray\r\n    ),\r\n    button = TextStyle(\r\n        fontFamily = poppins,\r\n        fontWeight = FontWeight.SemiBold,\r\n        fontSize = 12.sp\r\n    )\r\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/ui/theme/Type.kt b/app/src/main/java/com/chachadeveloper/equitymobile/ui/theme/Type.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/ui/theme/Type.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/ui/theme/Type.kt	(date 1665290901586)
@@ -21,7 +21,7 @@
     body1 = TextStyle(
         fontFamily = poppins,
         fontWeight = FontWeight.Normal,
-        fontSize = 16.sp,
+        fontSize = 14.sp,
         color = lightGray
     ),
     h1 = TextStyle(
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPassword/ResetPassword.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPassword/ResetPassword.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPassword/ResetPassword.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPassword/ResetPassword.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,290 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.changeResetPassword
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Save
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.input.KeyboardType
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardTextField
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.createPassword.CreatePasswordViewModel
-import com.chachadeveloper.equitymobile.presentation.destinations.CreatePinDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-import org.koin.androidx.compose.get
-
-@Composable
-@Destination
-fun ResetPassword(
-    viewModel: ResetPasswordViewModel = get(),
-    navigator: DestinationsNavigator
-
-) {
-
-    Column(modifier = Modifier.fillMaxSize()) {
-             StandardToolbar(
-            navigator = navigator,
-                 showBackArrow = true,
-            title = {
-                Text(
-                    text = "Change Password",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            }
-        )
-
-        Column {
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ) {
-
-                Column(
-                    modifier = Modifier.fillMaxSize()
-                        .padding(start = 30.dp, end = 30.dp)
-                ) {
-
-                    Text(
-                        text = "Reset your password",
-                        style = MaterialTheme.typography.body1
-                    )
-
-                    Spacer(modifier = Modifier.height(10.dp))
-                    Text(
-                        text = stringResource(id = R.string.createPassword_hint),
-                        style = MaterialTheme.typography.body2,
-                        maxLines = 1
-                    )
-                    Spacer(modifier = Modifier.height(20.dp))
-
-                    Text(text = "Current Password")
-
-                    StandardTextField(
-                        text = viewModel.passwordText.value,
-                        onValueChange = {
-                            viewModel.setPasswordText(it)
-                        },
-                        hint = stringResource(id = R.string.password_hint),
-                        keyboardType = KeyboardType.Password,
-                        error = viewModel.passwordError.value,
-                        isPasswordVisible = viewModel.showPassword.value,
-                        onPasswordToggleClick = {
-                            viewModel.setShowPassword(it)
-                        }
-                    )
-
-                    Spacer(modifier = Modifier.height(20.dp))
-
-
-                    Text(text = "New password")
-
-                    StandardTextField(
-                        text = viewModel.passwordText.value,
-                        onValueChange = {
-                            viewModel.setPasswordText(it)
-                        },
-                        hint = stringResource(id = R.string.password_hint),
-                        keyboardType = KeyboardType.Password,
-                        error = viewModel.passwordError.value,
-                        isPasswordVisible = viewModel.showPassword.value,
-                        onPasswordToggleClick = {
-                            viewModel.setShowPassword(it)
-                        }
-                    )
-
-                    Spacer(modifier = Modifier.height(20.dp))
-
-                    Text(text = "Confirm password")
-
-
-                    StandardTextField(
-                        text = viewModel.passwordText.value,
-                        onValueChange = {
-                            viewModel.setPasswordText(it)
-                        },
-                        hint = stringResource(id = R.string.password_hint),
-                        keyboardType = KeyboardType.Password,
-                        error = viewModel.passwordError.value,
-                        isPasswordVisible = viewModel.showPassword.value,
-                        onPasswordToggleClick = {
-                            viewModel.setShowPassword(it)
-                        }
-                    )
-
-                    Spacer(modifier = Modifier.height(20.dp))
-
-                    /*
-                    Password Validation Ui
-                     */
-
-                    Column {
-                        Row(
-                            modifier = Modifier
-                                .fillMaxWidth(),
-                        ) {
-                            Image(
-                                painter =
-                                painterResource(id = R.drawable.ic_launcher_foreground),
-                                contentDescription = null,
-                                modifier = Modifier.size(50.dp),
-                                contentScale = ContentScale.Crop,
-                                colorFilter = ColorFilter.tint(color = Color.White)
-                            )
-                            Text(
-                                text = stringResource(id = R.string.validate_header),
-                                modifier = Modifier.padding(top = 5.dp),
-                                textAlign = TextAlign.Center
-                            )
-
-                        }
-
-                        Spacer(modifier = Modifier.height(8.dp))
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier.fillMaxWidth()
-                        ) {
-
-                            Icon(
-                                imageVector = Icons.Filled.Save,
-                                contentDescription = null
-                            )
-
-                            Column {
-                                Text(
-                                    text = stringResource(id = R.string.validateLetter),
-                                    maxLines = 2,
-                                    style = MaterialTheme.typography.body2
-                                )
-
-                            }
-                        }
-
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier.fillMaxWidth()
-                        ) {
-
-                            Icon(
-                                imageVector = Icons.Filled.Save,
-                                contentDescription = null
-                            )
-
-                            Column {
-                                Text(
-                                    text = stringResource(id = R.string.validateCharLong),
-                                    maxLines = 1,
-                                    style = MaterialTheme.typography.body2
-
-                                )
-
-                            }
-                        }
-
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier.fillMaxWidth()
-                        ) {
-
-                            Icon(
-                                imageVector = Icons.Filled.Save,
-                                contentDescription = null
-                            )
-
-                            Column {
-                                Text(
-                                    text = stringResource(id = R.string.validate_specialChar),
-                                    maxLines = 1,
-                                    style = MaterialTheme.typography.body2
-
-
-                                )
-
-                            }
-                        }
-
-
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier.fillMaxWidth()
-                        ) {
-
-                            Icon(
-                                imageVector = Icons.Filled.Save,
-                                contentDescription = null
-                            )
-
-                            Column {
-                                Text(
-                                    text = stringResource(id = R.string.passwordMatch),
-                                    maxLines = 1,
-                                    style = MaterialTheme.typography.body2
-
-                                )
-
-                            }
-                        }
-                    }
-
-
-
-
-                        Column(
-                            modifier = Modifier
-                                .fillMaxSize(),
-                            verticalArrangement = Arrangement.Bottom
-                        ) {
-
-                            Button(
-                                onClick = {
-//                                navigator.navigate(CreatePinDestination)
-                                },
-                                modifier = Modifier.fillMaxWidth(),
-                                colors = ButtonDefaults.buttonColors(
-                                    contentColor = Color.Red,
-                                    backgroundColor = Color.DarkGray
-                                ),
-
-                                ) {
-                                Text(
-                                    text = "Confirm",
-                                    color = Color.Black,
-                                    modifier = Modifier.padding(10.dp)
-                                )
-                            }
-                            Spacer(modifier = Modifier.height(20.dp))
-
-                        }
-
-                    }
-
-
-                }
-            }
-
-
-
-
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPassword/CreatePasswordViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPassword/CreatePasswordViewModel.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPassword/CreatePasswordViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPassword/CreatePasswordViewModel.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,42 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.createPassword
-
-import androidx.compose.runtime.State
-import androidx.compose.runtime.mutableStateOf
-import androidx.lifecycle.ViewModel
-
-class CreatePasswordViewModel : ViewModel() {
-    private val _usernameText = mutableStateOf("")
-    val usernameText: State<String> = _usernameText
-
-    private val _passwordText = mutableStateOf("")
-    val passwordText: State<String> = _passwordText
-
-    private val _showPassword = mutableStateOf(false)
-    val showPassword: State<Boolean> = _showPassword
-
-    private val _usernameError = mutableStateOf("")
-    val usernameError: State<String> = _usernameError
-
-    private val _passwordError = mutableStateOf("")
-    val passwordError: State<String> = _passwordError
-
-    fun setUsernameText(username: String) {
-        _usernameText.value = username
-    }
-
-    fun setPasswordText(password: String) {
-        _passwordText.value = password
-    }
-
-    fun setIsUsernameError(error: String) {
-        _usernameError.value = error
-    }
-
-    fun setIsPasswordError(error: String) {
-        _passwordError.value = error
-    }
-
-    fun setShowPassword(showPassword: Boolean) {
-        _showPassword.value = showPassword
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/borrow/Borrow.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/borrow/Borrow.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/borrow/Borrow.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/borrow/Borrow.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,204 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.borrow
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.LoanApplicationDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.PayLoanDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryGray
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@Destination
-fun Borrow(navigator: DestinationsNavigator) {
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            title = {
-                Text(
-                    text = "Borrow",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            },
-            navActions = {
-                IconButton(onClick = { /*TODO*/ }) {
-                    Image(
-                        painter = painterResource(id = R.drawable.chat_icon),
-                        contentDescription = null,
-                        modifier = Modifier.size(25.dp),
-                        contentScale = ContentScale.Crop,
-                        colorFilter = ColorFilter.tint(color = Color.White)
-                    )
-                }
-            }
-        )
-
-        Box(modifier = Modifier.fillMaxSize(),
-            contentAlignment = Alignment.TopStart
-        ) {
-            Column(
-                modifier = Modifier
-                    .fillMaxSize()
-                    .padding(start = 30.dp, end = 30.dp)
-            ){
-
-                Text(text = "What would you like to do",
-                    color = Color.White,
-                    style = MaterialTheme.typography.body1)
-                Spacer(modifier = Modifier.height(15.dp))
-                Text(text = stringResource(id = R.string.loans),
-                    style =  MaterialTheme.typography.body2,
-                    maxLines = 2,
-                    color = Color.White
-                )
-
-                /* cards */
-
-
-                /* Other cards */
-
-                Spacer(modifier = Modifier.height(15.dp))
-                Row(
-                    horizontalArrangement = Arrangement.SpaceEvenly,
-                    verticalAlignment = Alignment.CenterVertically,
-                    modifier = Modifier.fillMaxWidth().clickable {
-                        navigator.navigate(LoanApplicationDestination)
-                    }
-                ) {
-
-                    Image(
-                        painter =
-                        painterResource(id = R.drawable.ic_support_foreground) ,
-                        contentDescription =  null,
-                        contentScale = ContentScale.Crop,
-                        modifier = Modifier
-                            .size(50.dp)
-                            .clip(CircleShape)
-                            .background(Color.DarkGray),
-                        colorFilter = ColorFilter.tint(color = primaryPink)
-
-                    )
-                    Column(modifier = Modifier.padding(start = 10.dp)){
-                        Text(
-                            text = "Get Loan",
-                            maxLines = 1,
-                            style= MaterialTheme.typography.body1,
-                            color = Color.White
-                        )
-
-                    }
-                    Column {
-                        Box(modifier =
-                        Modifier.fillMaxWidth(),
-                            contentAlignment = Alignment.CenterEnd
-                        ){
-                            Icon(
-                                painter =
-                                painterResource(id = R.drawable.ic_chevron_right),
-                                tint = primaryPink,
-                                contentDescription = null,
-
-                                )
-
-                        }
-                    }
-
-
-                }
-                Spacer(modifier = Modifier.height(12.dp))
-                Divider(
-                    color = primaryGray,
-                    thickness = 1.dp,
-                    modifier = Modifier
-                        .padding(
-                            start = 60.dp,
-                            end = 8.dp
-                        )
-                )
-
-
-                Spacer(modifier = Modifier.height(12.dp))
-                /* Pay my Loan*/
-
-
-                Row(
-                    horizontalArrangement = Arrangement.SpaceEvenly,
-                    verticalAlignment = Alignment.CenterVertically,
-                    modifier = Modifier.fillMaxWidth().clickable {
-                        navigator.navigate(PayLoanDestination)
-                    }
-                ) {
-
-                    Image(
-                        painter =
-                        painterResource(id = R.drawable.ic_support_foreground) ,
-                        contentDescription =  null,
-                        contentScale = ContentScale.Crop,
-                        modifier = Modifier
-                            .size(50.dp)
-                            .clip(CircleShape)
-                            .background(Color.DarkGray),
-                        colorFilter = ColorFilter.tint(color = primaryPink)
-
-                    )
-                    Column(modifier = Modifier.padding(start = 10.dp)){
-                        Text(
-                            text = "Pay Loan",
-                            maxLines = 1,
-                            style= MaterialTheme.typography.body1,
-                            color = Color.White
-                        )
-
-                    }
-                    Column {
-                        Box(modifier =
-                        Modifier.fillMaxWidth(),
-                            contentAlignment = Alignment.CenterEnd
-                        ){
-                            Icon(
-                                painter =
-                                painterResource(id = R.drawable.ic_chevron_right),
-                                tint = primaryPink,
-                                contentDescription = null,
-
-                                )
-
-                        }
-                    }
-
-
-                }
-
-                Spacer(modifier = Modifier.height(12.dp))
-
-
-            }
-
-
-        }
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/login/Login.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/login/Login.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/login/Login.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/login/Login.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,196 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.login
-
-import androidx.compose.foundation.BorderStroke
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Message
-import androidx.compose.runtime.*
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.input.KeyboardType
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import androidx.lifecycle.viewmodel.compose.viewModel
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.CustomTextField
-import com.chachadeveloper.equitymobile.presentation.components.StandardTextField
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.*
-import com.chachadeveloper.equitymobile.presentation.securityQsn.SecurityQn
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-import org.koin.androidx.compose.get
-
-@Composable
-@Destination
-fun Login(
-    navigator: DestinationsNavigator,
-    viewModel: LoginViewModel = get()
-) {
-    Column(
-        modifier = Modifier.fillMaxSize()
-    ) {
-        StandardToolbar(
-                navigator = navigator,
-                showBackArrow = true,
-                title = {
-                        Text(
-                            text = "Welcome Back",
-                            textAlign = TextAlign.Center,
-                            modifier = Modifier.fillMaxWidth(),
-                            style = MaterialTheme.typography.body2
-                        )
-                },
-                navActions = {
-                    IconButton(onClick = { /*TODO*/ }) {
-                        Image(
-                            painter = painterResource(id = R.drawable.chat_icon),
-                            contentDescription = null,
-                            modifier = Modifier.size(25.dp),
-                            contentScale = ContentScale.Crop,
-                            colorFilter = ColorFilter.tint(color = Color.White)
-                        )
-                    }
-                }
-
-            )
-
-        Spacer(modifier = Modifier.height(25.dp))
-
-        Column {
-            Box(modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ) {
-
-                Column(
-                    modifier = Modifier
-                        .fillMaxSize()
-                        .padding(start = 30.dp, end = 30.dp)
-
-                ){
-
-                    Text(text = "Hello there", style = MaterialTheme.typography.body1)
-                    Spacer(modifier = Modifier.height(15.dp))
-                    Text(text = stringResource(id = R.string.signin),
-                        style =  MaterialTheme.typography.body2,
-                        maxLines = 2
-                    )
-
-                    Spacer(modifier = Modifier.height(16.dp))
-                    Text(text = "Email address or mobile number")
-
-                    StandardTextField(
-                        text = viewModel.usernameText.value,
-                        onValueChange = {
-                            viewModel.setUsernameText(it)
-                        },
-                        keyboardType = KeyboardType.Email,
-                        error = viewModel.usernameError.value,
-                        hint = stringResource(id = R.string.email_hint),
-
-                        )
-                    Spacer(modifier = Modifier.height(16.dp))
-
-                    Text(text = "Password")
-
-                    StandardTextField(
-                        text = viewModel.passwordText.value,
-                        onValueChange = {
-                            viewModel.setPasswordText(it)
-                        },
-                        hint = stringResource(id = R.string.password_hint),
-                        keyboardType = KeyboardType.Password,
-                        error = viewModel.passwordError.value,
-                        isPasswordVisible = viewModel.showPassword.value,
-                        onPasswordToggleClick = {
-                            viewModel.setShowPassword(it)
-                        }
-                    )
-
-                    Spacer(modifier = Modifier.height(14.dp))
-
-                    Text(
-                        modifier = Modifier
-                            .padding(start = 8.dp),
-                        text=stringResource(id = R.string.forgot_password),
-                        color = primaryPink,
-                        style = MaterialTheme.typography.body1,
-                    )
-
-                    Column (
-                        modifier = Modifier
-                            .fillMaxSize(),
-                        verticalArrangement = Arrangement.Bottom
-                    ){
-                        OutlinedButton(
-                            onClick = {
-                                navigator.navigate(RegisterDestination)
-                            },
-                            modifier = Modifier
-                                .fillMaxWidth(),
-                            colors = ButtonDefaults.outlinedButtonColors(
-                                contentColor = Color.White,
-                                backgroundColor = Color.Transparent,
-                            ),
-                            border = BorderStroke(1.dp, primaryPink),
-                            shape = RoundedCornerShape(8)
-                        ) {
-                            Text(
-                                modifier = Modifier
-                                    .fillMaxWidth()
-                                    .padding(8.dp),
-                                textAlign = TextAlign.Center,
-                                text = "Register",
-                                fontSize = 14.sp
-                            )
-                        }
-                        Spacer(modifier = Modifier.height(15.dp))
-
-                        Button(
-                            onClick = {
-                                navigator.navigate(CodeVerificationDestination)
-                            },
-                            modifier = Modifier.fillMaxWidth(),
-                            colors = ButtonDefaults.buttonColors(
-                                contentColor = Color.Red,
-                                backgroundColor = Color.DarkGray
-                            ),
-
-                            ) {
-                            Text(
-                                text = "Enter password to sign in",
-                                color = Color.Black,
-                                fontSize = 16.sp,
-                                modifier = Modifier.padding(8.dp)
-                            )
-                        }
-                        Spacer(modifier = Modifier.height(20.dp))
-
-                    }
-
-
-                }
-
-            }
-        }
-
-
-    }
-
-
-
-}
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/manageDevices/ManageDevices.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/manageDevices/ManageDevices.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/manageDevices/ManageDevices.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/manageDevices/ManageDevices.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,222 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.manageDevices
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.Destination
-import com.chachadeveloper.equitymobile.ui.theme.primaryGray
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@com.ramcosta.composedestinations.annotation.Destination
-fun ManageDevices(navigator: DestinationsNavigator) {
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            title = {
-                Text(
-                    text = "Manage Devices",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            },
-            navActions = {
-                IconButton(onClick = { /*TODO*/ }) {
-                    Image(
-                        painter = painterResource(id = R.drawable.chat_icon),
-                        contentDescription = null,
-                        modifier = Modifier.size(25.dp),
-                        contentScale = ContentScale.Crop,
-                        colorFilter = ColorFilter.tint(color = Color.White)
-                    )
-                }
-            }
-        )
-
-        Box(modifier = Modifier.fillMaxSize(),
-            contentAlignment = Alignment.TopStart
-        ) {
-            Column(
-                modifier = Modifier
-                    .fillMaxSize()
-                    .padding(start = 30.dp, end = 30.dp)
-            ){
-
-                Text(text = "Select the devices you want to manage",
-                    color = Color.White,
-                    style = MaterialTheme.typography.body1)
-                Spacer(modifier = Modifier.height(15.dp))
-                Text(text = stringResource(id = R.string.managedevices),
-                    style =  MaterialTheme.typography.body2,
-                    maxLines = 2,
-                    color = Color.White
-                )
-
-                /* cards */
-
-
-                /* Other cards */
-
-                Spacer(modifier = Modifier.height(15.dp))
-                Row(
-                    horizontalArrangement = Arrangement.SpaceEvenly,
-                    verticalAlignment = Alignment.CenterVertically,
-                    modifier = Modifier.fillMaxWidth()
-                ) {
-
-                    Image(
-                        painter =
-                        painterResource(id = R.drawable.ic_support_foreground) ,
-                        contentDescription =  null,
-                        contentScale = ContentScale.Crop,
-                        modifier = Modifier
-                            .size(50.dp)
-                            .clip(CircleShape)
-                            .background(Color.DarkGray),
-                        colorFilter = ColorFilter.tint(color = primaryPink)
-
-                    )
-                    Column(modifier = Modifier.padding(start = 10.dp)){
-                        Text(
-                            text = "Mobile devices",
-                            maxLines = 1,
-                            style= MaterialTheme.typography.body1,
-                            color = Color.White
-                        )
-                        Text(
-                            text = "I devices",
-                            maxLines = 1,
-                            style= MaterialTheme.typography.body1,
-                            color = Color.White
-                        )
-
-
-                    }
-                    Column {
-                        Box(modifier =
-                        Modifier.fillMaxWidth(),
-                            contentAlignment = Alignment.CenterEnd
-                        ){
-                            Icon(
-                                painter =
-                                painterResource(id = R.drawable.ic_chevron_right),
-                                tint = primaryPink,
-                                contentDescription = null,
-
-                                )
-
-                        }
-                    }
-
-
-                }
-                Spacer(modifier = Modifier.height(12.dp))
-                Divider(
-                    color = primaryGray,
-                    thickness = 1.dp,
-                    modifier = Modifier
-                        .padding(
-                            start = 60.dp,
-                            end = 8.dp
-                        )
-                )
-
-
-                Spacer(modifier = Modifier.height(12.dp))
-                /* Pay my Loan*/
-
-
-
-                Row(
-                    horizontalArrangement = Arrangement.SpaceEvenly,
-                    verticalAlignment = Alignment.CenterVertically,
-                    modifier = Modifier.fillMaxWidth()
-                ) {
-
-                    Image(
-                        painter =
-                        painterResource(id = R.drawable.ic_support_foreground) ,
-                        contentDescription =  null,
-                        contentScale = ContentScale.Crop,
-                        modifier = Modifier
-                            .size(50.dp)
-                            .clip(CircleShape)
-                            .background(Color.DarkGray),
-                        colorFilter = ColorFilter.tint(color = primaryPink)
-
-                    )
-                    Column(modifier = Modifier.padding(start = 10.dp)){
-                        Text(
-                            text = "web devices",
-                            maxLines = 1,
-                            style= MaterialTheme.typography.body1,
-                            color = Color.White
-                        )
-                        Text(
-                            text = "0 devices",
-                            maxLines = 1,
-                            style= MaterialTheme.typography.body1,
-                            color = Color.White
-                        )
-
-                    }
-                    Column {
-                        Box(modifier =
-                        Modifier.fillMaxWidth(),
-                            contentAlignment = Alignment.CenterEnd
-                        ){
-                            Icon(
-                                painter =
-                                painterResource(id = R.drawable.ic_chevron_right),
-                                tint = primaryPink,
-                                contentDescription = null,
-
-                                )
-
-                        }
-                    }
-
-
-                }
-
-                Spacer(modifier = Modifier.height(12.dp))
-                Divider(
-                    color = primaryGray,
-                    thickness = 1.dp,
-                    modifier = Modifier
-                        .padding(
-                            start = 60.dp,
-                            end = 8.dp
-                        )
-                )
-
-
-
-
-
-
-            }
-
-
-        }
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPassword/ResetPasswordViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPassword/ResetPasswordViewModel.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPassword/ResetPasswordViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPassword/ResetPasswordViewModel.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,43 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.changeResetPassword
-
-import androidx.compose.runtime.State
-import androidx.compose.runtime.mutableStateOf
-import androidx.lifecycle.ViewModel
-
-class ResetPasswordViewModel : ViewModel() {
-
-    private val _usernameText = mutableStateOf("")
-    val usernameText: State<String> = _usernameText
-
-    private val _passwordText = mutableStateOf("")
-    val passwordText: State<String> = _passwordText
-
-    private val _showPassword = mutableStateOf(false)
-    val showPassword: State<Boolean> = _showPassword
-
-    private val _usernameError = mutableStateOf("")
-    val usernameError: State<String> = _usernameError
-
-    private val _passwordError = mutableStateOf("")
-    val passwordError: State<String> = _passwordError
-
-    fun setUsernameText(username: String) {
-        _usernameText.value = username
-    }
-
-    fun setPasswordText(password: String) {
-        _passwordText.value = password
-    }
-
-    fun setIsUsernameError(error: String) {
-        _usernameError.value = error
-    }
-
-    fun setIsPasswordError(error: String) {
-        _passwordError.value = error
-    }
-
-    fun setShowPassword(showPassword: Boolean) {
-        _showPassword.value = showPassword
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/mainlogin/MainLogin.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/mainlogin/MainLogin.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/mainlogin/MainLogin.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/mainlogin/MainLogin.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,105 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.mainlogin
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.PersonPinCircle
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.remember
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.input.TextFieldValue
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import com.chachadeveloper.equitymobile.presentation.destinations.HomeDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-
-@Composable
-@Preview(showBackground = true)
-fun MainLogin() {
-    Column(modifier = Modifier.fillMaxSize()) {
-        Column {
-            Box(modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ){
-                Column (
-                    modifier = Modifier.fillMaxSize()
-                        .padding(start = 30.dp, end = 30.dp),
-                      horizontalAlignment = Alignment.CenterHorizontally
-                ){
-                    Icon(
-                        imageVector = Icons.Filled.PersonPinCircle,
-                        contentDescription =  null
-                    )
-                    Spacer(modifier = Modifier.height(20.dp))
-
-                    Text(text = "Good morning, Stephen", color = Color.White)
-                    Spacer(modifier = Modifier.height(10.dp))
-
-
-                    Column(modifier = Modifier.fillMaxSize()) {
-                        Text(text = "Password", color = Color.White)
-                        Spacer(modifier = Modifier.height(10.dp))
-
-                        val textState = remember { mutableStateOf(TextFieldValue()) }
-                        TextField(
-                            value = textState.value,
-                            onValueChange = { textState.value = it },
-                            modifier = Modifier.fillMaxWidth()
-                        )
-                        Spacer(modifier = Modifier.height(20.dp))
-
-
-                        Text(
-                            text = "Forget password",
-                            modifier = Modifier.fillMaxWidth(),
-                            textAlign = TextAlign.Center,
-                            color = primaryPink
-                        )
-
-                        Column(
-                            modifier = Modifier.fillMaxSize(),
-                            verticalArrangement = Arrangement.Bottom
-                        ) {
-
-                            Button(
-                                onClick = {
-/*
-                                    navigator.navigate(HomeDestination)
-*/
-                                },
-                                modifier = Modifier.fillMaxWidth(),
-                                colors = ButtonDefaults.buttonColors(
-                                    contentColor = Color.Red,
-                                    backgroundColor = Color.DarkGray
-                                ),
-
-                                ) {
-                                Text(
-                                    text = "Let me in",
-                                    color = Color.Black,
-                                    modifier = Modifier.padding(10.dp)
-                                )
-                            }
-                            Spacer(modifier = Modifier.height(20.dp))
-
-                        }
-
-                    }
-
-
-
-                }
-
-
-            }
-        }
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPin/CreatePin.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPin/CreatePin.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPin/CreatePin.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPin/CreatePin.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,241 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.createPin
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.input.KeyboardType
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import androidx.lifecycle.viewmodel.compose.viewModel
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardTextField
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.SecurityQnDestination
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-import org.koin.androidx.compose.get
-
-@Composable
-@Destination
-fun CreatePin(
-    navigator: DestinationsNavigator,
-    viewModel: CreatePinViewModel = get()) {
-
-    Column(
-        modifier = Modifier.fillMaxSize()
-
-    ) {
-        StandardToolbar(
-            navigator = navigator,
-            showBackArrow = true,
-            title = {
-                Text(
-                    text = "Good News!",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            },
-            navActions = {
-                IconButton(onClick = { /*TODO*/ }) {
-                    Image(
-                        painter = painterResource(id = R.drawable.chat_icon),
-                        contentDescription = null,
-                        modifier = Modifier.size(22.dp),
-                        contentScale = ContentScale.Crop,
-                        colorFilter = ColorFilter.tint(color = Color.White)
-                    )
-                }
-            }
-
-        )
-
-        Column(modifier = Modifier.fillMaxSize()
-            .padding(start = 30.dp, end = 30.dp)) {
-            Box(modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ) {
-
-                Column{
-
-                    Text(
-                        text = stringResource(id = R.string.createPin_header),
-                        style = MaterialTheme.typography.body1
-                    )
-
-                    Spacer(modifier = Modifier.height(10.dp))
-                    Text(
-                        text = stringResource(id = R.string.createPin_hint),
-                        style =  MaterialTheme.typography.body2,
-                        maxLines = 1
-                    )
-
-                    Spacer(modifier = Modifier.height(20.dp))
-
-
-                    Text(text = "PIN")
-
-                    StandardTextField(
-                        text = viewModel.passwordText.value,
-                        onValueChange = {
-                            viewModel.setPasswordText(it)
-                        },
-                        hint = stringResource(id = R.string.password_hint),
-                        keyboardType = KeyboardType.Password,
-                        error = viewModel.passwordError.value,
-                        isPasswordVisible = viewModel.showPassword.value,
-                        onPasswordToggleClick = {
-                            viewModel.setShowPassword(it)
-                        }
-                    )
-
-                    Spacer(modifier = Modifier.height(20.dp))
-
-
-                    Text(text = "Confirm PIN")
-
-                    StandardTextField(
-                        text = viewModel.passwordText.value,
-                        onValueChange = {
-                            viewModel.setPasswordText(it)
-                        },
-                        hint = stringResource(id = R.string.password_hint),
-                        keyboardType = KeyboardType.Password,
-                        error = viewModel.passwordError.value,
-                        isPasswordVisible = viewModel.showPassword.value,
-                        onPasswordToggleClick = {
-                            viewModel.setShowPassword(it)
-                        }
-                    )
-                    Spacer(modifier = Modifier.height(30.dp))
-
-                    /*
-                    Pin Validation Ui
-                     */
-
-                    Column {
-                        Row(
-                            modifier = Modifier.fillMaxWidth().padding(start = 0.dp),
-                            verticalAlignment = Alignment.CenterVertically,
-                            horizontalArrangement = Arrangement.Start,
-
-                        ) {
-
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
-                                contentDescription = null,
-                                modifier = Modifier.size(50.dp),
-                                contentScale = ContentScale.Crop,
-                                colorFilter = ColorFilter.tint(color = Color.White)
-                            )
-                            Text(
-                                text = stringResource(id = R.string.pinValidate_header),
-                                modifier = Modifier.fillMaxWidth().padding(5.dp),
-                                fontSize = 12.sp
-
-                            )
-
-                        }
-                        Spacer(modifier = Modifier.height(10.dp))
-
-                        Row(modifier = Modifier.fillMaxWidth()) {
-
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
-                                contentDescription = null,
-                                modifier = Modifier.size(50.dp),
-                                contentScale = ContentScale.Crop,
-                                colorFilter = ColorFilter.tint(color = Color.White)
-                            )
-
-                            Text(
-                                text = stringResource(id = R.string.validateSequence),
-                                fontSize = 12.sp
-
-                            )
-
-
-                        }
-
-
-
-                        Row(modifier = Modifier.fillMaxWidth()) {
-
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
-                                contentDescription = null,
-                                modifier = Modifier.size(50.dp),
-                                contentScale = ContentScale.Crop,
-                                colorFilter = ColorFilter.tint(color = Color.White)
-                            )
-
-                            Text(
-
-                                text = stringResource(id = R.string.validateRepetetive),
-                                fontSize = 12.sp
-                            )
-
-
-                        }
-
-
-
-
-
-
-
-
-                    }
-
-
-
-
-                    /* Button */
-
-                    Column (
-                        modifier = Modifier
-                            .fillMaxSize(),
-                        verticalArrangement = Arrangement.Bottom
-                    ){
-
-                        Button(
-                            onClick = {
-                                navigator.navigate(SecurityQnDestination)
-                            },
-                            modifier = Modifier.fillMaxWidth(),
-                            colors = ButtonDefaults.buttonColors(
-                                contentColor = Color.Red,
-                                backgroundColor = Color.DarkGray
-                            ),
-
-                            ) {
-                            Text(
-                                text = "Set PIN",
-                                color = Color.Black,
-                                modifier = Modifier.padding(10.dp)
-                            )
-                        }
-                        Spacer(modifier = Modifier.height(20.dp))
-
-                    }
-
-                }
-
-            }
-
-        }
-
-    }
-
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/notification/Notification.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/notification/Notification.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/notification/Notification.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/notification/Notification.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,123 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.notification
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Settings
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.NotificationPreferencesDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@Destination
-fun Notifications(navigator: DestinationsNavigator) {
-    Column(
-        modifier = Modifier
-            .fillMaxSize()
-    ) {
-        /* top bar*/
-        StandardToolbar(
-            navigator = navigator,
-            showBackArrow = true,
-            title = {
-                Text(
-                    text = "Notifications",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body1
-                )
-            },
-        )
-        Spacer(modifier = Modifier.height(5.dp))
-
-
-        Column {
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ) {
-                Column(
-                    modifier = Modifier
-                        .fillMaxSize()
-                        .padding(start = 30.dp, end = 30.dp)
-                ) {
-
-
-                    Card(modifier = Modifier
-                        .fillMaxWidth()
-                        .height(90.dp),
-                        shape= RoundedCornerShape(8.dp)
-                    ){
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .padding(horizontal = 10.dp, vertical = 10.dp)
-                        ) {
-
-                            Icon(imageVector = Icons.Filled.Settings
-                                , contentDescription =  null,
-                                tint = primaryPink,
-                                modifier = Modifier.size(60.dp)
-                            )
-
-                            Column(modifier = Modifier.padding(start = 10.dp)){
-                                Text(
-                                    text = "Notification Preferences",
-                                    maxLines = 1,
-                                    style= MaterialTheme.typography.body1,
-                                    fontSize = 13.sp,
-                                    modifier = Modifier.clickable {
-                                        navigator.navigate(NotificationPreferencesDestination)
-                                    },
-                                )
-
-                            }
-                            Column {
-                                Box(modifier =
-                                Modifier.fillMaxWidth(),
-                                    contentAlignment = Alignment.CenterEnd
-                                ){
-                                    Icon(
-                                        painter =
-                                        painterResource(id = R.drawable.ic_chevron_right),
-                                        tint = primaryPink,
-                                        contentDescription = null,
-
-                                        )
-
-                                }
-                            }
-
-
-                        }
-
-                    }
-
-                }
-            }
-        }
-
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/splash/Splash.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/splash/Splash.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/splash/Splash.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/splash/Splash.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,76 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.splash
-
-import android.view.animation.OvershootInterpolator
-import androidx.compose.animation.ExperimentalAnimationApi
-import androidx.compose.animation.core.Animatable
-import androidx.compose.animation.core.tween
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.LaunchedEffect
-import androidx.compose.runtime.remember
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.unit.dp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.destinations.AuthScreenDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.HomeDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.LoginDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.OnBoardingScreenDestination
-import com.chachadeveloper.equitymobile.util.Constants.SPLASH_SCREEN_DURATION
-import com.google.accompanist.pager.ExperimentalPagerApi
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-import kotlinx.coroutines.Dispatchers
-import kotlinx.coroutines.delay
-import kotlinx.coroutines.withContext
-
-@OptIn(ExperimentalAnimationApi::class, ExperimentalPagerApi::class)
-@Composable
-@Destination(start = true)
-fun Splash(navigator: DestinationsNavigator) {
-    Column(
-        modifier = Modifier.fillMaxSize(),
-        verticalArrangement = Arrangement.Center,
-        horizontalAlignment = Alignment.CenterHorizontally
-    ) {
-
-        val scale = remember {
-            Animatable(0f)
-        }
-
-        val overshootInterpolator = remember {
-            OvershootInterpolator(2.5f)
-        }
-
-        LaunchedEffect(key1 = true) {
-            withContext(Dispatchers.Main) {
-                scale.animateTo(
-                    targetValue = 1.5f,
-                    animationSpec = tween(
-                        durationMillis = 700,
-                        easing = {
-                            overshootInterpolator.getInterpolation(it)
-                        })
-                )
-
-                delay(SPLASH_SCREEN_DURATION)
-                navigator.popBackStack()
-                navigator.navigate(OnBoardingScreenDestination)
-            }
-        }
-
-        Image(
-            painterResource(
-                id = R.drawable.ic_launcher_foreground
-            ),
-            contentDescription = "App-logo",
-            modifier = Modifier
-                .fillMaxWidth()
-                .height(90.dp)
-                .padding(8.dp)
-        )
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/verificationOptions/ChooseVerification.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/verificationOptions/ChooseVerification.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/verificationOptions/ChooseVerification.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/verificationOptions/ChooseVerification.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,295 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.verificationOptions
-
-import androidx.compose.foundation.BorderStroke
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Forward
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.LoginDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.RegisterDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@Destination
-fun ChooseVerification(
-    navigator: DestinationsNavigator
-) {
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            showBackArrow = true,
-            title = {
-                Text(
-                    text = "CodeVerification",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            }
-        )
-        Column {
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ) {
-
-                Column(
-                    modifier = Modifier
-                        .fillMaxSize()
-                        .padding(start = 30.dp, end = 30.dp)
-                ) {
-
-                    Text(text = stringResource(id = R.string.verify_header), style = MaterialTheme.typography.body1)
-                    Spacer(modifier = Modifier.height(15.dp))
-                    Text(text = stringResource(id = R.string.select_hint),
-                        style =  MaterialTheme.typography.body2,
-                        maxLines = 2
-                    )
-
-                    /*cards for verification
-                    * */
-
-                    Card(modifier = Modifier
-                        .fillMaxWidth()
-                        .height(150.dp)
-                        .padding(8.dp),
-                        shape= RoundedCornerShape(20.dp)
-                    ){
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .background(Color.White)
-                                .padding(end = 10.dp)
-                        ) {
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_background) ,
-                                contentDescription =  null,
-                                contentScale = ContentScale.Crop,
-                                modifier = Modifier
-                                    .size(60.dp)
-                                    .clip(CircleShape)
-                            )
-                            Column (modifier = Modifier
-                                .width(250.dp)
-                                .padding(10.dp)
-                            ){
-                                Text(
-                                    text = "By Card" ,
-                                    maxLines = 1,
-                                    style= MaterialTheme.typography.body1,
-                                    color = Color.Black
-                                )
-                                Spacer(modifier = Modifier.height(5.dp))
-                                Text(text = "ATM, debit or credit card",
-                                    maxLines = 1,
-                                    style = MaterialTheme.typography.body2,
-                                    color = Color.Black
-
-                                )
-                            }
-                            Image(imageVector = Icons.Filled.Forward,
-                                contentDescription = null
-                            )
-
-                        }
-
-                    }
-
-                    /*Card 2 verification
-                    * */
-
-                    Card(modifier = Modifier
-                        .fillMaxWidth()
-                        .height(150.dp)
-                        .padding(8.dp),
-                        shape= RoundedCornerShape(20.dp)
-                    ){
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .background(Color.White)
-                                .padding(end = 10.dp)
-                        ) {
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_background) ,
-                                contentDescription =  null,
-                                contentScale = ContentScale.Crop,
-                                modifier = Modifier
-                                    .size(60.dp)
-                                    .clip(CircleShape)
-                            )
-                            Column (modifier = Modifier
-                                .width(250.dp)
-                                .padding(10.dp)
-                            ){
-                                Text(
-                                    text = "By Sms" ,
-                                    maxLines = 1,
-                                    style= MaterialTheme.typography.body1,
-                                    color = Color.Black
-                                )
-                                Spacer(modifier = Modifier.height(5.dp))
-                                Text(text = "25474*****13",
-                                    maxLines = 1,
-                                    style = MaterialTheme.typography.body2,
-                                    color = Color.Black
-
-                                )
-                            }
-                            Image(imageVector = Icons.Filled.Forward,
-                                contentDescription = null
-                            )
-
-                        }
-
-                    }
-
-/*
-                    Spacer(modifier = Modifier.height(16.dp))
-*/
-
-                    /* verification 3
-                    * */
-
-                    Card(modifier = Modifier
-                        .fillMaxWidth()
-                        .height(150.dp)
-                        .padding(8.dp),
-                        shape= RoundedCornerShape(20.dp)
-                    ){
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .background(Color.White)
-                                .padding(end = 10.dp)
-                        ) {
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_background) ,
-                                contentDescription =  null,
-                                contentScale = ContentScale.Crop,
-                                modifier = Modifier
-                                    .size(60.dp)
-                                    .clip(CircleShape)
-                            )
-                            Column (modifier = Modifier
-                                .width(250.dp)
-                                .padding(10.dp)
-                            ){
-                                Text(
-                                    text = "By Email" ,
-                                    maxLines = 1,
-                                    style= MaterialTheme.typography.body1,
-                                    color = Color.Black
-                                )
-                                Spacer(modifier = Modifier.height(5.dp))
-                                Text(text = "s********A4@GMAIL>COM",
-                                    maxLines = 1,
-                                    style = MaterialTheme.typography.body2,
-                                    color = Color.Black
-
-                                )
-                            }
-                            Image(imageVector = Icons.Filled.Forward,
-                                contentDescription = null
-                            )
-
-                        }
-
-                    }
-
-                    /* Buttons
-                           */
-
-                    Column(modifier = Modifier
-                        .fillMaxSize()
-                        .padding(horizontal = 16.dp, vertical = 16.dp),
-                        verticalArrangement = Arrangement.Bottom
-                    ) {
-                        OutlinedButton(
-                            onClick = {
-                                navigator.navigate(LoginDestination)
-                            },
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .padding(start = 8.dp, end = 8.dp),
-                            colors = ButtonDefaults.outlinedButtonColors(
-                                contentColor = Color.White,
-                                backgroundColor = Color.Transparent,
-                            ),
-                            border = BorderStroke(1.dp, primaryPink),
-                            shape = RoundedCornerShape(8)
-                        ) {
-                            Text(
-                                modifier = Modifier
-                                    .fillMaxWidth()
-                                    .padding(8.dp),
-                                textAlign = TextAlign.Center,
-                                text = "I've changed my contact details",
-                                fontSize = 16.sp
-                            )
-                        }
-                        Spacer(modifier = Modifier.height(15.dp))
-                        Button(
-                            onClick = {
-                                navigator.navigate(RegisterDestination)
-                            },
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .padding(start = 8.dp, end = 8.dp),
-                            shape = RoundedCornerShape(8),
-                            colors = ButtonDefaults.buttonColors(
-                                backgroundColor = Color.DarkGray
-                            ),
-
-                            ) {
-                            Text(
-                                modifier = Modifier
-                                    .fillMaxWidth()
-                                    .padding(8.dp),
-                                textAlign = TextAlign.Center,
-                                text = "Confirm",
-                                fontSize = 16.sp
-                            )
-                        }
-                        Spacer(modifier = Modifier.height(20.dp))
-
-                        /* End of Button*/
-
-
-                    }
-
-
-                }
-
-
-            }
-        }
-
-
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/Home.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/Home.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/Home.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/Home.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,249 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.home
-
-import android.widget.Space
-import androidx.compose.animation.ExperimentalAnimationApi
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Forward
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.input.KeyboardType
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import androidx.lifecycle.viewmodel.compose.viewModel
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.domain.model.BottomNavItem
-import com.chachadeveloper.equitymobile.presentation.components.StandardTextField
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.SecurityQnDestination
-import com.chachadeveloper.equitymobile.presentation.onboarding.OnBoardingScreen
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.google.accompanist.pager.ExperimentalPagerApi
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@OptIn(ExperimentalAnimationApi::class, ExperimentalPagerApi::class)
-@Composable
-@Destination
-fun Home(navigator: DestinationsNavigator) {
-    Column(modifier = Modifier.fillMaxSize()
-    ) {
-        StandardToolbar(
-            navigator = navigator,
-            modifier = Modifier.fillMaxSize(),
-            title = {
-                Text(
-                    text = "Home",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body1
-
-
-                )
-            },
-            navActions = {
-                IconButton(onClick = { /*TODO*/ }) {
-                    Image(
-                        painter = painterResource(id = R.drawable.chat_icon),
-                        contentDescription = null,
-                        modifier = Modifier.size(25.dp),
-                        contentScale = ContentScale.Crop,
-                        colorFilter = ColorFilter.tint(color = Color.White)
-                    )
-                }
-            }
-        )
-
-        Column {
-            Box(modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ) {
-                Column(modifier = Modifier
-                    .fillMaxSize()
-                    .padding(start = 30.dp, end = 30.dp),
-                    horizontalAlignment = Alignment.CenterHorizontally
-
-                ) {
-
-                    Text(
-                            text = stringResource(id = R.string.greetings),
-                            style = MaterialTheme.typography.body1
-                        )
-
-                        Spacer(modifier = Modifier.height(5.dp))
-                        Text(
-                            text = stringResource(id = R.string.home_hint),
-                            style =  MaterialTheme.typography.body2,
-                            maxLines = 1
-                        )
-
-                        /* Onboarding*/
-                    
-                    Row(modifier = Modifier.fillMaxWidth().height(150.dp)) {
-                        OnBoardingScreen(navigator = navigator)
-                    }
-
-
-
-
-
-
-
-                        /* My Balance*/
-                        Spacer(modifier = Modifier.height(20.dp))
-
-                            Card(modifier = Modifier
-                                .fillMaxWidth()
-                                .height(100.dp)) {
-                                Column (
-                                    modifier = Modifier
-                                        .fillMaxSize()
-                                        .padding(horizontal = 10.dp, vertical = 10.dp)
-                                ){
-                                    Text(text = " My Balance")
-                                }
-
-                            }
-
-                        /* My Account*/
-
-                        /* Implement Card for My account */
-                        Spacer(modifier = Modifier.height(20.dp))
-                        Column(modifier = Modifier.fillMaxSize()) {
-                            Text(text = "My account", fontSize = 20.sp)
-
-                            Card(modifier = Modifier
-                                .height(150.dp)
-                                .width(250.dp),
-                                shape= RoundedCornerShape(8.dp)
-                            ) {
-                                Column (modifier = Modifier.padding(vertical = 10.dp, horizontal = 10.dp),){
-                                    Row(
-                                        modifier = Modifier.fillMaxWidth(),
-                                        horizontalArrangement = Arrangement.SpaceBetween
-                                    ) {
-                                        Text(
-                                            text = "Stephen Chacha Marwa",
-                                            maxLines = 1,
-                                            fontSize = 14.sp
-                                        )
-                                        Image(
-                                            painter = painterResource(id = R.drawable.more),
-                                            contentDescription =  null,
-                                            modifier = Modifier
-                                                .size(20.dp),
-                                            colorFilter = ColorFilter.tint(color = Color.White)
-                                        )
-
-                                    }
-                                    Spacer(modifier = Modifier.height(3.dp))
-                                    Text(text = "8000.55KES")
-                                }
-                                Column(
-                                    modifier = Modifier
-                                        .fillMaxSize()
-                                        .padding(horizontal = 10.dp, vertical = 10.dp),
-                                    verticalArrangement = Arrangement.Bottom
-
-                                    ) {
-                                    Row(modifier = Modifier.fillMaxWidth()
-                                    ) {
-                                        Text(text = "01101010010101010")
-                                        Spacer(modifier = Modifier.width(5.dp))
-                                        Text(text = "Saving")
-
-                                    }
-
-
-                                }
-
-
-                            }
-
-                            /* Card for add Account */
-//                            Spacer(modifier = Modifier.height(16.dp))
-
-                            Column (modifier = Modifier
-                                .fillMaxSize(),
-                                verticalArrangement = Arrangement.Bottom
-                            ){
-                                Card(modifier = Modifier
-                                    .fillMaxWidth()
-                                    .height(80.dp),
-                                    shape= RoundedCornerShape(8.dp)
-                                ){
-                                    Row(
-                                        horizontalArrangement = Arrangement.SpaceEvenly,
-                                        verticalAlignment = Alignment.CenterVertically,
-                                        modifier = Modifier.fillMaxWidth().padding(start = 10.dp, end = 10.dp))
-                                    {
-                                        Image(
-                                            painter = painterResource(id = R.drawable.ic_launcher_background) ,
-                                            contentDescription =  null,
-                                            contentScale = ContentScale.Crop,
-                                            modifier = Modifier
-                                                .size(50.dp)
-                                                .clip(CircleShape)
-                                        )
-                                        Column (modifier = Modifier.padding(start = 10.dp, end = 10.dp)){
-                                            Text(
-                                                text = "Add account" ,
-                                                maxLines = 1,
-                                                style= MaterialTheme.typography.body1,
-                                            )
-                                            Spacer(modifier = Modifier.height(1.dp))
-                                            Text(text = "Add an account, card or mobile wallet",
-                                                maxLines = 1,
-                                                style = MaterialTheme.typography.body2,
-
-                                            )
-                                        }
-                                        Column {
-                                            Box(modifier =
-                                            Modifier.fillMaxWidth(),
-                                                contentAlignment = Alignment.CenterEnd
-                                            ){
-                                                Icon(
-                                                    painter =
-                                                    painterResource(id = R.drawable.ic_chevron_right),
-                                                    tint = primaryPink,
-                                                    contentDescription = null,
-
-                                                    )
-
-                                            }
-                                        }
-                                    }
-
-                                }
-
-                            }
-                            Spacer(modifier = Modifier.height(40.dp))
-
-                        }
-
-
-
-                }
-
-            }
-
-        }
-      
-       
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/fingerprint/FingerPrint.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/fingerprint/FingerPrint.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/fingerprint/FingerPrint.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/fingerprint/FingerPrint.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,114 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.fingerprint
-
-import androidx.compose.foundation.BorderStroke
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Fingerprint
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.presentation.components.CustomToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.LoginDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-fun FingerPrint(navigator: DestinationsNavigator) {
-    Column(modifier = Modifier.fillMaxSize()) {
-        CustomToolbar(
-            navigator = navigator,
-            showBackArrow = true,
-            title = {
-                Text(
-                    text = "Set up FingerPrint ID",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            }
-        )
-        Column(modifier = Modifier.fillMaxSize(),
-            horizontalAlignment = Alignment.CenterHorizontally,
-            verticalArrangement = Arrangement.Center
-        ) {
-            IconButton(onClick = { /*TODO*/ }) {
-                Icons.Filled.Fingerprint
-            }
-
-            Text(text = "Sign in with Fingerprint ID")
-            Text(text = "You can use Fingerprint ID to sign in")
-
-            Column(modifier = Modifier
-                .fillMaxSize()
-                .padding(start = 30.dp, end = 30.dp),
-                verticalArrangement = Arrangement.Bottom
-            ) {
-
-
-                Spacer(modifier = Modifier.height(16.dp))
-                OutlinedButton(
-                    onClick = {
-                        navigator.navigate(LoginDestination)
-                    },
-                    modifier = Modifier
-                        .fillMaxWidth()
-                        .padding(start = 8.dp, end = 8.dp),
-                    colors = ButtonDefaults.outlinedButtonColors(
-                        contentColor = Color.White,
-                        backgroundColor = Color.Transparent,
-                    ),
-                    border = BorderStroke(1.dp, primaryPink),
-                    shape = RoundedCornerShape(8)
-                ) {
-                    Text(
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .padding(8.dp),
-                        textAlign = TextAlign.Center,
-                        text = "Skip this step",
-                        fontSize = 16.sp
-                    )
-                }
-                Spacer(modifier = Modifier.height(15.dp))
-                Button(
-                    onClick = {
-                    },
-                    modifier = Modifier
-                        .fillMaxWidth()
-                        .padding(start = 8.dp, end = 8.dp),
-                    shape = RoundedCornerShape(8),
-                    colors = ButtonDefaults.buttonColors(
-/*
-                            contentColor = Color.Red,
-*/
-                        backgroundColor = primaryPink
-                    ),
-
-                    ) {
-                    Text(
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .padding(8.dp),
-                        textAlign = TextAlign.Center,
-                        text = "Ok, set up now",
-                        color = Color.Black,
-                        fontSize = 16.sp
-                    )
-                }
-                Spacer(modifier = Modifier.height(20.dp))
-
-
-            }
-
-
-        }
-
-    }
-
-}
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/support/Support.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/support/Support.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/support/Support.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/support/Support.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,441 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.support
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.ui.theme.primaryGray
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@Destination
-fun Support(navigator: DestinationsNavigator) {
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            title = {
-                Text(
-                    text = "Get in touch",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body1
-                )
-            },
-            navActions = {
-                IconButton(onClick = { /*TODO*/ }) {
-                    Image(
-                        painter = painterResource(id = R.drawable.chat_icon),
-                        contentDescription = null,
-                        modifier = Modifier.size(25.dp),
-                        contentScale = ContentScale.Crop,
-                        colorFilter = ColorFilter.tint(color = Color.White)
-                    )
-                }
-            }
-        )
-
-        Column(verticalArrangement = Arrangement.Top) {
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ) {
-                Column(
-                    modifier = Modifier
-                        .fillMaxSize()
-                        .padding(start = 30.dp, end = 30.dp)
-                ) {
-
-                    Text(
-                        text = "How can we help you?",
-                        maxLines = 1,
-                        style = MaterialTheme.typography.body2,
-                    )
-                    Spacer(modifier = Modifier.height(1.dp))
-                    Text(
-                        text = stringResource(id = R.string.getInTouch),
-                        maxLines = 2,
-                        style = MaterialTheme.typography.body2,
-                    )
-
-                    /* Other cards */
-                    Spacer(modifier = Modifier.height(15.dp))
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_phone_foreground),
-                            contentDescription = null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(30.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)) {
-                            Text(
-                                text = "Call us",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "+254763000000",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(
-                                modifier =
-                                Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ) {
-                                Icon(
-                                    painter = painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-                                )
-
-                            }
-                        }
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = android.R.drawable.ic_dialog_email),
-                            contentDescription = null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(30.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)) {
-                            Text(
-                                text = "Email",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "info@equitybank@co.ke",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(
-                                modifier =
-                                Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ) {
-                                Icon(
-                                    painter = painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-                        Image(
-                            painter = painterResource(id = R.drawable.ic_support_foreground),
-                            contentDescription = null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(30.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)) {
-                            Text(
-                                text = "Visit our website",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "https://equityholdings.com/ke",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(
-                                modifier =
-                                Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ) {
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-                            }
-                        }
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_twitter),
-                            contentDescription = null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(30.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)) {
-                            Text(
-                                text = "Follow us on Twitter",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "KeEquityBank",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(
-                                modifier =
-                                Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ) {
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic__facebook),
-                            contentDescription = null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(30.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)) {
-                            Text(
-                                text = "Like us on Facebook",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "https://www.facebook.com/KeEquityBank/",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(
-                                modifier =
-                                Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ) {
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                )
-
-                            }
-                        }
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic__linkedin),
-                            contentDescription = null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(30.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)) {
-                            Text(
-                                text = "Follow us on LinkedIn",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "Equity Bank Limited",
-                                maxLines = 1,
-                                style = MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(
-                                modifier =
-                                Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ) {
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-                                )
-                            }
-                        }
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-                    Spacer(modifier = Modifier.height(12.dp))
-                }
-            }
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/onboarding/OnBoarding.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/onboarding/OnBoarding.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/onboarding/OnBoarding.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/onboarding/OnBoarding.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,154 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.onboarding
-
-import androidx.compose.runtime.Composable
-import com.chachadeveloper.equitymobile.presentation.destinations.AuthScreenDestination
-import com.chachadeveloper.equitymobile.presentation.util.OnBoardingPage
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-import androidx.compose.animation.AnimatedVisibility
-import androidx.compose.animation.ExperimentalAnimationApi
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.material.Button
-import androidx.compose.material.ButtonDefaults
-import androidx.compose.material.MaterialTheme
-import androidx.compose.material.Text
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import com.google.accompanist.pager.*
-import com.ramcosta.composedestinations.annotation.Destination
-import org.koin.androidx.compose.get
-
-@ExperimentalAnimationApi
-@ExperimentalPagerApi
-@Composable
-@Destination
-fun OnBoardingScreen(
-    navigator: DestinationsNavigator,
-    viewModel: OnBoardingViewModel = get()
-) {
-    val pages = listOf(
-        OnBoardingPage.First,
-        OnBoardingPage.Second,
-        OnBoardingPage.Third
-    )
-    val pagerState = rememberPagerState(pageCount = 3)
-
-    Column(modifier = Modifier.fillMaxSize()) {
-        HorizontalPager(
-            modifier = Modifier.weight(10f),
-            state = pagerState,
-            verticalAlignment = Alignment.Top
-        ) { position ->
-            PagerScreen(onBoardingPage = pages[position])
-        }
-        HorizontalPagerIndicator(
-            modifier = Modifier
-                .align(Alignment.CenterHorizontally)
-                .weight(1f),
-            pagerState = pagerState
-        )
-        FinishButton(
-            modifier = Modifier.weight(1f),
-            pagerState = pagerState
-        ) {
-            viewModel.saveOnBoardingState(completed = false)
-            navigator.navigate(AuthScreenDestination)
-        }
-    }
-}
-
-@Composable
-fun PagerScreen(onBoardingPage: OnBoardingPage) {
-    Column(
-        modifier = Modifier
-            .fillMaxWidth(),
-        horizontalAlignment = Alignment.CenterHorizontally,
-        verticalArrangement = Arrangement.Top
-    ) {
-        Image(
-            modifier = Modifier
-                .fillMaxWidth(0.5f)
-                .fillMaxHeight(0.7f),
-            painter = painterResource(id = onBoardingPage.image),
-            contentDescription = "Pager Image"
-        )
-        Text(
-            modifier = Modifier
-                .fillMaxWidth(),
-            text = onBoardingPage.title,
-            fontSize = MaterialTheme.typography.h4.fontSize,
-            fontWeight = FontWeight.Bold,
-            textAlign = TextAlign.Center
-        )
-        Text(
-            modifier = Modifier
-                .fillMaxWidth()
-                .padding(horizontal = 40.dp)
-                .padding(top = 20.dp),
-            text = onBoardingPage.description,
-            fontSize = MaterialTheme.typography.subtitle1.fontSize,
-            fontWeight = FontWeight.Medium,
-            textAlign = TextAlign.Center
-        )
-    }
-}
-
-@ExperimentalAnimationApi
-@ExperimentalPagerApi
-@Composable
-fun FinishButton(
-    modifier: Modifier,
-    pagerState: PagerState,
-    onClick: () -> Unit
-) {
-    Row(
-        modifier = modifier
-            .padding(horizontal = 40.dp),
-        verticalAlignment = Alignment.Top,
-        horizontalArrangement = Arrangement.Center
-    ) {
-        AnimatedVisibility(
-            modifier = Modifier.fillMaxWidth(),
-            visible = pagerState.currentPage == 2
-        ) {
-            Button(
-                onClick = onClick,
-                colors = ButtonDefaults.buttonColors(
-                    contentColor = Color.White
-                )
-            ) {
-                Text(text = "Finish")
-            }
-        }
-    }
-}
-
-@Composable
-@Preview(showBackground = true)
-fun FirstOnBoardingScreenPreview() {
-    Column(modifier = Modifier.fillMaxSize()) {
-        PagerScreen(onBoardingPage = OnBoardingPage.First)
-    }
-}
-
-@Composable
-@Preview(showBackground = true)
-fun SecondOnBoardingScreenPreview() {
-    Column(modifier = Modifier.fillMaxSize()) {
-        PagerScreen(onBoardingPage = OnBoardingPage.Second)
-    }
-}
-
-@Composable
-@Preview(showBackground = true)
-fun ThirdOnBoardingScreenPreview() {
-    Column(modifier = Modifier.fillMaxSize()) {
-        PagerScreen(onBoardingPage = OnBoardingPage.Third)
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/getloan/GetLoan.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/getloan/GetLoan.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/getloan/GetLoan.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/getloan/GetLoan.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,142 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.getloan
-
-import androidx.compose.foundation.BorderStroke
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.CustomToolbar
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.LoginDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.RegisterDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@Destination
-fun GetLoan(navigator: DestinationsNavigator) {
-    Column(modifier = Modifier.fillMaxSize()) {
-
-        CustomToolbar(
-            navigator = navigator,
-            showBackArrow = true,
-            modifier = Modifier.fillMaxSize(),
-            title = {
-                Text(
-                    text = "Get Loan",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body1
-                )
-            }
-        )
-        Column {
-            Box(modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ){
-              Column(modifier = Modifier.fillMaxSize()
-                  .padding(start = 30.dp, end = 30.dp)) {
-
-                  Image(
-                      painter = painterResource(id = R.drawable.ic_loan),
-                      contentDescription =  null,
-                      modifier = Modifier
-                          .fillMaxWidth()
-                          .height(180.dp)
-
-                  )
-
-                  Spacer(modifier =Modifier.height(30.dp))
-                  Text(text = "General purpose Loan", color = Color.White)
-                  Text(text = stringResource(id = R.string.purpose1), maxLines = 2)
-                  Spacer(modifier =Modifier.height(15.dp))
-                  Text(text = stringResource(id = R.string.purpose2), maxLines = 2)
-                  Spacer(modifier =Modifier.height(15.dp))
-                  Text(text = stringResource(id = R.string.purpose3), maxLines = 1)
-                  Spacer(modifier =Modifier.height(15.dp))
-                  Text(text = stringResource(id = R.string.purpose4), maxLines = 1)
-
-
-
-                  Column(modifier = Modifier
-                      .fillMaxSize(),
-                      verticalArrangement = Arrangement.Bottom
-                  ) {
-
-                      OutlinedButton(
-                          onClick = {
-                              navigator.navigate(LoginDestination)
-                          },
-                          modifier = Modifier
-                              .fillMaxWidth()
-                              .padding(start = 8.dp, end = 8.dp),
-                          colors = ButtonDefaults.outlinedButtonColors(
-                              contentColor = Color.White,
-                              backgroundColor = Color.Transparent,
-                          ),
-                          border = BorderStroke(1.dp, Color.White),
-                          shape = RoundedCornerShape(8)
-                      ) {
-                          Text(
-                              modifier = Modifier
-                                  .fillMaxWidth()
-                                  .padding(8.dp),
-                              textAlign = TextAlign.Center,
-                              text = "Check loan limit",
-                              fontSize = 16.sp
-                          )
-                      }
-                      Spacer(modifier = Modifier.height(16.dp))
-                      Button(
-                          onClick = {
-                              navigator.navigate(RegisterDestination)
-                          },
-                          modifier = Modifier
-                              .fillMaxWidth()
-                              .padding(start = 8.dp, end = 8.dp),
-                          shape = RoundedCornerShape(8),
-                          colors = ButtonDefaults.buttonColors(
-                              backgroundColor = primaryPink
-                          ),
-
-                          ) {
-                          Text(
-                              modifier = Modifier
-                                  .fillMaxWidth()
-                                  .padding(8.dp),
-                              textAlign = TextAlign.Center,
-                              text = "Apply now",
-                              color = Color.Black,
-                              fontSize = 16.sp
-                          )
-                      }
-                      Spacer(modifier = Modifier.height(20.dp))
-
-
-                  }
-
-
-              }
-
-
-            }
-
-        }
-
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/register/RegisterViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/register/RegisterViewModel.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/register/RegisterViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/register/RegisterViewModel.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,53 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.register
-
-import androidx.compose.runtime.State
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.setValue
-import androidx.lifecycle.ViewModel
-import com.chachadeveloper.equitymobile.presentation.util.Country
-import com.chachadeveloper.equitymobile.presentation.util.getCountriesList
-
-class RegisterViewModel : ViewModel() {
-    var mobileNumber by mutableStateOf("")
-    var mobileCountryCode by mutableStateOf("")
-
-    val countriesList = getCountriesList()
-    var mobileCountry by mutableStateOf<Country?>(null)
-
-    private val _usernameText = mutableStateOf("")
-    val usernameText: State<String> = _usernameText
-
-    private val _emailText = mutableStateOf("")
-    val emailText: State<String> = _emailText
-
-    private val _passwordText = mutableStateOf("")
-    val passwordText: State<String> = _passwordText
-
-    private val _showPassword = mutableStateOf(false)
-    val showPassword: State<Boolean> = _showPassword
-
-    private val _usernameError = mutableStateOf("")
-    val usernameError: State<String> = _usernameError
-
-    private val _emailError = mutableStateOf("")
-    val emailError: State<String> = _emailError
-
-    private val _passwordError = mutableStateOf("")
-    val passwordError: State<String> = _passwordError
-
-    private val _rememberMeState = mutableStateOf(false)
-    val rememberMeState: State<Boolean> = _rememberMeState
-    fun setRememberMe(value: Boolean) {
-        _rememberMeState.value = value
-    }
-
-    fun setUsernameText(username: String) {
-        _usernameText.value = username
-    }
-
-    fun setEmailText(email: String) {
-        _emailText.value = email
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/onboarding/OnBoardingViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/onboarding/OnBoardingViewModel.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/onboarding/OnBoardingViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/onboarding/OnBoardingViewModel.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,20 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.onboarding
-
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.viewModelScope
-import com.chachadeveloper.equitymobile.data.repository.DataStoreRepository
-import kotlinx.coroutines.Dispatchers
-import kotlinx.coroutines.launch
-import org.koin.androidx.compose.get
-
-class OnBoardingViewModel(
-    private val repository: DataStoreRepository
-) : ViewModel() {
-
-    fun saveOnBoardingState(completed: Boolean) {
-        viewModelScope.launch(Dispatchers.IO) {
-            repository.saveOnBoardingState(completed = completed)
-        }
-    }
-
-}
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/more/More.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/more/More.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/more/More.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/more/More.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,545 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.more
-
-import android.content.Intent
-import android.net.Uri
-import android.widget.Toast
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.lazy.LazyColumn
-import androidx.compose.foundation.lazy.items
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Forward
-import androidx.compose.material.icons.filled.Language
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.remember
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.platform.LocalContext
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import androidx.core.content.ContextCompat.startActivity
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.changeLanguage.ChangeLanguage
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.ChangeLanguageDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.NotificationsDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.SecurityDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.SupportDestination
-import com.chachadeveloper.equitymobile.presentation.notification.Notifications
-import com.chachadeveloper.equitymobile.presentation.security.Security
-import com.chachadeveloper.equitymobile.ui.theme.primaryGray
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@Destination
-fun More(navigator: DestinationsNavigator){
-
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            title = {
-                Text(
-                    text = "More",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body1
-                )
-            },
-            navActions = {
-                IconButton(onClick = { /*TODO*/ }) {
-                    Image(
-                        painter = painterResource(id = R.drawable.chat_icon),
-                        contentDescription = null,
-                        modifier = Modifier.size(25.dp),
-                        contentScale = ContentScale.Crop,
-                        colorFilter = ColorFilter.tint(color = Color.White)
-                    )
-                }
-            }
-        )
-
-        Column (verticalArrangement = Arrangement.Top){
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ){
-                Column (modifier = Modifier
-                    .fillMaxSize()
-                    .padding(start = 30.dp, end = 30.dp)
-                ){
-
-                    Card(modifier = Modifier
-                        .fillMaxWidth()
-                        .height(90.dp),
-                        shape= RoundedCornerShape(8.dp)
-                    ){
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .padding(start = 10.dp, end = 10.dp)
-                        ) {
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_background) ,
-                                contentDescription =  null,
-                                contentScale = ContentScale.Crop,
-                                modifier = Modifier
-                                    .size(60.dp)
-                                    .clip(CircleShape)
-                            )
-                            Column (modifier = Modifier
-                                .fillMaxWidth()
-                                .padding(start = 12.dp)
-                            ){
-                                Text(
-                                    text = "Stephen Chacha" ,
-                                    maxLines = 1,
-                                    style= MaterialTheme.typography.body2,
-                                )
-                                Spacer(modifier = Modifier.height(1.dp))
-                                Text(text = "stevechacha4@gmail.com",
-                                    maxLines = 1,
-                                    style = MaterialTheme.typography.body2,
-                                )
-                                Spacer(modifier = Modifier.height(1.dp))
-                                Text(text = "254746656813",
-                                    maxLines = 1,
-                                    style = MaterialTheme.typography.body2,
-                                )
-                            }
-
-
-                        }
-
-                    }
-
-                    /* Other cards */
-
-                    Spacer(modifier = Modifier.height(15.dp))
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .clickable {
-                                navigator.navigate(NotificationsDestination)
-                            }
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_notifications_foreground) ,
-                            contentDescription =  null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Notifications",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "View and manage notification",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp,
-
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .clickable {
-                                navigator.navigate(SecurityDestination)
-                            }
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_security_foreground) ,
-                            contentDescription =  null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Security",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "Change your sign-in details and password",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .clickable {
-                                navigator.navigate(SupportDestination)
-                            }
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_support_foreground) ,
-                            contentDescription =  null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Support",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "Email, call or find us on social media",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .clickable {
-                                navigator.navigate(ChangeLanguageDestination)
-                            }
-                    ) {
-
-                        Icon(imageVector = Icons.Filled.Language,
-                            contentDescription = null,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .background(Color.DarkGray)
-                                .clip(CircleShape),
-                            tint = primaryPink
-                        )
-
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Change language",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_support_foreground) ,
-                            contentDescription =  null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Recommend Equity mobile to a friend",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_signout_foreground) ,
-                            contentDescription =  null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Sign out",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-
-
-                    Text(
-                        text = "Version 0.0.67",
-                        color = Color.DarkGray,
-                        fontSize = 12.sp
-                    )
-
-
-                    Spacer(modifier = Modifier.height(26.dp))
-
-
-
-
-                }
-
-
-            }
-        }
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/notification/NotificationPreferences.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/notification/NotificationPreferences.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/notification/NotificationPreferences.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/notification/NotificationPreferences.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,354 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.notification
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.ui.theme.primaryGray
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@Destination
-fun NotificationPreferences(navigator: DestinationsNavigator) {
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            showBackArrow = true,
-            title = {
-                Text(
-                    text = "Notification Preferences",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body1
-                )
-            }
-        )
-
-
-        Column (verticalArrangement = Arrangement.Top){
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ){
-                Column (modifier = Modifier
-                    .fillMaxSize()
-                    .padding(horizontal = 20.dp, vertical = 20.dp)
-                ){
-                    Text(
-                        text = "Set your notification preferences" ,
-                        maxLines = 1,
-                        style= MaterialTheme.typography.body2,
-                        color = Color.White
-
-                    )
-                    Spacer(modifier = Modifier.height(1.dp))
-                    Text(text = "Select which notifications you would like to receive",
-                        maxLines = 1,
-                        style = MaterialTheme.typography.body2,
-                        color = Color.White
-                    )
-
-
-
-                    /* Other cards */
-
-                    Spacer(modifier = Modifier.height(15.dp))
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Column{
-                            Text(
-                                text = "Service update",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = " Get alerts about any upgrade,outages or schedule downtime",
-                                maxLines = 2,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    /*finish on spamnser*/
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 0.dp,
-                                end = 0.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Column{
-                            Text(
-                                text = "Reminders",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "get notified when your schedule payment are coming up",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 0.dp,
-                                end = 0.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Column{
-                            Text(
-                                text = "Bank account alters",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "Get important update about your bankaccessor cards",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 0.dp,
-                                end = 0.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-                        Column{
-                            Text(
-                                text = "Marketing content",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "We'll let you know about new product to promotion",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 0.dp,
-                                end = 0.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Column{
-                            Text(
-                                text = "Events",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "Get notified about any upcominging important events",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 0.dp,
-                                end = 0.dp
-                            )
-                    )
-
-
-
-
-
-
-
-                }
-
-
-            }
-        }
-
-    }
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/security/Security.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/security/Security.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/security/Security.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/security/Security.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,425 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.security
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.ManageDevicesDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.ManageSecurityQnDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.ResetPasswordDestination
-import com.chachadeveloper.equitymobile.presentation.manageDevices.ManageDevices
-import com.chachadeveloper.equitymobile.presentation.manageSecurityOption.ManageSecurityQn
-import com.chachadeveloper.equitymobile.ui.theme.primaryGray
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-
-@Composable
-@Destination
-fun Security(navigator: DestinationsNavigator) {
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            showBackArrow = true,
-            title = {
-                Text(
-                    text = "Security",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body1
-                )
-            }
-        )
-
-        Column(
-            modifier = Modifier
-                .fillMaxSize()
-                .padding(start = 30.dp, end = 30.dp)
-        ) {
-            /* Other cards */
-
-            Spacer(modifier = Modifier.height(15.dp))
-            Row(
-                horizontalArrangement = Arrangement.SpaceEvenly,
-                verticalAlignment = Alignment.CenterVertically,
-                modifier = Modifier
-                    .fillMaxWidth()
-                    .clickable {
-                        navigator.navigate(ResetPasswordDestination)
-                    }
-            ) {
-
-                Image(
-                    painter =
-                    painterResource(id = R.drawable.ic_support_foreground),
-                    contentDescription = null,
-                    contentScale = ContentScale.Crop,
-                    modifier = Modifier
-                        .size(50.dp)
-                        .clip(CircleShape)
-                        .background(Color.DarkGray),
-                    colorFilter = ColorFilter.tint(color = primaryPink)
-
-                )
-                Column(modifier = Modifier.padding(start = 10.dp)) {
-                    Text(
-                        text = "Change Password",
-                        maxLines = 1,
-                        style = MaterialTheme.typography.body1,
-                        color = Color.White
-                    )
-                    Text(
-                        text = "create a new password",
-                        maxLines = 1,
-                        style = MaterialTheme.typography.body1,
-                        color = Color.White,
-                        fontSize = 10.sp
-                    )
-                }
-                Column {
-                    Box(
-                        modifier =
-                        Modifier.fillMaxWidth(),
-                        contentAlignment = Alignment.CenterEnd
-                    ) {
-                        Icon(
-                            painter =
-                            painterResource(id = R.drawable.ic_chevron_right),
-                            tint = primaryPink,
-                            contentDescription = null,
-
-                            )
-
-                    }
-                }
-
-
-            }
-            Spacer(modifier = Modifier.height(12.dp))
-            Divider(
-                color = primaryGray,
-                thickness = 1.dp,
-                modifier = Modifier
-                    .padding(
-                        start = 8.dp,
-                        end = 8.dp
-                    )
-            )
-
-
-            Spacer(modifier = Modifier.height(12.dp))
-
-
-            Row(
-                horizontalArrangement = Arrangement.SpaceEvenly,
-                verticalAlignment = Alignment.CenterVertically,
-                modifier = Modifier
-                    .fillMaxWidth()
-                    .clickable {
-
-                    }
-            ) {
-
-                Image(
-                    painter =
-                    painterResource(id = R.drawable.ic_support_foreground),
-                    contentDescription = null,
-                    contentScale = ContentScale.Crop,
-                    modifier = Modifier
-                        .size(50.dp)
-                        .clip(CircleShape)
-                        .background(Color.DarkGray),
-                    colorFilter = ColorFilter.tint(color = primaryPink)
-
-                )
-                Column(modifier = Modifier.padding(start = 10.dp)) {
-                    Text(
-                        text = "Manage your PIN",
-                        maxLines = 1,
-                        style = MaterialTheme.typography.body1,
-                        color = Color.White
-                    )
-                    Text(
-                        text = "Reset or change your PIN",
-                        maxLines = 1,
-                        style = MaterialTheme.typography.body1,
-                        color = Color.White,
-                        fontSize = 10.sp
-                    )
-                }
-                Column {
-                    Box(
-                        modifier =
-                        Modifier.fillMaxWidth(),
-                        contentAlignment = Alignment.CenterEnd
-                    ) {
-                        Icon(
-                            painter =
-                            painterResource(id = R.drawable.ic_chevron_right),
-                            tint = primaryPink,
-                            contentDescription = null,
-
-                            )
-
-                    }
-                }
-
-
-            }
-            Spacer(modifier = Modifier.height(12.dp))
-            Divider(
-                color = primaryGray,
-                thickness = 1.dp,
-                modifier = Modifier
-                    .padding(
-                        start = 8.dp,
-                        end = 8.dp
-                    )
-            )
-
-
-            Spacer(modifier = Modifier.height(12.dp))
-
-            Row(
-                horizontalArrangement = Arrangement.SpaceEvenly,
-                verticalAlignment = Alignment.CenterVertically,
-                modifier = Modifier
-                    .fillMaxWidth()
-                    .clickable {
-                        navigator.navigate(ManageSecurityQnDestination)
-                    }
-            ) {
-
-                Image(
-                    painter =
-                    painterResource(id = R.drawable.ic_support_foreground),
-                    contentDescription = null,
-                    contentScale = ContentScale.Crop,
-                    modifier = Modifier
-                        .size(50.dp)
-                        .clip(CircleShape)
-                        .background(Color.DarkGray),
-                    colorFilter = ColorFilter.tint(color = primaryPink)
-
-                )
-                Column(modifier = Modifier.padding(start = 10.dp)) {
-                    Text(
-                        text = "Manage security questions",
-                        maxLines = 1,
-                        style = MaterialTheme.typography.body1,
-                        color = Color.White
-                    )
-                    Text(
-                        text = "Update your security suggestion",
-                        maxLines = 1,
-                        style = MaterialTheme.typography.body1,
-                        color = Color.White,
-                        fontSize = 10.sp
-                    )
-                }
-                Column {
-                    Box(
-                        modifier =
-                        Modifier.fillMaxWidth(),
-                        contentAlignment = Alignment.CenterEnd
-                    ) {
-                        Icon(
-                            painter =
-                            painterResource(id = R.drawable.ic_chevron_right),
-                            tint = primaryPink,
-                            contentDescription = null,
-
-                            )
-
-                    }
-                }
-
-
-            }
-            Spacer(modifier = Modifier.height(12.dp))
-            Divider(
-                color = primaryGray,
-                thickness = 1.dp,
-                modifier = Modifier
-                    .padding(
-                        start = 8.dp,
-                        end = 8.dp
-                    )
-            )
-
-
-            Spacer(modifier = Modifier.height(12.dp))
-
-
-            Row(
-                horizontalArrangement = Arrangement.SpaceEvenly,
-                verticalAlignment = Alignment.CenterVertically,
-                modifier = Modifier.fillMaxWidth()
-            ) {
-
-                Image(
-                    painter =
-                    painterResource(id = R.drawable.ic_support_foreground),
-                    contentDescription = null,
-                    contentScale = ContentScale.Crop,
-                    modifier = Modifier
-                        .size(50.dp)
-                        .clip(CircleShape)
-                        .background(Color.DarkGray),
-                    colorFilter = ColorFilter.tint(color = primaryPink)
-
-                )
-                Column(modifier = Modifier.padding(start = 10.dp)) {
-                    Text(
-                        text = "Enable touch ID",
-                        maxLines = 1,
-                        style = MaterialTheme.typography.body1,
-                        color = Color.White
-                    )
-                    Text(
-                        text = "Unlock with Touch ID",
-                        maxLines = 1,
-                        style = MaterialTheme.typography.body1,
-                        color = Color.White,
-                        fontSize = 10.sp
-                    )
-                }
-                Column {
-                    Box(
-                        modifier =
-                        Modifier.fillMaxWidth(),
-                        contentAlignment = Alignment.CenterEnd
-                    ) {
-                        Icon(
-                            painter =
-                            painterResource(id = R.drawable.ic_chevron_right),
-                            tint = primaryPink,
-                            contentDescription = null,
-
-                            )
-
-                    }
-                }
-
-
-            }
-            Spacer(modifier = Modifier.height(12.dp))
-            Divider(
-                color = primaryGray,
-                thickness = 1.dp,
-                modifier = Modifier
-                    .padding(
-                        start = 8.dp,
-                        end = 8.dp
-                    )
-            )
-
-
-            Spacer(modifier = Modifier.height(12.dp))
-
-            Row(
-                horizontalArrangement = Arrangement.SpaceEvenly,
-                verticalAlignment = Alignment.CenterVertically,
-                modifier = Modifier
-                    .fillMaxWidth()
-                    .clickable {
-                        navigator.navigate(ManageDevicesDestination)
-                    }
-            ) {
-
-                Image(
-                    painter =
-                    painterResource(id = R.drawable.ic_support_foreground),
-                    contentDescription = null,
-                    contentScale = ContentScale.Crop,
-                    modifier = Modifier
-                        .size(50.dp)
-                        .clip(CircleShape)
-                        .background(Color.DarkGray),
-                    colorFilter = ColorFilter.tint(color = primaryPink)
-
-                )
-                Column(modifier = Modifier.padding(start = 10.dp)) {
-                    Text(
-                        text = "Managed your device",
-                        maxLines = 1,
-                        style = MaterialTheme.typography.body1,
-                        color = Color.White
-                    )
-                    Text(
-                        text = "Manage the devices connected to your profile",
-                        maxLines = 2,
-                        style = MaterialTheme.typography.body1,
-                        color = Color.White,
-                        fontSize = 10.sp
-                    )
-                }
-                Column {
-                    Box(
-                        modifier =
-                        Modifier.fillMaxWidth(),
-                        contentAlignment = Alignment.CenterEnd
-                    ) {
-                        Icon(
-                            painter =
-                            painterResource(id = R.drawable.ic_chevron_right),
-                            tint = primaryPink,
-                            contentDescription = null,
-
-                            )
-
-                    }
-                }
-
-
-            }
-            Spacer(modifier = Modifier.height(12.dp))
-            Divider(
-                color = primaryGray,
-                thickness = 1.dp,
-                modifier = Modifier
-                    .padding(
-                        start = 8.dp,
-                        end = 8.dp
-                    )
-            )
-
-
-            Spacer(modifier = Modifier.height(12.dp))
-
-
-
-        }
-
-
-
-
-
-    }
-
-
-
-
-
-}
-
-
-
-
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPin/CreatePinViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPin/CreatePinViewModel.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPin/CreatePinViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPin/CreatePinViewModel.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,43 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.createPin
-
-import androidx.compose.runtime.State
-import androidx.compose.runtime.mutableStateOf
-import androidx.lifecycle.ViewModel
-
-class CreatePinViewModel : ViewModel() {
-    private val _usernameText = mutableStateOf("")
-    val usernameText: State<String> = _usernameText
-
-    private val _passwordText = mutableStateOf("")
-    val passwordText: State<String> = _passwordText
-
-    private val _showPassword = mutableStateOf(false)
-    val showPassword: State<Boolean> = _showPassword
-
-    private val _usernameError = mutableStateOf("")
-    val usernameError: State<String> = _usernameError
-
-    private val _passwordError = mutableStateOf("")
-    val passwordError: State<String> = _passwordError
-
-    fun setUsernameText(username: String) {
-        _usernameText.value = username
-    }
-
-    fun setPasswordText(password: String) {
-        _passwordText.value = password
-    }
-
-    fun setIsUsernameError(error: String) {
-        _usernameError.value = error
-    }
-
-    fun setIsPasswordError(error: String) {
-        _passwordError.value = error
-    }
-
-    fun setShowPassword(showPassword: Boolean) {
-        _showPassword.value = showPassword
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeLanguage/ChangeLanguage.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeLanguage/ChangeLanguage.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeLanguage/ChangeLanguage.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeLanguage/ChangeLanguage.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,125 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.changeLanguage
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Language
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.Destination
-import com.chachadeveloper.equitymobile.presentation.destinations.HomeDestination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@com.ramcosta.composedestinations.annotation.Destination
-fun ChangeLanguage(navigator: DestinationsNavigator) {
-    Column(
-        modifier = Modifier
-            .fillMaxSize()
-    ) {
-        StandardToolbar(
-            navigator = navigator,
-            title = {
-                Text(
-                    text = "Create Password",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            }
-        )
-
-
-        Column (modifier = Modifier
-            .fillMaxSize()
-            .padding(start = 30.dp, end = 30.dp)
-        ) {
-
-
-            Text(text = "Choose your language")
-            Text(text = "Chagua lugha/Hitamo")
-
-            Row(modifier = Modifier.fillMaxWidth()) {
-
-                Icon(imageVector = Icons.Filled.Language,
-                    contentDescription = null
-                )
-
-                Text(text = "English")
-
-            }
-
-            Row(modifier = Modifier.fillMaxWidth()) {
-
-                Icon(imageVector = Icons.Filled.Language,
-                    contentDescription = null
-                )
-
-                Text(text = "Swahili")
-
-            }
-
-
-            Row(modifier = Modifier.fillMaxWidth()) {
-
-                Icon(imageVector = Icons.Filled.Language,
-                    contentDescription = null
-                )
-
-                Text(text = "French")
-
-            }
-
-            Row(modifier = Modifier.fillMaxWidth()) {
-                var selected: Boolean = false
-
-                RadioButton(selected,
-                    onClick = {
-                        selected =!selected
-                    })
-
-                Text(text = "Kinyarwanda")
-
-
-
-            }
-
-
-            Column (
-                modifier = Modifier
-                    .fillMaxSize(),
-                verticalArrangement = Arrangement.Bottom
-            ){
-
-                Button(
-                    onClick = {
-                        navigator.navigate(HomeDestination)
-                    },
-                    modifier = Modifier.fillMaxWidth(),
-                    colors = ButtonDefaults.buttonColors(
-                        contentColor = Color.Red,
-                        backgroundColor = Color.DarkGray
-                    ),
-
-                    ) {
-                    Text(
-                        text = "Confirm",
-                        color = Color.Black,
-                        modifier = Modifier.padding(10.dp)
-                    )
-                }
-                Spacer(modifier = Modifier.height(20.dp))
-
-            }
-
-
-        }
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/register/Register.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/register/Register.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/register/Register.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/register/Register.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,450 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.register
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.foundation.text.KeyboardActions
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Message
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.rememberCoroutineScope
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.focus.FocusDirection
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.platform.LocalFocusManager
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.input.ImeAction
-import androidx.compose.ui.text.input.KeyboardType
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import androidx.lifecycle.viewmodel.compose.viewModel
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.AppTextField
-import com.chachadeveloper.equitymobile.presentation.components.BottomSheetToolbar
-import com.chachadeveloper.equitymobile.presentation.components.StandardTextField
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.country.CountryPickerView
-import com.chachadeveloper.equitymobile.presentation.createPin.CreatePinViewModel
-import com.chachadeveloper.equitymobile.presentation.destinations.CreatePasswordDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.CreatePinDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.HomeDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.SecurityDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryGray
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-import kotlinx.coroutines.launch
-import org.koin.androidx.compose.get
-
-@OptIn(ExperimentalMaterialApi::class)
-@Composable
-@Destination
-fun Register(
-    navigator: DestinationsNavigator,
-    viewModel: RegisterViewModel = get()
-) {
-    val sheetState = rememberBottomSheetState(
-        initialValue = BottomSheetValue.Collapsed)
-    
-    val scaffoldState = rememberBottomSheetScaffoldState(
-        bottomSheetState = sheetState)
-
-    val scope = rememberCoroutineScope()
-
-    BottomSheetScaffold(
-        scaffoldState = scaffoldState,
-        sheetContent = {
-            Box(
-                modifier = Modifier
-                .fillMaxWidth()
-                .height(650.dp),
-                contentAlignment = Alignment.TopStart
-            ){
-                Column(
-                    modifier = Modifier
-                    .fillMaxSize()
-                ) {
-                    BottomSheetToolbar(
-                        navigator = navigator,
-                        modifier = Modifier.fillMaxSize(),
-                        showBackArrow = true,
-                        title = {
-                            Text(
-                                text = "Country",
-                                modifier = Modifier.fillMaxWidth(),
-                                style = MaterialTheme.typography.body1,
-                            )
-                        }
-                    )
-                    Column(
-                        modifier = Modifier.fillMaxSize()
-                        .padding(start = 30.dp, end =30.dp)
-                    ) {
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .clickable {
-                                    navigator.navigate(SecurityDestination)
-                                }
-                        ) {
-                            Image(
-                                painter =
-                                painterResource(id = R.drawable.ic_security_foreground) ,
-                                contentDescription =  null,
-                                contentScale = ContentScale.Crop,
-                                modifier = Modifier
-                                    .size(50.dp)
-                                    .clip(CircleShape)
-                                    .background(Color.DarkGray),
-                                colorFilter = ColorFilter.tint(color = primaryPink)
-                            )
-                            Column(
-                                modifier = Modifier
-                                    .padding(start = 10.dp)
-                            ){
-                                Text(
-                                    text = "Kenya",
-                                    maxLines = 1,
-                                    style= MaterialTheme.typography.body1,
-                                    color = Color.White
-                                )
-                            }
-                            Column {
-                                Box(
-                                    modifier = Modifier.fillMaxWidth(),
-                                    contentAlignment = Alignment.CenterEnd
-                                ){
-                                    Icon(
-                                        painter = painterResource(id = R.drawable.ic_chevron_right),
-                                        tint = primaryPink,
-                                        contentDescription = null,
-                                        )
-                                }
-                            }
-                        }
-                        Spacer(modifier = Modifier.height(12.dp))
-                        Divider(
-                            color = primaryGray,
-                            thickness = 1.dp,
-                            modifier = Modifier
-                                .padding(
-                                    start = 8.dp,
-                                    end = 8.dp
-                                )
-                        )
-                        Spacer(modifier = Modifier.height(12.dp))
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .clickable {
-                                    navigator.navigate(SecurityDestination)
-                                }
-                        ) {
-
-                            Image(
-                                painter =
-                                painterResource(id = R.drawable.ic_security_foreground) ,
-                                contentDescription =  null,
-                                contentScale = ContentScale.Crop,
-                                modifier = Modifier
-                                    .size(50.dp)
-                                    .clip(CircleShape)
-                                    .background(Color.DarkGray),
-                                colorFilter = ColorFilter.tint(color = primaryPink)
-
-                            )
-                            Column(modifier = Modifier.padding(start = 10.dp)){
-                                Text(
-                                    text = "Tanzania",
-                                    maxLines = 1,
-                                    style= MaterialTheme.typography.body1,
-                                    color = Color.White
-                                )
-
-                            }
-                            Column {
-                                Box(modifier =
-                                Modifier.fillMaxWidth(),
-                                    contentAlignment = Alignment.CenterEnd
-                                ){
-                                    Icon(
-                                        painter =
-                                        painterResource(id = R.drawable.ic_chevron_right),
-                                        tint = primaryPink,
-                                        contentDescription = null,
-                                        )
-                                }
-                            }
-                        }
-                        Spacer(modifier = Modifier.height(12.dp))
-                        Divider(
-                            color = primaryGray,
-                            thickness = 1.dp,
-                            modifier = Modifier
-                                .padding(
-                                    start = 70.dp,
-                                    end = 8.dp
-                                )
-                        )
-                        Spacer(modifier = Modifier.height(12.dp))
-                    }
-                }
-            }
-
-        },
-        sheetPeekHeight = 0.dp,
-        sheetBackgroundColor = Color.DarkGray
-    ) {
-        Column(
-            modifier = Modifier.fillMaxSize()
-        ) {
-<<<<<<< HEAD
-=======
-<<<<<<< HEAD
->>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b
-            StandardToolbar(
-                navigator = navigator,
-                modifier = Modifier.fillMaxSize(),
-                showBackArrow = true,
-                title = {
-                    Text(
-                        text = "Register",
-                        textAlign = TextAlign.Center,
-                        modifier = Modifier.fillMaxWidth(),
-                        style = MaterialTheme.typography.body1
-                    )
-                },
-                navActions = {
-                    IconButton(onClick = { /*TODO*/ }) {
-                        Image(
-                            painter = painterResource(id = R.drawable.chat_icon),
-                            contentDescription = null,
-                            modifier = Modifier.size(22.dp),
-                            contentScale = ContentScale.Crop,
-                            colorFilter = ColorFilter.tint(color = Color.White)
-                        )
-                    }
-                }
-            )
-            Spacer(modifier = Modifier.height(16.dp))
-            val rememberMeState = viewModel.rememberMeState.value
-            Column {
-                Box(
-                    modifier = Modifier.fillMaxSize(),
-                    contentAlignment = Alignment.TopStart
-                ) {
-                    Column(
-                        modifier = Modifier
-                            .fillMaxSize()
-                            .padding(start = 30.dp, end = 30.dp)
-                    ) {
-                        Text(text = "Create your profile", style = MaterialTheme.typography.body1)
-                        Spacer(modifier = Modifier.height(15.dp))
-                        Text(
-                            text = stringResource(id = R.string.signin),
-                            style = MaterialTheme.typography.body2,
-                            maxLines = 2
-                        )
-                        Spacer(modifier = Modifier.height(16.dp))
-<<<<<<< HEAD
-                        Column(
-                            modifier = Modifier
-                                .fillMaxSize()
-                                .padding(start = 30.dp, end = 30.dp)
-                        ) {
-                            Text(
-                                text = "Create your profile",
-                                style = MaterialTheme.typography.body1
-                            )
-                            Spacer(modifier = Modifier.height(15.dp))
-                            Text(
-                                text = stringResource(id = R.string.signin),
-                                style = MaterialTheme.typography.body2,
-                                maxLines = 2
-                            )
-                            Spacer(modifier = Modifier.height(16.dp))
-=======
-=======
-            Column(
-                modifier = Modifier
-                    .fillMaxSize()
-                    .padding(start = 30.dp, end = 30.dp)
-            ) {
-                Text(text = "Create your profile", style = MaterialTheme.typography.body1)
-                Spacer(modifier = Modifier.height(15.dp))
-                Text(
-                    text = stringResource(id = R.string.signin),
-                    style = MaterialTheme.typography.body2,
-                    maxLines = 2
-                )
-                Spacer(modifier = Modifier.height(16.dp))
->>>>>>> b086056dbfb6be1f69f74076a1c2e9dfa10a1e33
->>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b
-
-                            Text(text = "Country",
-                                modifier = Modifier.clickable {
-                                    scope.launch {
-                                        if (sheetState.isCollapsed) {
-                                            sheetState.expand()
-                                        } else {
-                                            sheetState.collapse()
-                                        }
-                                    }
-
-                                }
-
-                            )
-/*
-                val focusManager = LocalFocusManager.current
-
-                AppTextField(
-                    text = viewModel.mobileNumber,
-                    placeholder = "Country",
-                    onChange = {
-                        viewModel.mobileNumber = it
-                    },
-                    imeAction = ImeAction.Next,//Show next as IME button
-                    keyboardType = KeyboardType.Phone, //Plain text keyboard
-                    keyBoardActions = KeyboardActions(
-                        onNext = {
-                            focusManager.moveFocus(FocusDirection.Down)
-                        }
-                    ),
-                    leadingIcon = {
-                        viewModel.mobileCountry?.let {
-                            CountryPickerView(
-                                countries = viewModel.countriesList,
-                                selectedCountry = it,
-                                onSelection = { selectedCountry ->
-                                    viewModel.mobileCountry = selectedCountry
-                                },
-                            )
-                        }
-                    }
-
-                )*/
-
-                            StandardTextField(
-                                text = viewModel.usernameText.value,
-                                onValueChange = {
-                                    viewModel.setUsernameText(it)
-                                },
-                                keyboardType = KeyboardType.Text,
-                                error = viewModel.usernameError.value,
-                                hint = stringResource(id = R.string.country),
-                                modifier = Modifier.clickable {
-                                    scope.launch {
-                                        if (sheetState.isCollapsed) {
-                                            sheetState.expand()
-                                        } else {
-                                            sheetState.collapse()
-                                        }
-                                    }
-
-                                }
-                            )
-
-                            Spacer(modifier = Modifier.height(16.dp))
-
-                            Text(text = "Account Number")
-                            StandardTextField(
-                                text = viewModel.usernameText.value,
-                                onValueChange = {
-                                    viewModel.setUsernameText(it)
-                                },
-                                keyboardType = KeyboardType.Number,
-                                error = viewModel.usernameError.value,
-                                hint = stringResource(id = R.string.account_hint),
-                            )
-
-                            Spacer(modifier = Modifier.height(16.dp))
-
-                            Text(text = "ID number")
-                            StandardTextField(
-                                text = viewModel.usernameText.value,
-                                onValueChange = {
-                                    viewModel.setUsernameText(it)
-                                },
-                                keyboardType = KeyboardType.Number,
-                                error = viewModel.usernameError.value,
-                                hint = stringResource(id = R.string.idnumber_hint),
-                            )
-
-                            Spacer(modifier = Modifier.height(16.dp))
-
-                            Row(
-                                Modifier.fillMaxWidth(),
-                                horizontalArrangement = Arrangement.SpaceBetween,
-                                verticalAlignment = Alignment.CenterVertically
-                            ) {
-                                Row(
-                                    horizontalArrangement = Arrangement.SpaceEvenly,
-                                    verticalAlignment = Alignment.CenterVertically
-                                ) {
-                                    Checkbox(
-                                        checked = rememberMeState,
-                                        onCheckedChange = {
-                                            viewModel.setRememberMe(it)
-                                        },
-                                    )
-                                    Text(
-                                        text = "I agree to the terms and privacy policy",
-                                        fontSize = 12.sp,
-                                        color = Color.White
-                                    )
-                                }
-                            }
-
-                            Column(
-                                modifier = Modifier
-                                    .fillMaxSize(),
-                                verticalArrangement = Arrangement.Bottom
-                            ) {
-                                Button(
-                                    onClick = {
-                                        navigator.navigate(CreatePasswordDestination)
-                                    },
-                                    modifier = Modifier.fillMaxWidth(),
-                                    colors = ButtonDefaults.buttonColors(
-                                        contentColor = Color.Red,
-                                        backgroundColor = Color.DarkGray
-                                    )
-                                ) {
-                                    Text(
-                                        text = "Create profile + add accounts",
-                                        color = Color.Black,
-                                        modifier = Modifier.padding(10.dp)
-                                    )
-                                }
-
-                                Spacer(modifier = Modifier.height(20.dp))
-
-                            }
-
-                        }
-
-                    }
-                }
-            }
-
-
-        }
-    }
-
-
-}
-
-
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/payLoan/PayLoan.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/payLoan/PayLoan.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/payLoan/PayLoan.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/payLoan/PayLoan.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,151 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.payLoan
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.KeyboardArrowDown
-import androidx.compose.material.icons.filled.KeyboardArrowUp
-import androidx.compose.runtime.*
-import androidx.compose.runtime.R
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.geometry.Size
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.layout.onGloballyPositioned
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.toSize
-import com.chachadeveloper.equitymobile.presentation.components.StandardSecurityQn
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.CreatePasswordDestination
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@Destination
-fun PayLoan(navigator: DestinationsNavigator) {
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            modifier = Modifier.fillMaxSize(),
-            showBackArrow = true,
-            title = {
-                Text(
-                    text = "Pay Loan",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body1
-
-
-                )
-            }
-        )
-        Column(modifier = Modifier
-            .fillMaxSize()
-            .padding(start = 30.dp, end = 30.dp)
-        ) {
-            // Declaring a boolean value to store
-            // the expanded state of the Text Field
-            var mExpanded by remember { mutableStateOf(false) }
-
-            // Create a list of cities
-            val mCities = listOf("Delhi", "Mumbai", "Chennai", "Kolkata", "Hyderabad", "Bengaluru", "Pune")
-
-            // Create a string value to store the selected city
-            var mSelectedText by remember { mutableStateOf("") }
-
-            var mTextFieldSize by remember { mutableStateOf(Size.Zero) }
-
-            // Up Icon when expanded and down icon when collapsed
-            val icon = if (mExpanded)
-                Icons.Filled.KeyboardArrowUp
-            else
-                Icons.Filled.KeyboardArrowDown
-
-
-            /* Toobar*/
-
-            Text(text = "Please enter the loan payment detail")
-
-            Text(text ="From" )
-            Text(text = "Account No")
-            StandardSecurityQn(
-                text = mSelectedText,
-                onValueChange = { mSelectedText = it },
-                modifier = Modifier
-                    .fillMaxWidth()
-                    .onGloballyPositioned { coordinates ->
-                        // This value is used to assign to
-                        // the DropDown the same width
-                        mTextFieldSize = coordinates.size.toSize()
-                    },
-            )
-
-            Text(text ="To" )
-            Text(text = "Select loan to pay")
-            StandardSecurityQn(
-                text = mSelectedText,
-                onValueChange = { mSelectedText = it },
-                modifier = Modifier
-                    .fillMaxWidth()
-                    .onGloballyPositioned { coordinates ->
-                        // This value is used to assign to
-                        // the DropDown the same width
-                        mTextFieldSize = coordinates.size.toSize()
-                    },
-            )
-
-            Text(text ="Amount" )
-            Text(text = "Select amount")
-            StandardSecurityQn(
-                text = mSelectedText,
-                onValueChange = { mSelectedText = it },
-                modifier = Modifier
-                    .fillMaxWidth()
-                    .onGloballyPositioned { coordinates ->
-                        // This value is used to assign to
-                        // the DropDown the same width
-                        mTextFieldSize = coordinates.size.toSize()
-                    },
-            )
-
-
-
-
-            Column(
-                modifier = Modifier
-                    .fillMaxSize(),
-                verticalArrangement = Arrangement.Bottom
-            ) {
-                Button(
-                    onClick = {
-//                    navigator.navigate(CreatePasswordDestination)
-                    },
-                    modifier = Modifier.fillMaxWidth(),
-                    colors = ButtonDefaults.buttonColors(
-                        contentColor = Color.Red,
-                        backgroundColor = Color.DarkGray)
-                ) {
-                    Text(
-                        text = "Make the payment",
-                        color = Color.Black,
-                        modifier = Modifier.padding(10.dp)
-                    )
-                }
-
-                Spacer(modifier = Modifier.height(20.dp))
-
-            }
-
-        }
-
-
-
-
-
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/CustomTextField.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/CustomTextField.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/CustomTextField.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/CustomTextField.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,182 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.components
-
-import androidx.compose.foundation.BorderStroke
-import androidx.compose.foundation.background
-import androidx.compose.foundation.border
-import androidx.compose.foundation.interaction.MutableInteractionSource
-import androidx.compose.foundation.interaction.collectIsFocusedAsState
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.foundation.text.KeyboardOptions
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Visibility
-import androidx.compose.material.icons.filled.VisibilityOff
-import androidx.compose.runtime.*
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.drawBehind
-import androidx.compose.ui.focus.FocusRequester
-import androidx.compose.ui.focus.focusRequester
-import androidx.compose.ui.geometry.Offset
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.vector.ImageVector
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.semantics.semantics
-import androidx.compose.ui.semantics.testTag
-import androidx.compose.ui.text.TextStyle
-import androidx.compose.ui.text.input.KeyboardType
-import androidx.compose.ui.text.input.PasswordVisualTransformation
-import androidx.compose.ui.text.input.VisualTransformation
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.util.TestTags
-import com.chachadeveloper.equitymobile.ui.theme.Transparent
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-
-@Composable
-fun CustomTextField(
-    modifier: Modifier = Modifier,
-    text: String = "",
-    hint: String = "",
-    maxLength: Int = 50,
-    error: String = "",
-    style: TextStyle = TextStyle(
-        color = MaterialTheme.colors.onBackground
-    ),
-    singleLine: Boolean = true,
-    maxLines: Int = 1,
-    leadingIcon: ImageVector? = null,
-    keyboardType: KeyboardType = KeyboardType.Text,
-    isPasswordToggleDisplayed: Boolean = keyboardType == KeyboardType.Password,
-    isPasswordVisible: Boolean = false,
-    onPasswordToggleClick: (Boolean) -> Unit = {},
-    onValueChange: (String) -> Unit,
-    focusRequester: FocusRequester = FocusRequester()
-) {
-
-    val interactionSource = remember { MutableInteractionSource() }
-    val isFocused by interactionSource.collectIsFocusedAsState()
-
-    val IndicatorUnfocusedWidth = 1.dp
-    val IndicatorFocusedWidth = 2.dp
-    val TextFieldPadding = 16.dp
-    var username by remember { mutableStateOf("") }
-    val color = Color.White.copy(alpha = 0.78F)
-    val textFieldColors = TextFieldDefaults.outlinedTextFieldColors(
-        textColor = color,
-        cursorColor = color,
-        leadingIconColor = color,
-        trailingIconColor = color,
-        focusedBorderColor = primaryPink,
-        unfocusedBorderColor = color.copy(alpha = 0.5F),
-        focusedLabelColor = Color.White,
-        unfocusedLabelColor = color
-    )
-
-    val indicatorColor = if (isFocused) Color.Red else Color.Gray
-    val indicatorWidth = if (isFocused) IndicatorFocusedWidth else IndicatorUnfocusedWidth
- Column(modifier = Modifier.fillMaxWidth()) {
-    TextField(
-        value = text,
-        onValueChange = {
-            if (it.length <= maxLength) {
-                onValueChange(it)
-            }
-        },
-        label = { Text("Enter text") },
-        interactionSource = interactionSource,
-        modifier = Modifier
-            .drawBehind {
-                val strokeWidth = indicatorWidth.value * density
-                val y = size.height - strokeWidth / 2
-                drawLine(
-                    indicatorColor,
-                    Offset(TextFieldPadding.toPx(), y),
-                    Offset(size.width - TextFieldPadding.toPx(), y),
-                    strokeWidth
-                )
-            }
-        .semantics {
-        testTag = TestTags.STANDARD_TEXT_FIELD
-    }
-        .focusRequester(focusRequester = focusRequester),
-        colors = textFieldColors,
-        maxLines = maxLines,
-        textStyle = style,
-        placeholder = {
-            Text(
-                text = hint,
-                style = MaterialTheme.typography.body1
-            )
-        },
-        isError = error != "",
-        keyboardOptions = KeyboardOptions(
-            keyboardType = keyboardType
-        ),
-        visualTransformation = if (!isPasswordVisible && isPasswordToggleDisplayed) {
-            PasswordVisualTransformation()
-        } else {
-            VisualTransformation.None
-        },
-        singleLine = singleLine,
-        leadingIcon = if (leadingIcon != null) {
-            val icon: @Composable () -> Unit = {
-                Icon(
-                    imageVector = leadingIcon,
-                    contentDescription = null,
-                    tint = MaterialTheme.colors.onBackground,
-                    modifier = Modifier.size(25.dp)
-                )
-            }
-            icon
-        } else null,
-        trailingIcon = if(isPasswordToggleDisplayed) {
-            val icon: @Composable () -> Unit = {
-                IconButton(
-                    onClick = {
-                        onPasswordToggleClick(!isPasswordVisible)
-                    },
-                    modifier = Modifier
-                        .semantics {
-                            testTag = TestTags.PASSWORD_TOGGLE
-                        }
-                ) {
-                    Icon(
-                        imageVector = if (isPasswordVisible) {
-                            Icons.Filled.VisibilityOff
-                        } else {
-                            Icons.Filled.Visibility
-                        },
-                        tint = Color.White,
-                        contentDescription = if (isPasswordVisible) {
-                            stringResource(id = R.string.password_visible_content_description)
-                        } else {
-                            stringResource(id = R.string.password_hidden_content_description)
-                        }
-                    )
-                }
-            }
-            icon
-        } else null,
-
-    )
-
-     if (error.isNotEmpty()) {
-         Text(
-             text = error,
-             style = MaterialTheme.typography.body2,
-             color = MaterialTheme.colors.error,
-             textAlign = TextAlign.End,
-             modifier = Modifier
-                 .fillMaxWidth()
-
-
-         )
-     }
-
-
-}
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/OnBoardingHome.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/OnBoardingHome.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/OnBoardingHome.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/OnBoardingHome.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,175 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.home
-
-import android.media.midi.MidiDevice
-import androidx.annotation.FloatRange
-import androidx.compose.animation.core.animateDpAsState
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.material.MaterialTheme
-import androidx.compose.material.Text
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.saveable.rememberSaveable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.google.accompanist.pager.ExperimentalPagerApi
-import com.google.accompanist.pager.HorizontalPager
-import com.google.accompanist.pager.PagerState
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@OptIn(ExperimentalPagerApi::class)
-@Composable
-fun OnBoardingHome(navigator: DestinationsNavigator) {
-    val items = ArrayList<OnBoardingItem>()
-    val pagerState = rememberPagerState(
-        pageCount = items.size,
-        initialOffscreenLimit = 2,
-        infiniteLoop = false,
-        initialPage = 0,
-    )
-
-    items.add(
-        OnBoardingItem(
-            "Send to",
-            "Equity account",
-            R.drawable.ic_launcher_background
-        )
-    )
-
-    items.add(
-        OnBoardingItem(
-            "Send to",
-            "Equity account",
-            R.drawable.ic_launcher_background
-        )
-    )
-
-    items.add(
-        OnBoardingItem(
-            "Send to",
-            "Equity account",
-            R.drawable.ic_launcher_background
-        )
-    )
-    items.add(
-        OnBoardingItem(
-            "Send to",
-            "Equity account",
-            R.drawable.ic_launcher_background
-        )
-    )
-
-    items.add(
-        OnBoardingItem(
-            "Send to",
-            "Equity account",
-            R.drawable.ic_launcher_background
-        )
-    )
-
-    OnBordingHomePager(
-        item = items,
-        pagerState = pagerState,
-        modifier = Modifier,
-        navigator = navigator )
-
-}
-@OptIn(ExperimentalPagerApi::class)
-@Composable
-fun OnBordingHomePager(
-    item: ArrayList<OnBoardingItem>,
-    pagerState: PagerState,
-    modifier: Modifier = Modifier,
-    navigator: DestinationsNavigator) {
-
-    Column {
-        Box(modifier = Modifier.fillMaxSize(),
-            contentAlignment = Alignment.TopStart
-        ){
-
-            HorizontalPager(state = pagerState){ page ->
-                Column(
-                    modifier = Modifier.fillMaxWidth(),
-                    horizontalAlignment = Alignment.CenterHorizontally
-
-                ) {
-                    Image(
-                        painter = painterResource(id = item[page].image),
-                        contentDescription = item[page].title,
-                        modifier = Modifier.size(60.dp)
-                    )
-
-                    Text(
-                        text = item[page].title,
-                        fontSize = 15.sp
-                    )
-                    Text(
-                        text = item[page].desc,
-                        fontSize = 15.sp
-                    )
-
-                    PagerIndicator(item.size, pagerState.currentPage)
-
-                }
-
-
-            }
-
-
-        }
-    }
-
-}
-
-@ExperimentalPagerApi
-@Composable
-fun rememberPagerState(
-    @androidx.annotation.IntRange(from = 0) pageCount: Int,
-    @androidx.annotation.IntRange(from = 0) initialPage: Int = 0,
-    @FloatRange(from = 0.0, to = 1.0) initialPageOffset: Float = 0f,
-    @androidx.annotation.IntRange(from = 1) initialOffscreenLimit: Int = 1,
-    infiniteLoop: Boolean = false
-): PagerState = rememberSaveable(saver = PagerState.Saver) {
-    PagerState(
-        pageCount = pageCount,
-        currentPage = initialPage,
-        currentPageOffset = initialPageOffset,
-        offscreenLimit = initialOffscreenLimit,
-        infiniteLoop = infiniteLoop
-    )
-}
-
-@Composable
-fun PagerIndicator(size: Int, currentPage: Int) {
-    Row(
-        horizontalArrangement = Arrangement.SpaceBetween,
-        modifier = Modifier.padding(top = 20.dp)
-    ) {
-        repeat(size) {
-            Indicator(isSelected = it == currentPage)
-        }
-    }
-}
-
-@Composable
-fun Indicator(isSelected: Boolean) {
-    val width = animateDpAsState(targetValue = if (isSelected) 25.dp else 10.dp)
-
-    Box(
-        modifier = Modifier
-            .padding(1.dp)
-            .height(5.dp)
-            .width(width.value)
-            .clip(CircleShape)
-            .background(
-                if (isSelected) MaterialTheme.colors.primary else Color.DarkGray.copy(alpha = 0.5f)
-            )
-    )
-}
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/auth/AuthScreen.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/auth/AuthScreen.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/auth/AuthScreen.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/auth/AuthScreen.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,161 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.auth
-
-import androidx.compose.foundation.BorderStroke
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.ExperimentalComposeUiApi
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.TextUnit
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import androidx.compose.ui.window.Dialog
-import androidx.compose.ui.window.DialogProperties
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.destinations.LoginDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.RegisterDestination
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-import com.ramcosta.composedestinations.spec.DestinationStyle.Dialog.Default.properties
-import kotlin.system.exitProcess
-
-@OptIn(ExperimentalComposeUiApi::class)
-@Composable
-@Destination
-
-fun AuthScreen(
-    navigator: DestinationsNavigator
-) {
-    Dialog(
-        onDismissRequest = {
-            exitProcess(0)
-        },
-        properties = DialogProperties(
-            dismissOnBackPress = true,
-            dismissOnClickOutside = false,
-            usePlatformDefaultWidth = false
-        )
-    ){
-
-        Column {
-            Box(modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ){
-                Column(verticalArrangement = Arrangement.Center,
-                    horizontalAlignment = Alignment.CenterHorizontally,
-                    modifier = Modifier.fillMaxSize()
-                        .padding(start = 30.dp, end = 30.dp)
-                ) {
-                    
-                    Text(
-                        text = "Welcome to Equity Mobile",
-                        textAlign = TextAlign.Center,
-                        fontSize = 25.sp
-
-                    )
-                    
-                }
-
-                Image(painter = painterResource(id = R.drawable.ic_loan),
-                    contentDescription = null,
-                    modifier = Modifier.fillMaxSize(),
-                    contentScale = ContentScale.Crop,
-
-                )
-
-                Image(
-                    painter = painterResource(id = R.drawable.ic_loan),
-                    contentDescription = null,
-                    modifier = Modifier
-                        .width(150.dp)
-                        .height(120.dp)
-                        .padding(horizontal = 24.dp, vertical = 24.dp),
-                    contentScale = ContentScale.Fit,
-                )
-
-                Column(modifier = Modifier
-                    .fillMaxSize().padding(start = 30.dp, end = 30.dp),
-                    verticalArrangement = Arrangement.Bottom
-                ) {
-                    
-                    Text(
-                        text = "Good evening! Sign in or register to continue",
-                        textAlign = TextAlign.Center,
-                        style = MaterialTheme.typography.body1,
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .padding(start = 8.dp, end = 8.dp)
-                    )
-
-                    Spacer(modifier = Modifier.height(8.dp))
-                    OutlinedButton(
-                        onClick = {
-                            navigator.navigate(LoginDestination)
-                        },
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .padding(start = 8.dp, end = 8.dp),
-                        colors = ButtonDefaults.outlinedButtonColors(
-                            contentColor = Color.White,
-                            backgroundColor = Color.Transparent,
-                        ),
-                        border = BorderStroke(1.dp, Color.White),
-                        shape = RoundedCornerShape(8)
-                    ) {
-                        Text(
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .padding(8.dp),
-                            textAlign = TextAlign.Center,
-                            text = "Enter password to sign in",
-                            fontSize = 16.sp
-                        )
-                    }
-                    Spacer(modifier = Modifier.height(15.dp))
-                    Button(
-                        onClick = {
-                            navigator.navigate(RegisterDestination)
-                        },
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .padding(start = 8.dp, end = 8.dp),
-                        shape = RoundedCornerShape(8),
-                        colors = ButtonDefaults.buttonColors(
-/*
-                            contentColor = Color.Red,
-*/
-                            backgroundColor = Color.White
-                        ),
-
-                    ) {
-                        Text(
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .padding(8.dp),
-                            textAlign = TextAlign.Center,
-                            text = "Register",
-                            color = Color.Red,
-                            fontSize = 16.sp
-                        )
-                    }
-                    Spacer(modifier = Modifier.height(20.dp))
-
-
-                }
-            }
-        }
-
-
-    }
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPIN/ResetPin.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPIN/ResetPin.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPIN/ResetPin.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPIN/ResetPin.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,261 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.changeResetPIN
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Save
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.input.KeyboardType
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.changeResetPassword.ResetPasswordViewModel
-import com.chachadeveloper.equitymobile.presentation.components.StandardTextField
-<<<<<<< HEAD
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-=======
-<<<<<<< HEAD
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-=======
->>>>>>> b086056dbfb6be1f69f74076a1c2e9dfa10a1e33
->>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-import org.koin.androidx.compose.get
-
-@Composable
-@com.ramcosta.composedestinations.annotation.Destination
-fun ResetPin(
-    viewModel: ResetPinViewModel = get(),
-    navigator: DestinationsNavigator
-
-) {
-
-    Column(modifier = Modifier.fillMaxSize()) {
-             StandardToolbar(
-            navigator = navigator,
-            title = {
-                Text(
-                    text = "Change PIN",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            }
-        )
-
-        Column {
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ) {
-
-                Column(
-                    modifier = Modifier.fillMaxSize()
-                        .padding(start = 30.dp, end = 30.dp)
-                ) {
-
-                    Text(
-                        text = "Reset your password",
-                        style = MaterialTheme.typography.body1
-                    )
-
-                    Spacer(modifier = Modifier.height(10.dp))
-                    Text(
-                        text = stringResource(id = R.string.createPassword_hint),
-                        style = MaterialTheme.typography.body2,
-                        maxLines = 1
-                    )
-                    Spacer(modifier = Modifier.height(20.dp))
-
-                    Text(text = "Current Password")
-
-                    StandardTextField(
-                        text = viewModel.passwordText.value,
-                        onValueChange = {
-                            viewModel.setPasswordText(it)
-                        },
-                        hint = stringResource(id = R.string.password_hint),
-                        keyboardType = KeyboardType.Password,
-                        error = viewModel.passwordError.value,
-                        isPasswordVisible = viewModel.showPassword.value,
-                        onPasswordToggleClick = {
-                            viewModel.setShowPassword(it)
-                        }
-                    )
-
-                    Spacer(modifier = Modifier.height(20.dp))
-
-
-                    Text(text = "New password")
-
-                    StandardTextField(
-                        text = viewModel.passwordText.value,
-                        onValueChange = {
-                            viewModel.setPasswordText(it)
-                        },
-                        hint = stringResource(id = R.string.password_hint),
-                        keyboardType = KeyboardType.Password,
-                        error = viewModel.passwordError.value,
-                        isPasswordVisible = viewModel.showPassword.value,
-                        onPasswordToggleClick = {
-                            viewModel.setShowPassword(it)
-                        }
-                    )
-
-                    Spacer(modifier = Modifier.height(20.dp))
-
-                    Text(text = "Confirm password")
-
-
-                    StandardTextField(
-                        text = viewModel.passwordText.value,
-                        onValueChange = {
-                            viewModel.setPasswordText(it)
-                        },
-                        hint = stringResource(id = R.string.password_hint),
-                        keyboardType = KeyboardType.Password,
-                        error = viewModel.passwordError.value,
-                        isPasswordVisible = viewModel.showPassword.value,
-                        onPasswordToggleClick = {
-                            viewModel.setShowPassword(it)
-                        }
-                    )
-
-                    Spacer(modifier = Modifier.height(20.dp))
-
-                    /*
-                    Password Validation Ui
-                     */
-
-                    Column {
-                        Row(modifier = Modifier.fillMaxWidth()) {
-
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
-                                contentDescription = null,
-                                modifier = Modifier.size(50.dp),
-                                contentScale = ContentScale.Crop,
-                                colorFilter = ColorFilter.tint(color = Color.White)
-                            )
-                            Text(
-                                text = stringResource(id = R.string.pinValidate_header),
-                                modifier = Modifier.fillMaxWidth().padding(top = 5.dp)
-                            )
-
-                        }
-                        Spacer(modifier = Modifier.height(10.dp))
-
-                        Row(modifier = Modifier.fillMaxWidth()) {
-
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
-                                contentDescription = null,
-                                modifier = Modifier.size(50.dp),
-                                contentScale = ContentScale.Crop,
-                                colorFilter = ColorFilter.tint(color = Color.White)
-                            )
-
-                            Text(text = stringResource(id = R.string.validateSequence))
-
-
-                        }
-
-
-
-                        Row(modifier = Modifier.fillMaxWidth()) {
-
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
-                                contentDescription = null,
-                                modifier = Modifier.size(50.dp),
-                                contentScale = ContentScale.Crop,
-                                colorFilter = ColorFilter.tint(color = Color.White)
-                            )
-
-                            Text(text = stringResource(id = R.string.validateRepetetive))
-
-
-                        }
-
-                        Row(modifier = Modifier.fillMaxWidth()) {
-
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
-                                contentDescription = null,
-                                modifier = Modifier.size(50.dp),
-                                contentScale = ContentScale.Crop,
-                                colorFilter = ColorFilter.tint(color = Color.White)
-                            )
-
-                            Text(text = "Don't use a previous or old PIN")
-
-
-                        }
-
-                        Row(modifier = Modifier.fillMaxWidth()) {
-
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
-                                contentDescription = null,
-                                modifier = Modifier.size(50.dp),
-                                contentScale = ContentScale.Crop,
-                                colorFilter = ColorFilter.tint(color = Color.White)
-                            )
-
-                            Text(text = "The PIN must match")
-
-
-                        }
-                    }
-
-
-
-
-                    Column(
-                        modifier = Modifier
-                            .fillMaxSize(),
-                        verticalArrangement = Arrangement.Bottom
-                    ) {
-
-                        Button(
-                            onClick = {
-//                                navigator.navigate(CreatePinDestination)
-                            },
-                            modifier = Modifier.fillMaxWidth(),
-                            colors = ButtonDefaults.buttonColors(
-                                contentColor = Color.Red,
-                                backgroundColor = Color.DarkGray
-                            ),
-
-                            ) {
-                            Text(
-                                text = "set PIN",
-                                color = Color.Black,
-                                modifier = Modifier.padding(10.dp)
-                            )
-                        }
-                        Spacer(modifier = Modifier.height(20.dp))
-
-                    }
-
-                }
-
-
-            }
-        }
-
-
-
-
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/codeVerification/CodeVerification.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/codeVerification/CodeVerification.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/codeVerification/CodeVerification.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/codeVerification/CodeVerification.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,101 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.codeVerification
-
-import androidx.compose.foundation.BorderStroke
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.HomeDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.LoginDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@Destination
-fun CodeVerification(
-    navigator: DestinationsNavigator
-) {
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            showBackArrow = true,
-            title = {
-                Text(
-                    text = "Verify",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            }
-        )
-        Column {
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ){
-                Column (modifier = Modifier
-                    .fillMaxSize()
-                    .padding(start = 30.dp, end =30.dp),
-                    ){
-                    Image(painter = painterResource(id = R.drawable.ic_launcher_foreground)
-                        , contentDescription = null,
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .height(200.dp)
-                    )
-
-                    Spacer(modifier = Modifier.height(20.dp))
-
-                    Text(
-                        text = "We have sent a verification code to your " +
-                            "registered 25474******13",
-                        textAlign = TextAlign.Center
-                    )
-                    Spacer(modifier = Modifier.height(10.dp))
-
-                    Column(modifier = Modifier
-                        .fillMaxSize(),
-                        verticalArrangement = Arrangement.Bottom
-                    ) {
-                        OutlinedButton(
-                            onClick = {
-                                navigator.navigate(HomeDestination)
-                            },
-                            modifier = Modifier.fillMaxWidth()
-                                .padding(start = 8.dp, end = 8.dp
-                                ),
-                            colors = ButtonDefaults.outlinedButtonColors(
-                                contentColor = Color.White,
-                                backgroundColor = Color.Transparent,
-                            ),
-                            border = BorderStroke(1.dp, primaryPink),
-                            shape = RoundedCornerShape(8)
-                        ) {
-                            Text(
-                                modifier = Modifier
-                                    .fillMaxWidth()
-                                    .padding(8.dp),
-                                textAlign = TextAlign.Center,
-                                text = "Need help?",
-                                fontSize = 16.sp,
-                                color = primaryPink
-                            )
-                        }
-                        Spacer(modifier = Modifier.height(20.dp))
-                    }
-                }
-            }
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/OnBoardingItem.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/OnBoardingItem.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/OnBoardingItem.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/home/OnBoardingItem.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,7 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.home
-
-data class OnBoardingItem(
-    val title: String,
-    val desc: String,
-    val image: Int
-)
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/managePin/ManagePin.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/managePin/ManagePin.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/managePin/ManagePin.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/managePin/ManagePin.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,211 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.managePin
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.ChooseVerificationDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.ResetPinDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryGray
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@Destination
-fun MangePin(navigator: DestinationsNavigator) {
-
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            showBackArrow = true,
-            title = {
-                Text(
-                    text = "Manage PIN",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            },
-        )
-
-        Box(modifier = Modifier.fillMaxSize(),
-            contentAlignment = Alignment.TopStart
-        ) {
-            Column(
-                modifier = Modifier
-                    .fillMaxSize()
-                    .padding(start = 30.dp, end = 30.dp)
-            ){
-
-
-                /* cards */
-
-
-                /* Other cards */
-
-                Spacer(modifier = Modifier.height(15.dp))
-                Row(
-                    horizontalArrangement = Arrangement.SpaceEvenly,
-                    verticalAlignment = Alignment.CenterVertically,
-                    modifier = Modifier.fillMaxWidth().clickable {
-                        navigator.navigate(ResetPinDestination)
-                    }
-                ) {
-
-                    Image(
-                        painter =
-                        painterResource(id = R.drawable.ic_support_foreground) ,
-                        contentDescription =  null,
-                        contentScale = ContentScale.Crop,
-                        modifier = Modifier
-                            .size(50.dp)
-                            .clip(CircleShape)
-                            .background(Color.DarkGray),
-                        colorFilter = ColorFilter.tint(color = primaryPink)
-
-                    )
-                    Column(modifier = Modifier.padding(start = 10.dp)){
-                        Text(
-                            text = "Change your PIN",
-                            maxLines = 1,
-                            style= MaterialTheme.typography.body1,
-                            color = Color.White
-                        )
-                        Text(
-                            text = "Change your existing PIN",
-                            maxLines = 1,
-                            style= MaterialTheme.typography.body1,
-                            color = Color.White
-                        )
-
-
-                    }
-                    Column {
-                        Box(modifier =
-                        Modifier.fillMaxWidth(),
-                            contentAlignment = Alignment.CenterEnd
-                        ){
-                            Icon(
-                                painter =
-                                painterResource(id = R.drawable.ic_chevron_right),
-                                tint = primaryPink,
-                                contentDescription = null,
-
-                                )
-
-                        }
-                    }
-
-
-                }
-                Spacer(modifier = Modifier.height(12.dp))
-                Divider(
-                    color = primaryGray,
-                    thickness = 1.dp,
-                    modifier = Modifier
-                        .padding(
-                            start = 60.dp,
-                            end = 8.dp
-                        )
-                )
-
-
-                Spacer(modifier = Modifier.height(12.dp))
-                /* Pay my Loan*/
-
-
-
-                Row(
-                    horizontalArrangement = Arrangement.SpaceEvenly,
-                    verticalAlignment = Alignment.CenterVertically,
-                    modifier = Modifier.fillMaxWidth().clickable {
-                        navigator.navigate(ChooseVerificationDestination)
-                    }
-                ) {
-
-                    Image(
-                        painter =
-                        painterResource(id = R.drawable.ic_support_foreground) ,
-                        contentDescription =  null,
-                        contentScale = ContentScale.Crop,
-                        modifier = Modifier
-                            .size(50.dp)
-                            .clip(CircleShape)
-                            .background(Color.DarkGray),
-                        colorFilter = ColorFilter.tint(color = primaryPink)
-
-                    )
-                    Column(modifier = Modifier.padding(start = 10.dp)){
-                        Text(
-                            text = "Reset your PIN",
-                            maxLines = 1,
-                            style= MaterialTheme.typography.body1,
-                            color = Color.White
-                        )
-                        Text(
-                            text = "Reset your PIN if you've forgotten it",
-                            maxLines = 1,
-                            style= MaterialTheme.typography.body1,
-                            color = Color.White
-                        )
-
-                    }
-                    Column {
-                        Box(modifier =
-                        Modifier.fillMaxWidth(),
-                            contentAlignment = Alignment.CenterEnd
-                        ){
-                            Icon(
-                                painter =
-                                painterResource(id = R.drawable.ic_chevron_right),
-                                tint = primaryPink,
-                                contentDescription = null,
-
-                                )
-
-                        }
-                    }
-
-
-                }
-
-                Spacer(modifier = Modifier.height(12.dp))
-                Divider(
-                    color = primaryGray,
-                    thickness = 1.dp,
-                    modifier = Modifier
-                        .padding(
-                            start = 60.dp,
-                            end = 8.dp
-                        )
-                )
-
-
-
-
-
-
-            }
-
-
-        }
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/securityQsn/SecurityQnViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/securityQsn/SecurityQnViewModel.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/securityQsn/SecurityQnViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/securityQsn/SecurityQnViewModel.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,44 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.securityQsn
-
-import androidx.compose.runtime.State
-import androidx.compose.runtime.mutableStateOf
-import androidx.lifecycle.ViewModel
-
-class SecurityQnViewModel : ViewModel() {
-
-
-    private val _usernameText = mutableStateOf("")
-    val usernameText: State<String> = _usernameText
-
-    private val _passwordText = mutableStateOf("")
-    val passwordText: State<String> = _passwordText
-
-    private val _showPassword = mutableStateOf(false)
-    val showPassword: State<Boolean> = _showPassword
-
-    private val _usernameError = mutableStateOf("")
-    val usernameError: State<String> = _usernameError
-
-    private val _passwordError = mutableStateOf("")
-    val passwordError: State<String> = _passwordError
-
-    fun setUsernameText(username: String) {
-        _usernameText.value = username
-    }
-
-    fun setPasswordText(password: String) {
-        _passwordText.value = password
-    }
-
-    fun setIsUsernameError(error: String) {
-        _usernameError.value = error
-    }
-
-    fun setIsPasswordError(error: String) {
-        _passwordError.value = error
-    }
-
-    fun setShowPassword(showPassword: Boolean) {
-        _showPassword.value = showPassword
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/CustomToolbar.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/CustomToolbar.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/CustomToolbar.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/CustomToolbar.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,57 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.components
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.Box
-import androidx.compose.foundation.layout.RowScope
-import androidx.compose.foundation.layout.size
-import androidx.compose.material.Icon
-import androidx.compose.material.IconButton
-import androidx.compose.material.MaterialTheme
-import androidx.compose.material.TopAppBar
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.CropSquare
-import androidx.compose.material.icons.filled.WrongLocation
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.unit.dp
-import com.chachadeveloper.equitymobile.R
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-fun CustomToolbar(
-    modifier: Modifier = Modifier,
-    navigator: DestinationsNavigator,
-    showBackArrow: Boolean = false,
-    navActions: @Composable RowScope.() -> Unit = {},
-    title: @Composable () -> Unit = {}
-) {
-    TopAppBar(
-        title =  title,
-        navigationIcon = {
-            Box( contentAlignment = Alignment.Center){
-                if (showBackArrow) {
-                    IconButton(onClick = {
-                        navigator.navigateUp()
-                    }) {
-                        Icon(imageVector = Icons.Filled.CropSquare,
-                            contentDescription =  null,
-                            tint = Color.White
-
-                        )
-
-                    }
-                }
-            }
-        },
-        backgroundColor = MaterialTheme.colors.primary,
-        actions = navActions ,
-        elevation = 0.dp,
-    )
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/login/LoginViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/login/LoginViewModel.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/login/LoginViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/login/LoginViewModel.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,43 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.login
-
-import androidx.compose.runtime.State
-import androidx.compose.runtime.mutableStateOf
-import androidx.lifecycle.ViewModel
-
-class LoginViewModel : ViewModel() {
-
-    private val _usernameText = mutableStateOf("")
-    val usernameText: State<String> = _usernameText
-
-    private val _passwordText = mutableStateOf("")
-    val passwordText: State<String> = _passwordText
-
-    private val _showPassword = mutableStateOf(false)
-    val showPassword: State<Boolean> = _showPassword
-
-    private val _usernameError = mutableStateOf("")
-    val usernameError: State<String> = _usernameError
-
-    private val _passwordError = mutableStateOf("")
-    val passwordError: State<String> = _passwordError
-
-    fun setUsernameText(username: String) {
-        _usernameText.value = username
-    }
-
-    fun setPasswordText(password: String) {
-        _passwordText.value = password
-    }
-
-    fun setIsUsernameError(error: String) {
-        _usernameError.value = error
-    }
-
-    fun setIsPasswordError(error: String) {
-        _passwordError.value = error
-    }
-
-    fun setShowPassword(showPassword: Boolean) {
-        _showPassword.value = showPassword
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/transact/Transact.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/transact/Transact.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/transact/Transact.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/transact/Transact.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,662 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.transact
-
-import android.widget.Space
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.lazy.LazyColumn
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.ArrowForward
-import androidx.compose.material.icons.filled.ArrowRight
-import androidx.compose.material.icons.filled.Forward
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.util.TestTags
-import com.chachadeveloper.equitymobile.ui.theme.primaryGray
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-import org.xml.sax.SAXParseException
-
-@Composable
-@Destination
-fun Transact(navigator: DestinationsNavigator) {
-    Column(modifier = Modifier
-        .fillMaxSize()
-<<<<<<< HEAD
-=======
-<<<<<<< HEAD
-=======
-
->>>>>>> b086056dbfb6be1f69f74076a1c2e9dfa10a1e33
->>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b
-    ) {
-        StandardToolbar(
-            navigator = navigator,
-            title = {
-                Text(
-                    text = "Transact",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            },
-            navActions = {
-                IconButton(onClick = { /*TODO*/ }) {
-                    Image(
-                        painter = painterResource(id = R.drawable.chat_icon),
-                        contentDescription = null,
-                        modifier = Modifier.size(25.dp),
-                        contentScale = ContentScale.Crop,
-                        colorFilter = ColorFilter.tint(color = Color.White)
-                    )
-                }
-            }
-        )
-        Column {
-            LazyColumn{
-                item {
-                    Column {
-                        Box(modifier = Modifier.fillMaxSize(),
-                            contentAlignment = Alignment.TopStart)
-                        {
-                            Column(modifier = Modifier
-                                .fillMaxSize()
-<<<<<<< HEAD
-                                .padding(horizontal = 30.dp, vertical = 30.dp)
-=======
-<<<<<<< HEAD
-                                .padding(horizontal = 30.dp, vertical = 30.dp)
-=======
-                                .padding(horizontal = 20.dp, vertical = 20.dp)
->>>>>>> b086056dbfb6be1f69f74076a1c2e9dfa10a1e33
->>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b
-
-                            ) {
-                                Text(
-                                    text = "What would you like to do?",
-                                    color = Color.White
-                                )
-                                Spacer(modifier = Modifier.height(12.dp))
-
-                                Card(modifier = Modifier
-                                    .fillMaxWidth()
-                                    .height(150.dp)
-                                    .clip(RoundedCornerShape(8.dp))
-                                ) {
-                                    Column(modifier = Modifier
-                                        .fillMaxSize()
-                                        .padding(16.dp)
-                                    ) {
-                                        Text(
-                                            text = "Favourite"
-                                        )
-                                        Text(
-                                            text = stringResource(id = R.string.favourite),
-                                            maxLines = 2
-                                        )
-                                    }
-                                    Column(modifier = Modifier
-                                        .fillMaxSize()
-                                        .padding(20.dp)
-                                    ) {
-                                        Box(modifier = Modifier.fillMaxSize(),
-                                            contentAlignment = Alignment.BottomEnd,
-                                            ){
-                                            Text(
-                                                text = "Add favourite",
-                                                color = primaryPink
-                                            )
-                                        }
-                                    }
-
-                                }
-                                Spacer(modifier = Modifier.height(12.dp))
-
-                                Text(text = "Send Money",color =  Color.White,
-                                    fontSize = 18.sp)
-                                        Spacer(modifier = Modifier.height(12.dp))
-                                Row(
-                                    horizontalArrangement = Arrangement.SpaceEvenly,
-                                    verticalAlignment = Alignment.CenterVertically,
-                                            modifier = Modifier.fillMaxWidth()
-                                        ) {
-                                            Image(
-                                                painter =
-                                                painterResource(id = R.drawable.ic_support_foreground) ,
-                                                contentDescription =  null,
-                                                contentScale = ContentScale.Crop,
-                                                modifier = Modifier
-                                                    .size(50.dp)
-                                                    .clip(CircleShape)
-                                                    .background(Color.DarkGray),
-                                                colorFilter = ColorFilter.tint(color = primaryPink)
-
-                                            )
-                                            Column (modifier = Modifier.padding(start = 10.dp)
-                                            ){
-                                                Text(
-                                                    text = "Own Equity account",
-                                                    maxLines = 1,
-                                                    style= MaterialTheme.typography.body1,
-                                                    color = Color.White
-                                                )
-                                            }
-                                            Column {
-                                                Box(modifier =
-                                                Modifier.fillMaxWidth(),
-                                                    contentAlignment = Alignment.CenterEnd
-                                                ){
-                                                    Icon(
-                                                        painter =
-                                                        painterResource(id = R.drawable.ic_chevron_right),
-                                                        tint = primaryPink,
-                                                        contentDescription = null,
-
-                                                        )
-                                                }
-                                            }
-                                        }
-                                        Spacer(modifier = Modifier.height(12.dp))
-
-                                        Divider(
-                                            color = primaryGray,
-                                            thickness = 1.dp,
-                                            modifier = Modifier
-                                                .padding(
-                                                    start = 60.dp,
-                                                    end = 8.dp
-                                                )
-                                        )
-                                        Spacer(modifier = Modifier.height(12.dp))
-
-                                        Row(
-                                            horizontalArrangement = Arrangement.SpaceEvenly,
-                                            verticalAlignment = Alignment.CenterVertically,
-                                            modifier = Modifier.fillMaxWidth()
-                                        ) {
-                                            Image(
-                                                painter = painterResource(id = R.drawable.ic_launcher_background) ,
-                                                contentDescription =  null,
-                                                contentScale = ContentScale.Crop,
-                                                modifier = Modifier
-                                                    .size(50.dp)
-                                                    .clip(CircleShape)
-                                            )
-                                            Column (modifier = Modifier.padding(start = 10.dp)
-                                            ){
-                                                Text(
-                                                    text = "Another Equity account",
-                                                    maxLines = 1,
-                                                    style= MaterialTheme.typography.body1,
-                                                    color = Color.White
-                                                )
-                                            }
-                                            Column {
-                                                Box(modifier =
-                                                Modifier.fillMaxWidth(),
-                                                    contentAlignment = Alignment.CenterEnd
-                                                ){
-                                                    Icon(
-                                                        painter =
-                                                        painterResource(id = R.drawable.ic_chevron_right),
-                                                        tint = primaryPink,
-                                                        contentDescription = null,
-
-                                                        )
-
-                                                }
-                                            }
-                                        }
-                                        Spacer(modifier = Modifier.height(12.dp))
-
-                                        Divider(
-                                            color = primaryGray,
-                                            thickness = 1.dp,
-                                            modifier = Modifier
-                                                .padding(
-                                                    start = 60.dp,
-                                                    end = 8.dp
-                                                )
-                                        )
-
-                                        /* Row 3*/
-                                        Spacer(modifier = Modifier.height(12.dp))
-                                        Row(
-                                            horizontalArrangement = Arrangement.SpaceEvenly,
-                                            verticalAlignment = Alignment.CenterVertically,
-                                            modifier = Modifier.fillMaxWidth()
-                                        ) {
-                                            Image(
-                                                painter = painterResource(id = R.drawable.ic_launcher_background) ,
-                                                contentDescription =  null,
-                                                contentScale = ContentScale.Crop,
-                                                modifier = Modifier
-                                                    .size(50.dp)
-                                                    .clip(CircleShape)
-                                            )
-                                            Column (modifier = Modifier.padding(start = 10.dp)
-                                            ){
-                                                Text(
-                                                    text = "Pay to or top up card",
-                                                    maxLines = 1,
-                                                    style= MaterialTheme.typography.body1,
-                                                    color = Color.White
-                                                )
-                                                Text(
-                                                    text = "credit and prepaid cards",
-                                                    maxLines = 1,
-                                                    style= MaterialTheme.typography.body1,
-                                                    color = Color.White,
-                                                    fontSize = 12.sp
-
-                                                )
-                                            }
-                                            Column {
-                                                Box(modifier =
-                                                Modifier.fillMaxWidth(),
-                                                    contentAlignment = Alignment.CenterEnd
-                                                ){
-                                                    Icon(
-                                                        painter =
-                                                        painterResource(id = R.drawable.ic_chevron_right),
-                                                        tint = primaryPink,
-                                                        contentDescription = null,
-
-                                                        )
-
-                                                }
-                                            }
-
-                                        }
-                                        Spacer(modifier = Modifier.height(12.dp))
-
-                                        Divider(
-                                            color = primaryGray,
-                                            thickness = 1.dp,
-                                            modifier = Modifier
-                                                .padding(
-                                                    start = 60.dp,
-                                                    end = 8.dp
-                                                )
-                                        )
-
-
-                                        /* Row 3*/
-                                        Spacer(modifier = Modifier.height(12.dp))
-                                        Row(
-                                            horizontalArrangement = Arrangement.SpaceEvenly,
-                                            verticalAlignment = Alignment.CenterVertically,
-                                            modifier = Modifier.fillMaxWidth()
-                                        ) {
-                                            Image(
-                                                painter = painterResource(id = R.drawable.ic_launcher_background) ,
-                                                contentDescription =  null,
-                                                contentScale = ContentScale.Crop,
-                                                modifier = Modifier
-                                                    .size(50.dp)
-                                                    .clip(CircleShape)
-                                            )
-                                            Column(
-                                                modifier = Modifier.padding(start = 10.dp)
-                                            ) {
-                                                Text(
-                                                    text = "Mobile wallet",
-                                                    maxLines = 1,
-                                                    style = MaterialTheme.typography.body1,
-                                                    color = Color.White
-                                                )
-                                                Text(
-                                                    text = "send to mobile money providers",
-                                                    maxLines = 1,
-                                                    style = MaterialTheme.typography.body1,
-                                                    color = Color.White,
-                                                    fontSize = 12.sp
-                                                )
-                                            }
-                                            Column {
-                                                Box(
-                                                    modifier =
-                                                    Modifier.fillMaxWidth(),
-                                                    contentAlignment = Alignment.CenterEnd
-                                                ) {
-                                                    Icon(
-                                                        painter =
-                                                        painterResource(id = R.drawable.ic_chevron_right),
-                                                        tint = primaryPink,
-                                                        contentDescription = null,
-
-                                                        )
-
-                                                }
-                                            }
-
-                                        }
-                                Spacer(modifier = Modifier.height(12.dp))
-
-                                Divider(
-                                    color = primaryGray,
-                                    thickness = 1.dp,
-                                    modifier = Modifier
-                                        .padding(
-                                            start = 60.dp,
-                                            end = 8.dp
-                                        )
-                                )
-
-
-                                /*Row 5*/
-
-                                Spacer(modifier = Modifier.height(12.dp))
-                                Row(
-                                    horizontalArrangement = Arrangement.SpaceEvenly,
-                                    verticalAlignment = Alignment.CenterVertically,
-                                    modifier = Modifier.fillMaxWidth()
-                                ) {
-                                    Image(
-                                        painter = painterResource(id = R.drawable.ic_launcher_background),
-                                        contentDescription = null,
-                                        contentScale = ContentScale.Crop,
-                                        modifier = Modifier
-                                            .size(50.dp)
-                                            .clip(CircleShape)
-                                    )
-                                    Column(
-                                        modifier = Modifier.padding(start = 10.dp)
-                                    ) {
-                                        Text(
-                                            text = "Another Bank",
-                                            maxLines = 1,
-                                            style = MaterialTheme.typography.body1,
-                                            color = Color.White
-                                        )
-                                    }
-                                    Column {
-                                        Box(
-                                            modifier =
-                                            Modifier.fillMaxWidth(),
-                                            contentAlignment = Alignment.CenterEnd
-                                        ) {
-                                            Icon(
-                                                painter =
-                                                painterResource(id = R.drawable.ic_chevron_right),
-                                                tint = primaryPink,
-                                                contentDescription = null,
-                                                )
-                                        }
-                                    }
-
-
-                                }
-                                Spacer(modifier = Modifier.height(12.dp))
-
-                                Divider(
-                                    color = primaryGray,
-                                    thickness = 1.dp,
-                                    modifier = Modifier
-                                        .padding(
-                                            start = 0.dp,
-                                            end = 0.dp
-                                        )
-                                )
-
-                                Spacer(modifier = Modifier.height(12.dp))
-
-
-                                Text(
-                                    text = "Pay With Equity",
-                                    color = Color.White
-                                )
-
-                                /* Row 3*/
-                                Spacer(modifier = Modifier.height(12.dp))
-                                Row(
-                                    horizontalArrangement = Arrangement.SpaceEvenly,
-                                    verticalAlignment = Alignment.CenterVertically,
-                                    modifier = Modifier.fillMaxWidth()
-                                ) {
-                                    Image(
-                                        painter = painterResource(id = R.drawable.ic_launcher_background),
-                                        contentDescription = null,
-                                        contentScale = ContentScale.Crop,
-                                        modifier = Modifier
-                                            .size(50.dp)
-                                            .clip(CircleShape)
-                                    )
-                                    Column(
-                                        modifier = Modifier.padding(start = 10.dp)
-                                    ) {
-                                        Text(
-                                            text = "Pay bill",
-                                            maxLines = 1,
-                                            style = MaterialTheme.typography.body1,
-                                            color = Color.White
-                                        )
-                                    }
-                                    Column {
-                                        Box(
-                                            modifier = Modifier.fillMaxWidth(),
-                                            contentAlignment = Alignment.CenterEnd
-                                        ) {
-                                            Icon(
-                                                painter =
-                                                painterResource(id = R.drawable.ic_chevron_right),
-                                                tint = primaryPink,
-                                                contentDescription = null,
-                                                )
-                                        }
-                                    }
-
-                                }
-                                Spacer(modifier = Modifier.height(12.dp))
-                                Divider(
-                                    color = primaryGray,
-                                    thickness = 1.dp,
-                                    modifier = Modifier
-                                        .padding(
-                                            start = 60.dp,
-                                            end = 8.dp
-                                        )
-                                )
-
-                                /*Row 5*/
-                                Spacer(modifier = Modifier.height(12.dp))
-                                Row(
-                                    horizontalArrangement = Arrangement.SpaceEvenly,
-                                    verticalAlignment = Alignment.CenterVertically,
-                                    modifier = Modifier.fillMaxWidth()
-                                ) {
-                                    Image(
-                                        painter = painterResource(id = R.drawable.ic_launcher_background),
-                                        contentDescription = null,
-                                        contentScale = ContentScale.Crop,
-                                        modifier = Modifier
-                                            .size(50.dp)
-                                            .clip(CircleShape)
-                                    )
-                                    Column(
-                                        modifier = Modifier.padding(start = 10.dp)
-                                    ) {
-                                        Text(
-                                            text = "Buy goods",
-                                            maxLines = 1,
-                                            style = MaterialTheme.typography.body1,
-                                            color = Color.White
-                                        )
-                                    }
-                                    Column {
-                                        Box(
-                                            modifier =
-                                            Modifier.fillMaxWidth(),
-                                            contentAlignment = Alignment.CenterEnd
-                                        ) {
-                                            Icon(
-                                                painter =
-                                                painterResource(id = R.drawable.ic_chevron_right),
-                                                tint = primaryPink,
-                                                contentDescription = null,
-                                                )
-                                        }
-                                    }
-                                }
-                                Spacer(modifier = Modifier.height(12.dp))
-
-                                Divider(
-                                    color = primaryGray,
-                                    thickness = 1.dp,
-                                    modifier = Modifier
-                                        .padding(
-                                            start = 0.dp,
-                                            end = 0.dp
-                                        )
-                                )
-
-                                Spacer(modifier = Modifier.height(12.dp))
-
-                                Text(text = "Buy",
-                                    color = Color.White
-                                )
-
-                                /* Row 3*/
-                                Spacer(modifier = Modifier.height(12.dp))
-                                Row(
-                                    horizontalArrangement = Arrangement.SpaceEvenly,
-                                    verticalAlignment = Alignment.CenterVertically,
-                                    modifier = Modifier.fillMaxWidth()
-                                ) {
-                                    Image(
-                                        painter = painterResource(id = R.drawable.ic_launcher_background),
-                                        contentDescription = null,
-                                        contentScale = ContentScale.Crop,
-                                        modifier = Modifier
-                                            .size(50.dp)
-                                            .clip(CircleShape)
-                                    )
-                                    Column(
-                                        modifier = Modifier.padding(start = 10.dp)
-                                    ) {
-                                        Text(
-                                            text = "Buy airtime",
-                                            maxLines = 1,
-                                            style = MaterialTheme.typography.body1,
-                                            color = Color.White
-                                        )
-                                    }
-                                    Column {
-                                        Box(
-                                            modifier =
-                                            Modifier.fillMaxWidth(),
-                                            contentAlignment = Alignment.CenterEnd
-                                        ) {
-                                            Icon(
-                                                painter =
-                                                painterResource(id = R.drawable.ic_chevron_right),
-                                                tint = primaryPink,
-                                                contentDescription = null,
-
-                                                )
-                                        }
-                                    }
-                                }
-
-                                Spacer(modifier = Modifier.height(12.dp))
-
-                                Divider(
-                                    color = primaryGray,
-                                    thickness = 1.dp,
-                                    modifier = Modifier
-                                        .padding(
-                                            start = 0.dp,
-                                            end = 0.dp
-                                        )
-                                )
-
-
-                                Spacer(modifier = Modifier.height(12.dp))
-                                Text(
-                                    text = "Withdraw cash",
-                                    color = Color.White
-                                )
-
-                                /* Row 3*/
-                                Spacer(modifier = Modifier.height(12.dp))
-                                Row(
-                                    horizontalArrangement = Arrangement.SpaceEvenly,
-                                    verticalAlignment = Alignment.CenterVertically,
-                                    modifier = Modifier.fillMaxWidth()
-                                ) {
-                                    Image(
-                                        painter = painterResource(id = R.drawable.ic_launcher_background),
-                                        contentDescription = null,
-                                        contentScale = ContentScale.Crop,
-                                        modifier = Modifier
-                                            .size(50.dp)
-                                            .clip(CircleShape)
-                                    )
-                                    Column(
-                                        modifier = Modifier.padding(start = 10.dp)
-                                    ) {
-                                        Text(
-                                            text = "Agent",
-                                            maxLines = 1,
-                                            style = MaterialTheme.typography.body1,
-                                            color = Color.White
-                                        )
-                                    }
-                                    Column {
-                                        Box(
-                                            modifier =
-                                            Modifier.fillMaxWidth(),
-                                            contentAlignment = Alignment.CenterEnd
-                                        ) {
-                                            Icon(
-                                                painter =
-                                                painterResource(id = R.drawable.ic_chevron_right),
-                                                tint = primaryPink,
-                                                contentDescription = null,
-
-                                                )
-                                        }
-                                    }
-
-                                }
-
-                                Spacer(modifier = Modifier.height(12.dp))
-
-                                Divider(
-                                    color = primaryGray,
-                                    thickness = 1.dp,
-                                    modifier = Modifier
-                                        .padding(
-                                            start = 0.dp,
-                                            end = 0.dp
-                                        )
-                                )
-                                Spacer(modifier = Modifier.height(10.dp))
-                            }
-                        }
-                    }
-
-                }
-            }
-        }
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPassword/CreatePassword.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPassword/CreatePassword.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPassword/CreatePassword.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/createPassword/CreatePassword.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,207 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.createPassword
-
-import android.widget.Space
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.input.KeyboardType
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardTextField
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.CreatePinDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.SecurityQnDestination
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-import org.koin.androidx.compose.get
-
-@Composable
-@Destination
-fun CreatePassword(
-    navigator: DestinationsNavigator,
-    viewModel: CreatePasswordViewModel = get()
-) {
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            title = {
-                Text(
-                    text = "Create Password",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            }
-        )
-
-        Column {
-            Box(modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ) {
-
-                Column(modifier = Modifier.fillMaxSize()
-                    .padding(start = 30.dp, end = 30.dp)
-                ) {
-
-                    Text(
-                        text = stringResource(id = R.string.createPasswd_header),
-                        style = MaterialTheme.typography.body1
-                    )
-
-                    Spacer(modifier = Modifier.height(10.dp))
-                    Text(
-                        text = stringResource(id = R.string.createPassword_hint),
-                        style =  MaterialTheme.typography.body2,
-                        maxLines = 1
-                    )
-                    Spacer(modifier = Modifier.height(20.dp))
-
-                    Text(text = "Password")
-
-                    StandardTextField(
-                        text = viewModel.passwordText.value,
-                        onValueChange = {
-                            viewModel.setPasswordText(it)
-                        },
-                        hint = stringResource(id = R.string.password_hint),
-                        keyboardType = KeyboardType.Password,
-                        error = viewModel.passwordError.value,
-                        isPasswordVisible = viewModel.showPassword.value,
-                        onPasswordToggleClick = {
-                            viewModel.setShowPassword(it)
-                        }
-                    )
-
-                    Spacer(modifier = Modifier.height(20.dp))
-
-
-                    Text(text = "Confirm password")
-
-                    StandardTextField(
-                        text = viewModel.passwordText.value,
-                        onValueChange = {
-                            viewModel.setPasswordText(it)
-                        },
-                        hint = stringResource(id = R.string.password_hint),
-                        keyboardType = KeyboardType.Password,
-                        error = viewModel.passwordError.value,
-                        isPasswordVisible = viewModel.showPassword.value,
-                        onPasswordToggleClick = {
-                            viewModel.setShowPassword(it)
-                        }
-                    )
-
-                    Spacer(modifier = Modifier.height(30.dp))
-
-                    /*
-                    Password Validation Ui
-                     */
-                    
-                    Column {
-                        Row(
-                            modifier = Modifier
-                                .fillMaxWidth(),
-                        ) {
-                            Image(
-                                painter =
-                                painterResource(id = R.drawable.ic_launcher_foreground),
-                                contentDescription = null,
-                                modifier = Modifier.size(50.dp),
-                                contentScale = ContentScale.Crop,
-                                colorFilter = ColorFilter.tint(color = Color.White)
-                            )
-                            Text(
-                                text = stringResource(id = R.string.validate_header),
-                                modifier = Modifier.padding(top =5.dp),
-                                textAlign = TextAlign.Center
-                            )
-                            
-                        }
-
-                        Spacer(modifier = Modifier.height(8.dp))
-
-                        Text(
-                            text = stringResource(id = R.string.validateLetter),
-                            maxLines = 2,
-                            style = MaterialTheme.typography.body2
-                        )
-                        Spacer(modifier = Modifier.height(8.dp))
-                        
-                        Text(
-                            text = stringResource(id = R.string.validateCharLong),
-                            maxLines = 1,
-                            style = MaterialTheme.typography.body2
-
-                        )
-                        Spacer(modifier = Modifier.height(8.dp))
-
-                        Text(
-                            text = stringResource(id = R.string.validate_specialChar),
-                            maxLines = 1,
-                            style = MaterialTheme.typography.body2
-
-
-                        )
-                        Spacer(modifier = Modifier.height(8.dp))
-
-                        Text(
-                            text = stringResource(id = R.string.passwordMatch),
-                            maxLines = 1,
-                            style = MaterialTheme.typography.body2
-
-                        )
-                        
-                        
-                    }
-
-
-
-                    /* Button */
-
-                    Column (
-                        modifier = Modifier
-                            .fillMaxSize(),
-                        verticalArrangement = Arrangement.Bottom
-                    ){
-
-                        Button(
-                            onClick = {
-                                navigator.navigate(CreatePinDestination)
-                            },
-                            modifier = Modifier.fillMaxWidth(),
-                            colors = ButtonDefaults.buttonColors(
-                                contentColor = Color.Red,
-                                backgroundColor = Color.DarkGray
-                            ),
-
-                            ) {
-                            Text(
-                                text = "Confirm",
-                                color = Color.Black,
-                                modifier = Modifier.padding(10.dp)
-                            )
-                        }
-                        Spacer(modifier = Modifier.height(20.dp))
-
-                    }
-
-                }
-
-
-            }
-
-
-        }
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/manageSecurityOption/ManageSecurityQn.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/manageSecurityOption/ManageSecurityQn.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/manageSecurityOption/ManageSecurityQn.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/manageSecurityOption/ManageSecurityQn.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,547 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.manageSecurityOption
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.*
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.clip
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.ColorFilter
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.Destination
-import com.chachadeveloper.equitymobile.presentation.destinations.HomeDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryGray
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@com.ramcosta.composedestinations.annotation.Destination
-fun ManageSecurityQn(navigator: DestinationsNavigator) {
-
-    Column(modifier = Modifier.fillMaxSize()) {
-        StandardToolbar(
-            navigator = navigator,
-            title = {
-                Text(
-                    text = "Security questions",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body1
-                )
-            },
-            navActions = {
-                IconButton(onClick = { /*TODO*/ }) {
-                    Image(
-                        painter = painterResource(id = R.drawable.chat_icon),
-                        contentDescription = null,
-                        modifier = Modifier.size(25.dp),
-                        contentScale = ContentScale.Crop,
-                        colorFilter = ColorFilter.tint(color = Color.White)
-                    )
-                }
-            }
-        )
-
-        Column (verticalArrangement = Arrangement.Top){
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ){
-                Column (modifier = Modifier
-                    .fillMaxSize()
-                    .padding(start = 30.dp, end = 30.dp)
-                ){
-
-                    Card(modifier = Modifier
-                        .fillMaxWidth()
-                        .height(90.dp),
-                        shape= RoundedCornerShape(8.dp)
-                    ){
-                        Row(
-                            horizontalArrangement = Arrangement.SpaceEvenly,
-                            verticalAlignment = Alignment.CenterVertically,
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .padding(start = 10.dp, end = 10.dp)
-                        ) {
-                            Image(
-                                painter = painterResource(id = R.drawable.ic_launcher_background) ,
-                                contentDescription =  null,
-                                contentScale = ContentScale.Crop,
-                                modifier = Modifier
-                                    .size(60.dp)
-                                    .clip(CircleShape)
-                            )
-                            Column (modifier = Modifier
-                                .fillMaxWidth()
-                                .padding(start = 12.dp)
-                            ){
-                                Text(
-                                    text = "Stephen Chacha" ,
-                                    maxLines = 1,
-                                    style= MaterialTheme.typography.body2,
-                                )
-                                Spacer(modifier = Modifier.height(1.dp))
-                                Text(text = "stevechacha4@gmail.com",
-                                    maxLines = 1,
-                                    style = MaterialTheme.typography.body2,
-                                )
-                                Spacer(modifier = Modifier.height(1.dp))
-                                Text(text = "254746656813",
-                                    maxLines = 1,
-                                    style = MaterialTheme.typography.body2,
-                                )
-                            }
-
-
-                        }
-
-                    }
-
-                    /* Other cards */
-
-                    Spacer(modifier = Modifier.height(15.dp))
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_support_foreground) ,
-                            contentDescription =  null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Security",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "Change your sign-in details and password",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_support_foreground) ,
-                            contentDescription =  null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Security",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "Change your sign-in details and password",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_support_foreground) ,
-                            contentDescription =  null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Security",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "Change your sign-in details and password",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_support_foreground) ,
-                            contentDescription =  null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Security",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "Change your sign-in details and password",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_support_foreground) ,
-                            contentDescription =  null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Security",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "Change your sign-in details and password",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-                    Row(
-                        horizontalArrangement = Arrangement.SpaceEvenly,
-                        verticalAlignment = Alignment.CenterVertically,
-                        modifier = Modifier.fillMaxWidth()
-                    ) {
-
-                        Image(
-                            painter =
-                            painterResource(id = R.drawable.ic_support_foreground) ,
-                            contentDescription =  null,
-                            contentScale = ContentScale.Crop,
-                            modifier = Modifier
-                                .size(50.dp)
-                                .clip(CircleShape)
-                                .background(Color.DarkGray),
-                            colorFilter = ColorFilter.tint(color = primaryPink)
-
-                        )
-                        Column(modifier = Modifier.padding(start = 10.dp)){
-                            Text(
-                                text = "Security",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White
-                            )
-                            Text(
-                                text = "Change your sign-in details and password",
-                                maxLines = 1,
-                                style= MaterialTheme.typography.body1,
-                                color = Color.White,
-                                fontSize = 10.sp
-                            )
-                        }
-                        Column {
-                            Box(modifier =
-                            Modifier.fillMaxWidth(),
-                                contentAlignment = Alignment.CenterEnd
-                            ){
-                                Icon(
-                                    painter =
-                                    painterResource(id = R.drawable.ic_chevron_right),
-                                    tint = primaryPink,
-                                    contentDescription = null,
-
-                                    )
-
-                            }
-                        }
-
-
-                    }
-                    Spacer(modifier = Modifier.height(12.dp))
-                    Divider(
-                        color = primaryGray,
-                        thickness = 1.dp,
-                        modifier = Modifier
-                            .padding(
-                                start = 8.dp,
-                                end = 8.dp
-                            )
-                    )
-
-
-                    Spacer(modifier = Modifier.height(12.dp))
-
-
-
-                    Column (
-                        modifier = Modifier
-                            .fillMaxSize(),
-                        verticalArrangement = Arrangement.Bottom
-                    ){
-
-                        Button(
-                            onClick = {
-                                navigator.navigate(HomeDestination)
-                            },
-                            modifier = Modifier.fillMaxWidth(),
-                            colors = ButtonDefaults.buttonColors(
-                                contentColor = Color.Red,
-                                backgroundColor = Color.DarkGray
-                            ),
-
-                            ) {
-                            Text(
-                                text = "Edit Question",
-                                color = Color.Black,
-                                modifier = Modifier.padding(10.dp)
-                            )
-                        }
-                        Spacer(modifier = Modifier.height(20.dp))
-
-                    }
-
-
-
-
-
-                }
-
-
-            }
-        }
-
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPIN/ResetPinViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPIN/ResetPinViewModel.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPIN/ResetPinViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/changeResetPIN/ResetPinViewModel.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,43 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.changeResetPIN
-
-import androidx.compose.runtime.State
-import androidx.compose.runtime.mutableStateOf
-import androidx.lifecycle.ViewModel
-
-class ResetPinViewModel : ViewModel() {
-
-    private val _usernameText = mutableStateOf("")
-    val usernameText: State<String> = _usernameText
-
-    private val _passwordText = mutableStateOf("")
-    val passwordText: State<String> = _passwordText
-
-    private val _showPassword = mutableStateOf(false)
-    val showPassword: State<Boolean> = _showPassword
-
-    private val _usernameError = mutableStateOf("")
-    val usernameError: State<String> = _usernameError
-
-    private val _passwordError = mutableStateOf("")
-    val passwordError: State<String> = _passwordError
-
-    fun setUsernameText(username: String) {
-        _usernameText.value = username
-    }
-
-    fun setPasswordText(password: String) {
-        _passwordText.value = password
-    }
-
-    fun setIsUsernameError(error: String) {
-        _usernameError.value = error
-    }
-
-    fun setIsPasswordError(error: String) {
-        _passwordError.value = error
-    }
-
-    fun setShowPassword(showPassword: Boolean) {
-        _showPassword.value = showPassword
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/loanApplication/LoanApplication.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/loanApplication/LoanApplication.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/loanApplication/LoanApplication.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/loanApplication/LoanApplication.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,157 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.loanApplication
-
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.layout.*
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.FilterBAndW
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.CustomToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.GetLoanDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryPink
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-
-@Composable
-@com.ramcosta.composedestinations.annotation.Destination
-fun LoanApplication(navigator: DestinationsNavigator) {
-    Column(modifier = Modifier.fillMaxSize()) {
-        CustomToolbar(
-            navigator = navigator,
-            showBackArrow = true,
-            modifier = Modifier.fillMaxSize(),
-            title = {
-                Text(
-                    text = "Get Loan",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body1
-                )
-            }
-        )
-        Column {
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = Alignment.TopStart
-            ) {
-                Column(modifier = Modifier.fillMaxSize()
-                    .padding(start = 30.dp, end = 30.dp)) {
-
-                    Text(
-                        text = "Apply for a Loan",
-                        color = Color.White
-                    )
-                    Spacer(modifier = Modifier.height(20.dp))
-                    Text(
-                        text = stringResource(id = R.string.loanDesc) ,
-                        maxLines = 2
-                    )
-                    Spacer(modifier = Modifier.height(25.dp))
-
-                    Row(
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .padding(start = 10.dp)
-                    ) {
-                        IconButton(onClick = { /*TODO*/ }) {
-                            Icon(
-                                imageVector = Icons.Filled.FilterBAndW,
-                                contentDescription = null
-                            )
-                        }
-                        Text(text = "Filter by",
-                            textAlign = TextAlign.Center
-                        )
-                    }
-                    Column(horizontalAlignment = Alignment.Start) {
-                        Button(
-                            onClick = { /*TODO*/ },
-                            modifier = Modifier
-                                .width(30.dp)
-                                .height(15.dp)
-                        ) {
-                            Text(
-                                text = "Instant",
-                                color = Color.White
-                            )
-                        }
-                    }
-                    Card(
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .height(180.dp)
-                    ) {
-                        Column(
-                            modifier = Modifier
-                                .fillMaxSize()
-                                .padding(15.dp)
-                        ) {
-                            Text(
-                                text = "General purpose Loan",
-                                color = Color.White)
-
-                            Text(
-                                text = stringResource(id = R.string.purpose),
-                                    maxLines = 2
-                            )
-
-                        }
-
-                        Column(
-                            modifier = Modifier
-                                .fillMaxSize()
-                                .padding(10.dp)
-                        ) {
-                            Box(
-                                modifier = Modifier
-                                    .fillMaxSize()
-                                    .padding(10.dp),
-                                contentAlignment = Alignment.BottomEnd,
-
-                                ) {
-//                                Text(text = "Add favourite")
-                                Row {
-                                    Text(
-                                        text = "Learn more",
-                                        color = primaryPink,
-                                        modifier = Modifier.clickable {
-                                            navigator.navigate(GetLoanDestination)
-                                        },
-                                        textAlign = TextAlign.Center
-                                    )
-                                    Spacer(modifier = Modifier.width(10.dp))
-
-                                    Button(
-                                        onClick = {
-                                            navigator.navigate(GetLoanDestination)
-                                        },
-                                        modifier = Modifier
-                                            .width(100.dp)
-                                            .height(40.dp),
-                                        colors = ButtonDefaults.buttonColors(
-                                            backgroundColor = primaryPink
-                                        )
-                                    ) {
-                                        Text(
-                                            text = "Apply now",
-                                            )
-                                    }
-                                }
-
-                            }
-                        }
-                    }
-                }
-
-            }
-        }
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/securityQsn/SecurityQn.kt
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/securityQsn/SecurityQn.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/securityQsn/SecurityQn.kt
deleted file mode 100644
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/securityQsn/SecurityQn.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ /dev/null	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
@@ -1,297 +0,0 @@
-package com.chachadeveloper.equitymobile.presentation.securityQsn
-
-import androidx.compose.foundation.background
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.lazy.LazyColumn
-import androidx.compose.material.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.KeyboardArrowDown
-import androidx.compose.material.icons.filled.KeyboardArrowUp
-import androidx.compose.runtime.*
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.geometry.Size
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.layout.onGloballyPositioned
-import androidx.compose.ui.platform.LocalDensity
-import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.input.KeyboardType
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.toSize
-import androidx.lifecycle.viewmodel.compose.viewModel
-import com.chachadeveloper.equitymobile.R
-import com.chachadeveloper.equitymobile.presentation.components.StandardSecurityQn
-import com.chachadeveloper.equitymobile.presentation.components.StandardTextField
-import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
-import com.chachadeveloper.equitymobile.presentation.destinations.HomeDestination
-import com.chachadeveloper.equitymobile.presentation.destinations.SecurityQnDestination
-import com.chachadeveloper.equitymobile.ui.theme.primaryDark
-import com.ramcosta.composedestinations.annotation.Destination
-import com.ramcosta.composedestinations.navigation.DestinationsNavigator
-
-@Composable
-@Destination
-fun SecurityQn(navigator: DestinationsNavigator) {
-    Column(
-        modifier = Modifier.fillMaxSize()
-    ) {
-        StandardToolbar(
-            navigator = navigator,
-            showBackArrow = true,
-            title = {
-                Text(
-                    text = "Security questions",
-                    textAlign = TextAlign.Center,
-                    modifier = Modifier.fillMaxWidth(),
-                    style = MaterialTheme.typography.body2
-                )
-            }
-
-        )
-
-        Spacer(modifier = Modifier.height(2.dp))
-
-        SecurityQnScreen(navigator = navigator,
-            viewModel = viewModel()
-        )
-
-
-    }
-
-
-}
-
-@Composable
-fun SecurityQnScreen(navigator: DestinationsNavigator, viewModel: SecurityQnViewModel) {
-
-    // Declaring a boolean value to store
-    // the expanded state of the Text Field
-    var mExpanded by remember { mutableStateOf(false) }
-
-    // Create a list of cities
-    val mCities = listOf("Delhi", "Mumbai", "Chennai", "Kolkata", "Hyderabad", "Bengaluru", "Pune")
-
-    // Create a string value to store the selected city
-    var mSelectedText by remember { mutableStateOf("") }
-
-    var mTextFieldSize by remember { mutableStateOf(Size.Zero)}
-
-    // Up Icon when expanded and down icon when collapsed
-    val icon = if (mExpanded)
-        Icons.Filled.KeyboardArrowUp
-    else
-        Icons.Filled.KeyboardArrowDown
-
-    Column {
-        Box(modifier = Modifier.fillMaxSize(),
-            contentAlignment = Alignment.TopStart
-        ) {
-
-
-            Column(
-                modifier = Modifier
-                    .fillMaxSize()
-                    .padding(start = 30.dp, end = 30.dp)
-            ){
-                LazyColumn(){
-                    item {
-                        Text(text = "Create security questions")
-                        Spacer(modifier = Modifier.height(5.dp))
-                        Text(text = "Make the answers easy to remember" )
-                        Spacer(modifier = Modifier.height(10.dp))
-
-                        Text(text = "Question")
-                        Spacer(modifier = Modifier.height(1.dp))
-                        StandardSecurityQn(
-                            text = mSelectedText,
-                            onValueChange = { mSelectedText = it },
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .onGloballyPositioned { coordinates ->
-                                    // This value is used to assign to
-                                    // the DropDown the same width
-                                    mTextFieldSize = coordinates.size.toSize()
-                                },
-                        )
-                        Spacer(modifier = Modifier.height(0.dp))
-                        StandardTextField(
-                            text = viewModel.passwordText.value,
-                            onValueChange = {
-                                viewModel.setPasswordText(it)
-                            },
-                            hint = stringResource(id = R.string.password_hint),
-                            keyboardType = KeyboardType.Password,
-                            error = viewModel.passwordError.value,
-                            isPasswordVisible = viewModel.showPassword.value,
-                            onPasswordToggleClick = {
-                                viewModel.setShowPassword(it)
-                            }
-                        )
-                        Spacer(modifier = Modifier.height(8.dp))
-
-
-
-                        Text(text = "Question")
-                        Spacer(modifier = Modifier.height(1.dp))
-                        StandardSecurityQn(
-                            text = mSelectedText,
-                            onValueChange = { mSelectedText = it },
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .onGloballyPositioned { coordinates ->
-                                    // This value is used to assign to
-                                    // the DropDown the same width
-                                    mTextFieldSize = coordinates.size.toSize()
-                                },
-                        )
-                        Spacer(modifier = Modifier.height(0.dp))
-                        StandardTextField(
-                            text = viewModel.passwordText.value,
-                            onValueChange = {
-                                viewModel.setPasswordText(it)
-                            },
-                            hint = stringResource(id = R.string.password_hint),
-                            keyboardType = KeyboardType.Password,
-                            error = viewModel.passwordError.value,
-                            isPasswordVisible = viewModel.showPassword.value,
-                            onPasswordToggleClick = {
-                                viewModel.setShowPassword(it)
-                            }
-                        )
-                        Spacer(modifier = Modifier.height(8.dp))
-
-                        Text(text = "Question")
-                        Spacer(modifier = Modifier.height(1.dp))
-                        StandardSecurityQn(
-                            text = mSelectedText,
-                            onValueChange = { mSelectedText = it },
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .onGloballyPositioned { coordinates ->
-                                    // This value is used to assign to
-                                    // the DropDown the same width
-                                    mTextFieldSize = coordinates.size.toSize()
-                                },
-                        )
-                        Spacer(modifier = Modifier.height(0.dp))
-                        StandardTextField(
-                            text = viewModel.passwordText.value,
-                            onValueChange = {
-                                viewModel.setPasswordText(it)
-                            },
-                            hint = stringResource(id = R.string.password_hint),
-                            keyboardType = KeyboardType.Password,
-                            error = viewModel.passwordError.value,
-                            isPasswordVisible = viewModel.showPassword.value,
-                            onPasswordToggleClick = {
-                                viewModel.setShowPassword(it)
-                            }
-                        )
-                        Spacer(modifier = Modifier.height(8.dp))
-
-
-                        Text(text = "Question")
-                        Spacer(modifier = Modifier.height(1.dp))
-                        StandardSecurityQn(
-                            text = mSelectedText,
-                            onValueChange = { mSelectedText = it },
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .onGloballyPositioned { coordinates ->
-                                    // This value is used to assign to
-                                    // the DropDown the same width
-                                    mTextFieldSize = coordinates.size.toSize()
-                                },
-                        )
-                        Spacer(modifier = Modifier.height(0.dp))
-                        StandardTextField(
-                            text = viewModel.passwordText.value,
-                            onValueChange = {
-                                viewModel.setPasswordText(it)
-                            },
-                            hint = stringResource(id = R.string.password_hint),
-                            keyboardType = KeyboardType.Password,
-                            error = viewModel.passwordError.value,
-                            isPasswordVisible = viewModel.showPassword.value,
-                            onPasswordToggleClick = {
-                                viewModel.setShowPassword(it)
-                            }
-                        )
-                        Spacer(modifier = Modifier.height(8.dp))
-
-                        Text(text = "Question")
-                        Spacer(modifier = Modifier.height(0.dp))
-                        StandardSecurityQn(
-                            text = mSelectedText,
-                            onValueChange = { mSelectedText = it },
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .onGloballyPositioned { coordinates ->
-                                    // This value is used to assign to
-                                    // the DropDown the same width
-                                    mTextFieldSize = coordinates.size.toSize()
-                                },
-                        )
-                        Spacer(modifier = Modifier.height(0.dp))
-                        StandardTextField(
-                            text = viewModel.passwordText.value,
-                            onValueChange = {
-                                viewModel.setPasswordText(it)
-                            },
-                            hint = stringResource(id = R.string.password_hint),
-                            keyboardType = KeyboardType.Password,
-                            error = viewModel.passwordError.value,
-                            isPasswordVisible = viewModel.showPassword.value,
-                            onPasswordToggleClick = {
-                                viewModel.setShowPassword(it)
-                            }
-                        )
-<<<<<<< HEAD
-                        Spacer(modifier = Modifier.height(20.dp))
-=======
-<<<<<<< HEAD
-                        Spacer(modifier = Modifier.height(25.dp))
-=======
-                        Spacer(modifier = Modifier.height(8.dp))
->>>>>>> b086056dbfb6be1f69f74076a1c2e9dfa10a1e33
->>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b
-
-                        Button(
-                            onClick = {
-                                navigator.navigate(HomeDestination)
-                            },
-                            modifier = Modifier.fillMaxWidth(),
-                            colors = ButtonDefaults.buttonColors(
-                                contentColor = Color.Red,
-                                backgroundColor = Color.DarkGray
-                            ),
-
-                            ) {
-                            Text(
-                                text = "Confirm",
-                                color = Color.Black,
-                                modifier = Modifier.padding(10.dp)
-                            )
-                        }
-<<<<<<< HEAD
-
-                        Spacer(modifier = Modifier.height(20.dp))
-=======
-<<<<<<< HEAD
-                        
-                        Spacer(modifier = Modifier.height(20.dp))
-=======
->>>>>>> b086056dbfb6be1f69f74076a1c2e9dfa10a1e33
->>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b
-                    }
-                }
-
-            }
-        }
-
-    }
-
-
-}
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/StandardToolbar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.presentation.components\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material.*\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.ArrowBack\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.CompositionLocalProvider\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.ColorFilter\r\nimport androidx.compose.ui.layout.ContentScale\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport com.chachadeveloper.equitymobile.R\r\nimport com.ramcosta.composedestinations.navigation.DestinationsNavigator\r\n\r\n\r\n@Composable\r\nfun StandardToolbar(\r\n    modifier: Modifier = Modifier,\r\n    navigator: DestinationsNavigator,\r\n    showBackArrow: Boolean = false,\r\n    navActions: @Composable RowScope.() -> Unit = {},\r\n    title: @Composable () -> Unit = {}\r\n) {\r\n    TopAppBar(\r\n            title =  title,\r\n            navigationIcon = {\r\n                Box(modifier= Modifier.fillMaxSize(),\r\n                    contentAlignment = Alignment.Center){\r\n                    if (showBackArrow) {\r\n                            IconButton(onClick = {\r\n                                navigator.navigateUp()\r\n                            }) {\r\n                                Icon(\r\n                                    painter = painterResource(id = R.drawable.back),\r\n                                    contentDescription = null,\r\n                                    modifier = Modifier.size(18.dp),\r\n                                    tint = Color.White,\r\n                                )\r\n                            }\r\n                        }\r\n                }\r\n            },\r\n            backgroundColor = MaterialTheme.colors.primary,\r\n            actions = navActions ,\r\n            elevation = 0.dp,\r\n        )\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/StandardToolbar.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/StandardToolbar.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/StandardToolbar.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/StandardToolbar.kt	(date 1665290905562)
@@ -26,34 +26,57 @@
 @Composable
 fun StandardToolbar(
     modifier: Modifier = Modifier,
-    navigator: DestinationsNavigator,
+    title: String = "",
     showBackArrow: Boolean = false,
-    navActions: @Composable RowScope.() -> Unit = {},
-    title: @Composable () -> Unit = {}
+    showForwardArrow: Boolean = false,
+    navigator: DestinationsNavigator
 ) {
+    val modifier = Modifier.size(width = 50.dp, height = 30.dp)
     TopAppBar(
-            title =  title,
-            navigationIcon = {
-                Box(modifier= Modifier.fillMaxSize(),
-                    contentAlignment = Alignment.Center){
-                    if (showBackArrow) {
-                            IconButton(onClick = {
-                                navigator.navigateUp()
-                            }) {
-                                Icon(
-                                    painter = painterResource(id = R.drawable.back),
-                                    contentDescription = null,
-                                    modifier = Modifier.size(18.dp),
-                                    tint = Color.White,
-                                )
-                            }
-                        }
-                }
-            },
-            backgroundColor = MaterialTheme.colors.primary,
-            actions = navActions ,
-            elevation = 0.dp,
-        )
-
-
+        title = {
+            Text(
+                text = title,
+                fontSize = 18.sp,
+                textAlign = TextAlign.Center,
+                modifier = Modifier.fillMaxWidth(),
+                color = Color.White
+            ) },
+        navigationIcon = {
+            Box(modifier = modifier, contentAlignment = Alignment.Center) {
+                if (showBackArrow){
+                    IconButton(onClick = {
+                        navigator.navigateUp()
+                    }) {
+                        Icon(painter = painterResource(id = R.drawable.back)
+                            , contentDescription = null,
+                            modifier = Modifier.size(20.dp),
+                            tint = Color.White
+                        )
+                    }
+                }
+
+            }
+        },
+        actions = {
+            Box(modifier = modifier, contentAlignment = Alignment.Center) {
+                if (showForwardArrow){
+                    IconButton(onClick = {
+                        navigator.navigateUp()
+                    }) {
+                        Icon(painter =
+                        painterResource(id = R.drawable.chat_icon),
+                            contentDescription = null,
+                            tint = Color.White,
+                            modifier = Modifier.size(25.dp)
+                        )
+
+                    }
+
+                }
+
+            }
+        },
+        backgroundColor = MaterialTheme.colors.background,
+        elevation = 0.dp
+    )
 }
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/StandardTextField.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.presentation.components\r\n\r\n<<<<<<< HEAD\r\n\r\nimport androidx.compose.foundation.BorderStroke\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.border\r\n=======\r\n<<<<<<< HEAD\r\n\r\n=======\r\nimport androidx.compose.foundation.BorderStroke\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.border\r\n>>>>>>> b086056dbfb6be1f69f74076a1c2e9dfa10a1e33\r\n>>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.*\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Visibility\r\nimport androidx.compose.material.icons.filled.VisibilityOff\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.drawBehind\r\nimport androidx.compose.ui.focus.FocusRequester\r\nimport androidx.compose.ui.focus.focusRequester\r\nimport androidx.compose.ui.geometry.Offset\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.vector.ImageVector\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.semantics.semantics\r\nimport androidx.compose.ui.semantics.testTag\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.unit.dp\r\nimport com.chachadeveloper.equitymobile.presentation.util.TestTags\r\nimport com.chachadeveloper.equitymobile.R\r\nimport com.chachadeveloper.equitymobile.ui.theme.primaryPink\r\n\r\n@Composable\r\nfun StandardTextField(\r\n    modifier: Modifier = Modifier,\r\n    text: String = \"\",\r\n    hint: String = \"\",\r\n    maxLength: Int = 50,\r\n    error: String = \"\",\r\n    style: TextStyle = TextStyle(\r\n        color = MaterialTheme.colors.onBackground\r\n    ),\r\n    singleLine: Boolean = true,\r\n    maxLines: Int = 1,\r\n    leadingIcon: ImageVector? = null,\r\n    keyboardType: KeyboardType = KeyboardType.Text,\r\n    isPasswordToggleDisplayed: Boolean = keyboardType == KeyboardType.Password,\r\n    isPasswordVisible: Boolean = false,\r\n    onPasswordToggleClick: (Boolean) -> Unit = {},\r\n    onValueChange: (String) -> Unit,\r\n    focusRequester: FocusRequester = FocusRequester()\r\n\r\n) {\r\n    Column(\r\n        modifier = modifier\r\n            .fillMaxWidth()\r\n    ) {\r\n        val color = Color.White.copy(alpha = 0.78F)\r\n        val textFieldColors = TextFieldDefaults.outlinedTextFieldColors(\r\n            textColor = color,\r\n            cursorColor = color,\r\n            leadingIconColor = color,\r\n            trailingIconColor = color,\r\n            focusedBorderColor = primaryPink,\r\n            unfocusedBorderColor = color.copy(alpha = 0.5F),\r\n            focusedLabelColor = Color.White,\r\n            unfocusedLabelColor = color\r\n        )\r\n\r\n        TextField(\r\n            value = text,\r\n            onValueChange = {\r\n                if (it.length <= maxLength) {\r\n                    onValueChange(it)\r\n                }\r\n            },\r\n            maxLines = maxLines,\r\n            textStyle = style,\r\n            placeholder = {\r\n                Text(\r\n                    text = hint,\r\n<<<<<<< HEAD\r\n=======\r\n<<<<<<< HEAD\r\n                    style = MaterialTheme.typography.body1\r\n=======\r\n                    textAlign = TextAlign.Start,\r\n>>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b\r\n                    style = MaterialTheme.typography.body1,\r\n                    textAlign = TextAlign.Start,\r\n                    color = Color.DarkGray,\r\n                    modifier = Modifier.fillMaxWidth()\r\n\r\n<<<<<<< HEAD\r\n=======\r\n>>>>>>> b086056dbfb6be1f69f74076a1c2e9dfa10a1e33\r\n>>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b\r\n                )\r\n            },\r\n            isError = error != \"\",\r\n            keyboardOptions = KeyboardOptions(\r\n                keyboardType = keyboardType\r\n            ),\r\n            visualTransformation = if (!isPasswordVisible && isPasswordToggleDisplayed) {\r\n                PasswordVisualTransformation()\r\n            } else {\r\n                VisualTransformation.None\r\n            },\r\n            singleLine = singleLine,\r\n            leadingIcon = if (leadingIcon != null) {\r\n                val icon: @Composable () -> Unit = {\r\n                    Icon(\r\n                        imageVector = leadingIcon,\r\n                        contentDescription = null,\r\n                        tint = MaterialTheme.colors.onBackground,\r\n                        modifier = Modifier.size(25.dp)\r\n                    )\r\n                }\r\n                icon\r\n            } else null,\r\n            trailingIcon = if(isPasswordToggleDisplayed) {\r\n                val icon: @Composable () -> Unit = {\r\n                    IconButton(\r\n                        onClick = {\r\n                            onPasswordToggleClick(!isPasswordVisible)\r\n                        },\r\n                        modifier = Modifier\r\n                            .semantics {\r\n                                testTag = TestTags.PASSWORD_TOGGLE\r\n                            }\r\n                    ) {\r\n                        Icon(\r\n                            imageVector = if (isPasswordVisible) {\r\n                                Icons.Filled.VisibilityOff\r\n                            } else {\r\n                                Icons.Filled.Visibility\r\n                            },\r\n                            tint = primaryPink,\r\n                            contentDescription = if (isPasswordVisible) {\r\n                                stringResource(id = R.string.password_visible_content_description)\r\n                            } else {\r\n                                stringResource(id = R.string.password_hidden_content_description)\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n                icon\r\n            } else null,\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .semantics {\r\n                    testTag = TestTags.STANDARD_TEXT_FIELD\r\n                }\r\n                .focusRequester(focusRequester = focusRequester),\r\n            colors = textFieldColors\r\n        )\r\n        if (error.isNotEmpty()) {\r\n            Text(\r\n                text = error,\r\n                style = MaterialTheme.typography.body2,\r\n                color = MaterialTheme.colors.error,\r\n                textAlign = TextAlign.End,\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/StandardTextField.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/StandardTextField.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/StandardTextField.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/components/StandardTextField.kt	(date 1665290905626)
@@ -1,19 +1,10 @@
 package com.chachadeveloper.equitymobile.presentation.components
 
-<<<<<<< HEAD
-
 import androidx.compose.foundation.BorderStroke
 import androidx.compose.foundation.background
 import androidx.compose.foundation.border
-=======
-<<<<<<< HEAD
-
-=======
-import androidx.compose.foundation.BorderStroke
-import androidx.compose.foundation.background
-import androidx.compose.foundation.border
->>>>>>> b086056dbfb6be1f69f74076a1c2e9dfa10a1e33
->>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b
+import androidx.compose.foundation.interaction.MutableInteractionSource
+import androidx.compose.foundation.interaction.collectIsFocusedAsState
 import androidx.compose.foundation.layout.*
 import androidx.compose.foundation.shape.RoundedCornerShape
 import androidx.compose.foundation.text.KeyboardOptions
@@ -37,15 +28,18 @@
 import androidx.compose.ui.text.input.PasswordVisualTransformation
 import androidx.compose.ui.text.input.VisualTransformation
 import androidx.compose.ui.text.style.TextAlign
+import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
-import com.chachadeveloper.equitymobile.presentation.util.TestTags
 import com.chachadeveloper.equitymobile.R
+import com.chachadeveloper.equitymobile.presentation.util.TestTags
+import com.chachadeveloper.equitymobile.ui.theme.Transparent
 import com.chachadeveloper.equitymobile.ui.theme.primaryPink
 
 @Composable
 fun StandardTextField(
     modifier: Modifier = Modifier,
     text: String = "",
+    labelText: String = "",
     hint: String = "",
     maxLength: Int = 50,
     error: String = "",
@@ -61,24 +55,31 @@
     onPasswordToggleClick: (Boolean) -> Unit = {},
     onValueChange: (String) -> Unit,
     focusRequester: FocusRequester = FocusRequester()
-
-) {
-    Column(
-        modifier = modifier
-            .fillMaxWidth()
-    ) {
-        val color = Color.White.copy(alpha = 0.78F)
-        val textFieldColors = TextFieldDefaults.outlinedTextFieldColors(
-            textColor = color,
-            cursorColor = color,
-            leadingIconColor = color,
-            trailingIconColor = color,
-            focusedBorderColor = primaryPink,
-            unfocusedBorderColor = color.copy(alpha = 0.5F),
-            focusedLabelColor = Color.White,
-            unfocusedLabelColor = color
-        )
+){
+    val interactionSource = remember { MutableInteractionSource() }
+    val isFocused by interactionSource.collectIsFocusedAsState()
+
+    val IndicatorUnfocusedWidth = 1.dp
+    val IndicatorFocusedWidth = 2.dp
+    val TextFieldPadding = 16.dp
+    val color = Color.White.copy(alpha = 0.78F)
+    val textFieldColors = TextFieldDefaults.outlinedTextFieldColors(
+        textColor = color,
+        cursorColor = color,
+        leadingIconColor = color,
+        trailingIconColor = color,
+        focusedBorderColor = Transparent,
+        unfocusedBorderColor = Transparent,
+        focusedLabelColor = Transparent,
+        unfocusedLabelColor = color,
+        disabledBorderColor = Transparent
+
+    )
 
+    val indicatorColor = if (isFocused) primaryPink else Color.DarkGray
+    val indicatorWidth = if (isFocused) IndicatorFocusedWidth else IndicatorUnfocusedWidth
+
+    Column(modifier = Modifier.fillMaxWidth().padding(start = 4.dp, end = 4.dp))  {
         TextField(
             value = text,
             onValueChange = {
@@ -86,27 +87,21 @@
                     onValueChange(it)
                 }
             },
+//            label = {
+//                Text(
+//                    text = labelText,
+//                    style = MaterialTheme.typography.body1,
+//                    color = Color.DarkGray,
+//                )
+//            },
             maxLines = maxLines,
             textStyle = style,
             placeholder = {
                 Text(
                     text = hint,
-<<<<<<< HEAD
-=======
-<<<<<<< HEAD
-                    style = MaterialTheme.typography.body1
-=======
-                    textAlign = TextAlign.Start,
->>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b
                     style = MaterialTheme.typography.body1,
                     textAlign = TextAlign.Start,
                     color = Color.DarkGray,
-                    modifier = Modifier.fillMaxWidth()
-
-<<<<<<< HEAD
-=======
->>>>>>> b086056dbfb6be1f69f74076a1c2e9dfa10a1e33
->>>>>>> ece7e00aee62950feeb8bc5fdae7bce89bf2f90b
                 )
             },
             isError = error != "",
@@ -130,7 +125,7 @@
                 }
                 icon
             } else null,
-            trailingIcon = if(isPasswordToggleDisplayed) {
+            trailingIcon = if (isPasswordToggleDisplayed) {
                 val icon: @Composable () -> Unit = {
                     IconButton(
                         onClick = {
@@ -152,20 +147,45 @@
                                 stringResource(id = R.string.password_visible_content_description)
                             } else {
                                 stringResource(id = R.string.password_hidden_content_description)
-                            }
+                            },
+                            modifier = Modifier.padding(end = 10.dp)
                         )
                     }
                 }
                 icon
-            } else null,
-            modifier = Modifier
-                .fillMaxWidth()
+            } else null
+
+
+            ,
+
+
+
+            interactionSource = interactionSource,
+            modifier = Modifier.fillMaxWidth()
+                .drawBehind {
+                    val strokeWidth = indicatorWidth.value * density
+                    val y = size.height - strokeWidth / 2
+                    drawLine(
+                        indicatorColor,
+                        Offset(TextFieldPadding.toPx(), y),
+                        Offset(size.width - TextFieldPadding.toPx(), y),
+                        strokeWidth
+                    )
+                }
                 .semantics {
                     testTag = TestTags.STANDARD_TEXT_FIELD
                 }
                 .focusRequester(focusRequester = focusRequester),
             colors = textFieldColors
+            /*colors = TextFieldDefaults.textFieldColors(
+                backgroundColor = Color.Transparent,
+                focusedIndicatorColor = Transparent,
+                unfocusedIndicatorColor = Transparent,
+                disabledIndicatorColor = Transparent
+            )*/
         )
+
+
         if (error.isNotEmpty()) {
             Text(
                 text = error,
@@ -175,9 +195,12 @@
                 modifier = Modifier
                     .fillMaxWidth()
 
+            )
 
-            )
+
         }
     }
 
-}
+
+
+}
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'org.jetbrains.kotlin.android'\r\n    id 'kotlin-kapt'\r\n    id 'kotlin-parcelize'\r\n    id 'com.google.devtools.ksp' version '1.6.10-1.0.2'\r\n}\r\n\r\nkotlin {\r\n    sourceSets {\r\n        debug {\r\n            kotlin.srcDir(\"build/generated/ksp/debug/kotlin\")\r\n        }\r\n        release {\r\n            kotlin.srcDir(\"build/generated/ksp/release/kotlin\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\nandroid {\r\n    compileSdk 32\r\n\r\n    defaultConfig {\r\n        applicationId \"com.chachadeveloper.equitymobile\"\r\n        minSdk 21\r\n        targetSdk 32\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n    buildFeatures {\r\n        compose true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion compose_version\r\n    }\r\n    packagingOptions {\r\n        resources {\r\n            excludes += '/META-INF/{AL2.0,LGPL2.1}'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.core:core-ktx:1.7.0'\r\n    implementation \"androidx.compose.ui:ui:$compose_version\"\r\n    implementation \"androidx.compose.material:material:$compose_version\"\r\n    implementation \"androidx.compose.ui:ui-tooling-preview:$compose_version\"\r\n    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'\r\n    implementation 'androidx.activity:activity-compose:1.3.1'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n    androidTestImplementation \"androidx.compose.ui:ui-test-junit4:$compose_version\"\r\n    debugImplementation \"androidx.compose.ui:ui-tooling:$compose_version\"\r\n    debugImplementation \"androidx.compose.ui:ui-test-manifest:$compose_version\"\r\n\r\n\r\n    // Compose dependencies\r\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1\"\r\n    implementation \"androidx.navigation:navigation-compose:2.5.1\"\r\n    implementation \"com.google.accompanist:accompanist-flowlayout:0.17.0\"\r\n    implementation \"androidx.compose.material:material-icons-extended:$compose_version\"\r\n\r\n\r\n    // Coroutines\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'\r\n    // Livedata\r\n    implementation \"androidx.compose.runtime:runtime-livedata:$compose_version\"\r\n\r\n    // Coroutine Lifecycle Scopes\r\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1\"\r\n\r\n\r\n    // Koin\r\n    implementation \"io.insert-koin:koin-android:3.2.0-beta-1\"\r\n    implementation \"io.insert-koin:koin-androidx-navigation:3.2.0-beta-1\"\r\n    implementation \"io.insert-koin:koin-androidx-compose:3.2.0-beta-1\"\r\n    testImplementation \"io.insert-koin:koin-test-junit4:3.2.0-beta-1\"\r\n\r\n\r\n    // Retrofit\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n    implementation \"com.squareup.retrofit2:converter-moshi:2.9.0\"\r\n    implementation \"com.squareup.okhttp3:okhttp:5.0.0-alpha.3\"\r\n    implementation \"com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.3\"\r\n\r\n    //Moshi\r\n    implementation \"com.squareup.moshi:moshi-kotlin:1.13.0\"\r\n    implementation \"com.squareup.moshi:moshi-adapters:1.13.0\"\r\n    implementation \"com.squareup.moshi:moshi-kotlin-codegen:1.13.0\"\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n    //Interceptor\r\n    implementation \"com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.3\"\r\n\r\n\r\n    // Compose Nav Destinations\r\n    implementation 'io.github.raamcosta.compose-destinations:core:1.5.5-beta'\r\n    ksp 'io.github.raamcosta.compose-destinations:ksp:1.5.5-beta'\r\n\r\n    // Navigation animation\r\n    implementation 'com.google.accompanist:accompanist-navigation-animation:0.24.2-alpha'\r\n\r\n    // Accompanist System UI controller\r\n    implementation \"com.google.accompanist:accompanist-systemuicontroller:0.24.2-alpha\"\r\n\r\n    // Coil\r\n    implementation(\"io.coil-kt:coil-compose:2.1.0\")\r\n\r\n    // Insets\r\n    implementation \"com.google.accompanist:accompanist-insets:0.17.0\"\r\n\r\n    //Timber\r\n    implementation 'com.jakewharton.timber:timber:5.0.1'\r\n\r\n    // Swipe to refresh\r\n    implementation \"com.google.accompanist:accompanist-swiperefresh:0.24.3-alpha\"\r\n\r\n    // If using indicators, also depend on\r\n    // Pager and Indicators - Accompanist\r\n    implementation \"com.google.accompanist:accompanist-pager-indicators:0.13.0\"\r\n    implementation \"com.google.accompanist:accompanist-pager:0.13.0\"\r\n\r\n\r\n    // DataStore Preferences\r\n    implementation(\"androidx.datastore:datastore-preferences:1.0.0\")\r\n\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/build.gradle	(date 1665290902370)
@@ -86,6 +86,7 @@
     // Coroutines
     implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
     implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
+
     // Livedata
     implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
 
Index: app/src/main/java/com/chachadeveloper/equitymobile/di/OnBoardingModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.di\r\n\r\nimport com.chachadeveloper.equitymobile.presentation.createPassword.CreatePasswordViewModel\r\nimport com.chachadeveloper.equitymobile.presentation.onboarding.OnBoardingViewModel\r\nimport org.koin.androidx.viewmodel.dsl.viewModel\r\nimport org.koin.dsl.module\r\n\r\nval onboardingModule = module {\r\n    viewModel { OnBoardingViewModel(get()) }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/di/OnBoardingModule.kt b/app/src/main/java/com/chachadeveloper/equitymobile/di/OnBoardingModule.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/di/OnBoardingModule.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/di/OnBoardingModule.kt	(date 1665290905898)
@@ -1,7 +1,6 @@
 package com.chachadeveloper.equitymobile.di
 
-import com.chachadeveloper.equitymobile.presentation.createPassword.CreatePasswordViewModel
-import com.chachadeveloper.equitymobile.presentation.onboarding.OnBoardingViewModel
+import com.chachadeveloper.equitymobile.presentation.onboarding_screen.OnBoardingViewModel
 import org.koin.androidx.viewmodel.dsl.viewModel
 import org.koin.dsl.module
 
Index: app/src/main/java/com/chachadeveloper/equitymobile/di/LoginModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.di\r\n\r\nimport com.chachadeveloper.equitymobile.presentation.login.LoginViewModel\r\nimport org.koin.androidx.viewmodel.dsl.viewModel\r\nimport org.koin.dsl.module\r\nimport retrofit2.converter.moshi.MoshiConverterFactory\r\n\r\nval loginModule = module {\r\n    viewModel { LoginViewModel() }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/di/LoginModule.kt b/app/src/main/java/com/chachadeveloper/equitymobile/di/LoginModule.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/di/LoginModule.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/di/LoginModule.kt	(date 1665290905946)
@@ -1,9 +1,8 @@
 package com.chachadeveloper.equitymobile.di
 
-import com.chachadeveloper.equitymobile.presentation.login.LoginViewModel
+import com.chachadeveloper.equitymobile.presentation.login_screen.LoginViewModel
 import org.koin.androidx.viewmodel.dsl.viewModel
 import org.koin.dsl.module
-import retrofit2.converter.moshi.MoshiConverterFactory
 
 val loginModule = module {
     viewModel { LoginViewModel() }
Index: app/src/main/java/com/chachadeveloper/equitymobile/di/CreatePinModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.di\r\n\r\nimport com.chachadeveloper.equitymobile.presentation.createPin.CreatePinViewModel\r\nimport com.chachadeveloper.equitymobile.presentation.login.LoginViewModel\r\nimport com.chachadeveloper.equitymobile.presentation.register.RegisterViewModel\r\nimport org.koin.androidx.viewmodel.dsl.viewModel\r\nimport org.koin.dsl.module\r\nimport retrofit2.converter.moshi.MoshiConverterFactory\r\n\r\nval createPinModule = module {\r\n    viewModel { CreatePinViewModel() }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/di/CreatePinModule.kt b/app/src/main/java/com/chachadeveloper/equitymobile/di/CreatePinModule.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/di/CreatePinModule.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/di/CreatePinModule.kt	(date 1665290905978)
@@ -1,11 +1,8 @@
 package com.chachadeveloper.equitymobile.di
 
-import com.chachadeveloper.equitymobile.presentation.createPin.CreatePinViewModel
-import com.chachadeveloper.equitymobile.presentation.login.LoginViewModel
-import com.chachadeveloper.equitymobile.presentation.register.RegisterViewModel
+import com.chachadeveloper.equitymobile.presentation.create_pin_screen.CreatePinViewModel
 import org.koin.androidx.viewmodel.dsl.viewModel
 import org.koin.dsl.module
-import retrofit2.converter.moshi.MoshiConverterFactory
 
 val createPinModule = module {
     viewModel { CreatePinViewModel() }
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/AlertDialogSample.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/AlertDialogSample.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/AlertDialogSample.kt
new file mode 100644
--- /dev/null	(date 1665290904890)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/AlertDialogSample.kt	(date 1665290904890)
@@ -0,0 +1,236 @@
+package com.chachadeveloper.equitymobile.presentation.alartDialog
+
+import android.app.AlertDialog
+import android.os.Bundle
+import android.widget.Toast
+import androidx.activity.ComponentActivity
+import androidx.activity.compose.setContent
+import androidx.compose.foundation.background
+import androidx.compose.foundation.border
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.interaction.MutableInteractionSource
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.material.*
+import androidx.compose.runtime.*
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.platform.LocalContext
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.font.Font
+import androidx.compose.ui.text.font.FontFamily
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.Dp
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import androidx.compose.ui.window.Dialog
+import com.chachadeveloper.equitymobile.R
+
+@Composable
+@Preview(showBackground = true)
+fun AlertDialogSample() {
+    Column(
+        modifier = Modifier
+            .fillMaxSize()
+            .background(color = MaterialTheme.colors.background),
+        verticalArrangement = Arrangement.Center,
+        horizontalAlignment = Alignment.CenterHorizontally
+    ) {
+
+
+        var openDialog by remember {
+            mutableStateOf(false) // Initially dialog is closed
+        }
+
+        ButtonClick(buttonText = "Open Dialog") {
+            openDialog = true
+        }
+
+        if (openDialog) {
+            DialogBoxDeleteItem {
+                openDialog = false
+            }
+        }
+
+
+
+
+    }
+    
+    
+}
+
+
+@Composable
+fun ButtonClick(
+    buttonText: String,
+    onButtonClick: () -> Unit
+) {
+    Button(
+        shape = RoundedCornerShape(5.dp),
+        colors = ButtonDefaults.buttonColors(backgroundColor = MaterialTheme.colors.primary),
+        onClick = {
+            onButtonClick()
+        }) {
+        Text(
+            text = buttonText,
+            fontSize = 16.sp,
+            color = Color.White
+        )
+    }
+}
+
+// For Roboto font: https://fonts.google.com/specimen/Roboto?query=roboto
+@Composable
+fun DialogBoxDeleteItem(
+    cornerRadius: Dp = 12.dp,
+    deleteButtonColor: Color = Color(0xFFFF0000),
+    cancelButtonColor: Color = Color(0xFF35898F),
+    titleTextStyle: TextStyle = TextStyle(
+        color = Color.Black.copy(alpha = 0.87f),
+        fontFamily = FontFamily(Font(R.font.poppin_bold, FontWeight.Bold)),
+        fontSize = 20.sp
+    ),
+    messageTextStyle: TextStyle = TextStyle(
+        color = Color.Black.copy(alpha = 0.95f),
+        fontFamily = FontFamily(Font(R.font.poppins_regular, FontWeight.Normal)),
+        fontSize = 16.sp,
+        lineHeight = 22.sp
+    ),
+    buttonTextStyle: TextStyle = TextStyle(
+        fontFamily = FontFamily(Font(R.font.poppins_medium, FontWeight.Medium)),
+        fontSize = 16.sp
+    ),
+    onDismiss: () -> Unit
+) {
+
+    val context = LocalContext.current.applicationContext
+
+    // This helps to disable the ripple effect
+    val interactionSource = remember {
+        MutableInteractionSource()
+    }
+
+    val buttonCorner = 6.dp
+
+    Dialog(
+        onDismissRequest = {
+            onDismiss()
+        }
+    ) {
+
+        Surface(
+            modifier = Modifier
+                .fillMaxWidth()
+                .wrapContentHeight(),
+            shape = RoundedCornerShape(size = cornerRadius)
+        ) {
+
+            Column(modifier = Modifier.padding(all = 16.dp)) {
+
+                Row(
+                    modifier = Modifier
+                        .fillMaxWidth(),
+                    verticalAlignment = Alignment.CenterVertically,
+                    horizontalArrangement = Arrangement.spacedBy(
+                        space = 6.dp,
+                        alignment = Alignment.Start
+                    )
+                ) {
+
+                    // For icon, visit feathericons.com
+                    // Icon name: trash-2
+                    Icon(
+                        modifier = Modifier.size(26.dp),
+                        painter = painterResource(id = R.drawable.back),
+                        contentDescription = "Delete Icon",
+                        tint = deleteButtonColor
+                    )
+
+                    Text(
+                        text = "Delete Item?",
+                        style = titleTextStyle
+                    )
+
+                }
+
+                Text(
+                    modifier = Modifier
+                        .fillMaxWidth()
+                        .padding(top = 16.dp, bottom = 20.dp),
+                    text = "Are you sure you want to delete this item from the list?",
+                    style = messageTextStyle
+                )
+
+                Row(
+                    modifier = Modifier.fillMaxWidth(),
+                    verticalAlignment = Alignment.CenterVertically,
+                    horizontalArrangement = Arrangement.spacedBy(
+                        space = 10.dp,
+                        alignment = Alignment.End
+                    )
+                ) {
+
+                    // Cancel button
+                    Box(
+                        modifier = Modifier
+                            .clickable(
+                                // This is to disable the ripple effect
+                                indication = null,
+                                interactionSource = interactionSource
+                            ) {
+                                Toast
+                                    .makeText(context, "Cancel", Toast.LENGTH_SHORT)
+                                    .show()
+                                onDismiss()
+                            }
+                            .border(
+                                width = 1.dp,
+                                color = cancelButtonColor,
+                                shape = RoundedCornerShape(buttonCorner)
+                            )
+                            .padding(top = 6.dp, bottom = 8.dp, start = 24.dp, end = 24.dp),
+                    ) {
+                        Text(
+                            text = "Cancel",
+                            style = buttonTextStyle,
+                            color = cancelButtonColor
+                        )
+                    }
+
+                    // Delete button
+                    Box(
+                        modifier = Modifier
+                            .clickable(
+                                // This is to disable the ripple effect
+                                indication = null,
+                                interactionSource = interactionSource
+                            ) {
+                                Toast
+                                    .makeText(context, "Delete", Toast.LENGTH_SHORT)
+                                    .show()
+                                onDismiss()
+                            }
+                            .background(
+                                color = deleteButtonColor,
+                                shape = RoundedCornerShape(buttonCorner)
+                            )
+                            .padding(top = 6.dp, bottom = 8.dp, start = 24.dp, end = 24.dp),
+                    ) {
+                        Text(
+                            text = "Delete",
+                            style = buttonTextStyle,
+                            color = Color.White
+                        )
+                    }
+
+                }
+            }
+
+        }
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/di/RegisterModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.di\r\n\r\nimport com.chachadeveloper.equitymobile.presentation.login.LoginViewModel\r\nimport com.chachadeveloper.equitymobile.presentation.register.RegisterViewModel\r\nimport org.koin.androidx.viewmodel.dsl.viewModel\r\nimport org.koin.dsl.module\r\nimport retrofit2.converter.moshi.MoshiConverterFactory\r\n\r\nval registerModule = module {\r\n\r\n    viewModel { RegisterViewModel() }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/di/RegisterModule.kt b/app/src/main/java/com/chachadeveloper/equitymobile/di/RegisterModule.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/di/RegisterModule.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/di/RegisterModule.kt	(date 1665290906026)
@@ -1,10 +1,8 @@
 package com.chachadeveloper.equitymobile.di
 
-import com.chachadeveloper.equitymobile.presentation.login.LoginViewModel
-import com.chachadeveloper.equitymobile.presentation.register.RegisterViewModel
+import com.chachadeveloper.equitymobile.presentation.register_screen.RegisterViewModel
 import org.koin.androidx.viewmodel.dsl.viewModel
 import org.koin.dsl.module
-import retrofit2.converter.moshi.MoshiConverterFactory
 
 val registerModule = module {
 
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/create_password_screen/CreatePasswordScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/create_password_screen/CreatePasswordScreen.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/create_password_screen/CreatePasswordScreen.kt
new file mode 100644
--- /dev/null	(date 1665290904826)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/create_password_screen/CreatePasswordScreen.kt	(date 1665290904826)
@@ -0,0 +1,270 @@
+package com.chachadeveloper.equitymobile.presentation.create_password_screen
+
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.layout.*
+import androidx.compose.material.*
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.graphics.ColorFilter
+import androidx.compose.ui.layout.ContentScale
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.res.stringResource
+import androidx.compose.ui.text.input.KeyboardType
+import androidx.compose.ui.text.style.TextAlign
+import androidx.compose.ui.unit.dp
+import com.chachadeveloper.equitymobile.R
+import com.chachadeveloper.equitymobile.presentation.components.StandardTextField
+import com.chachadeveloper.equitymobile.presentation.components.StandardToolbar
+import com.chachadeveloper.equitymobile.presentation.destinations.CreatePinScreenDestination
+import com.ramcosta.composedestinations.annotation.Destination
+import com.ramcosta.composedestinations.navigation.DestinationsNavigator
+import org.koin.androidx.compose.get
+
+@Composable
+@Destination
+fun CreatePasswordScreen(
+    navigator: DestinationsNavigator,
+    viewModel: CreatePasswordViewModel = get()
+) {
+    Column(modifier = Modifier.fillMaxSize()) {
+        StandardToolbar(
+            navigator = navigator,
+            title = "Create Password",
+
+        )
+        Spacer(modifier = Modifier.height(25.dp))
+        Column {
+            Box(modifier = Modifier.fillMaxSize(),
+                contentAlignment = Alignment.TopStart
+            ) {
+
+                Column(modifier = Modifier.fillMaxSize()
+                ) {
+
+                    Text(
+                        text = stringResource(id = R.string.createPasswd_header),
+                        style = MaterialTheme.typography.body1,
+                        modifier = Modifier.padding(start = 20.dp, end = 20.dp)
+                    )
+
+                    Spacer(modifier = Modifier.height(10.dp))
+                    Text(
+                        text = stringResource(id = R.string.createPassword_hint),
+                        style =  MaterialTheme.typography.body2,
+                        maxLines = 1,
+                        modifier = Modifier.padding(start = 20.dp, end = 20.dp)
+                    )
+                    Spacer(modifier = Modifier.height(20.dp))
+
+                    Text(
+                        text = "Password",
+                        modifier = Modifier.padding(start = 20.dp, end = 20.dp)
+
+                    )
+
+                    StandardTextField(
+                        text = viewModel.passwordText.value,
+                        onValueChange = {
+                            viewModel.setPasswordText(it)
+                        },
+                        hint = stringResource(id = R.string.password_hint),
+                        keyboardType = KeyboardType.Password,
+                        error = viewModel.passwordError.value,
+                        isPasswordVisible = viewModel.showPassword.value,
+                        onPasswordToggleClick = {
+                            viewModel.setShowPassword(it)
+                        }
+                    )
+
+                    Spacer(modifier = Modifier.height(20.dp))
+
+
+                    Text(
+                        text = "Confirm password",
+                        modifier = Modifier.padding(start = 20.dp, end = 20.dp)
+
+                    )
+
+                    StandardTextField(
+                        text = viewModel.passwordText.value,
+                        onValueChange = {
+                            viewModel.setPasswordText(it)
+                        },
+                        hint = stringResource(id = R.string.password_hint),
+                        keyboardType = KeyboardType.Password,
+                        error = viewModel.passwordError.value,
+                        isPasswordVisible = viewModel.showPassword.value,
+                        onPasswordToggleClick = {
+                            viewModel.setShowPassword(it)
+                        }
+                    )
+
+                    Spacer(modifier = Modifier.height(30.dp))
+
+                    /*
+                    Password Validation Ui
+                     */
+                    
+                    Column {
+                        Row(
+                            modifier = Modifier
+                                .fillMaxWidth()
+                                .padding(start = 0.dp),
+                            verticalAlignment = Alignment.CenterVertically,
+                            horizontalArrangement = Arrangement.Start,
+
+                        ) {
+                            Image(
+                                painter =
+                                painterResource(id = R.drawable.ic_launcher_foreground),
+                                contentDescription = null,
+                                modifier = Modifier.size(50.dp),
+                                contentScale = ContentScale.Crop,
+                                colorFilter = ColorFilter.tint(color = Color.White)
+                            )
+                            Text(
+                                text = stringResource(id = R.string.validate_header),
+                            )
+                        }
+                        Spacer(modifier = Modifier.height(15.dp))
+
+                        Row(
+                            modifier = Modifier
+                                .fillMaxWidth()
+                                .padding(start = 0.dp),
+                            verticalAlignment = Alignment.CenterVertically,
+                            horizontalArrangement = Arrangement.Start,
+                        ) {
+
+                            Image(
+                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
+                                contentDescription = null,
+                                modifier = Modifier.size(50.dp),
+                                contentScale = ContentScale.Crop,
+                                colorFilter = ColorFilter.tint(color = Color.White)
+                            )
+                            Text(
+                                text = stringResource(id = R.string.validateLetter),
+                                maxLines = 2,
+                                style = MaterialTheme.typography.body2
+
+                            )
+                        }
+
+                        Spacer(modifier = Modifier.height(8.dp))
+
+                        Row(
+                            modifier = Modifier
+                                .fillMaxWidth()
+                                .padding(start = 0.dp),
+                            verticalAlignment = Alignment.CenterVertically,
+                            horizontalArrangement = Arrangement.Start,
+                        ) {
+
+                            Image(
+                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
+                                contentDescription = null,
+                                modifier = Modifier.size(50.dp),
+                                contentScale = ContentScale.Crop,
+                                colorFilter = ColorFilter.tint(color = Color.White)
+                            )
+
+
+                            Text(
+                                text = stringResource(id = R.string.validateCharLong),
+                                maxLines = 1,
+                                style = MaterialTheme.typography.body2
+                            )
+                        }
+                        Spacer(modifier = Modifier.height(8.dp))
+
+                        Row(
+                            modifier = Modifier
+                                .fillMaxWidth()
+                                .padding(start = 0.dp),
+                            verticalAlignment = Alignment.CenterVertically,
+                            horizontalArrangement = Arrangement.Start,
+                        ) {
+
+                            Image(
+                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
+                                contentDescription = null,
+                                modifier = Modifier.size(50.dp),
+                                contentScale = ContentScale.Crop,
+                                colorFilter = ColorFilter.tint(color = Color.White)
+                            )
+                            Text(
+                                text = stringResource(id = R.string.validate_specialChar),
+                                maxLines = 1,
+                                style = MaterialTheme.typography.body2
+                            )
+                        }
+
+                        Spacer(modifier = Modifier.height(8.dp))
+
+                        Row(
+                            modifier = Modifier
+                                .fillMaxWidth()
+                                .padding(start = 0.dp),
+                            verticalAlignment = Alignment.CenterVertically,
+                            horizontalArrangement = Arrangement.Start,
+                        ) {
+
+                            Image(
+                                painter = painterResource(id = R.drawable.ic_launcher_foreground),
+                                contentDescription = null,
+                                modifier = Modifier.size(50.dp),
+                                contentScale = ContentScale.Crop,
+                                colorFilter = ColorFilter.tint(color = Color.White)
+                            )
+                            Text(
+                                text = stringResource(id = R.string.passwordMatch),
+                                maxLines = 1,
+                                style = MaterialTheme.typography.body2
+
+                            )
+                        }
+                    }
+                    /* Button */
+
+                    Column (
+                        modifier = Modifier
+                            .fillMaxSize()
+                            .padding(start = 20.dp, end = 20.dp),
+                        verticalArrangement = Arrangement.Bottom
+                    ){
+
+                        Button(
+                            onClick = {
+                                navigator.navigate(CreatePinScreenDestination)
+                            },
+                            modifier = Modifier.fillMaxWidth(),
+                            colors = ButtonDefaults.buttonColors(
+                                contentColor = Color.Red,
+                                backgroundColor = Color.DarkGray
+                            ),
+
+                            ) {
+                            Text(
+                                text = "Confirm",
+                                color = Color.Black,
+                                modifier = Modifier.padding(10.dp)
+                            )
+                        }
+                        Spacer(modifier = Modifier.height(25.dp))
+
+                    }
+
+                }
+
+
+            }
+
+
+        }
+
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/di/ResetPinModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.di\r\n\r\nimport com.chachadeveloper.equitymobile.presentation.changeResetPIN.ResetPinViewModel\r\nimport com.chachadeveloper.equitymobile.presentation.createPin.CreatePinViewModel\r\nimport org.koin.androidx.viewmodel.dsl.viewModel\r\nimport org.koin.dsl.module\r\n\r\nval resetPinModule = module {\r\n    viewModel { ResetPinViewModel() }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/di/ResetPinModule.kt b/app/src/main/java/com/chachadeveloper/equitymobile/di/ResetPinModule.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/di/ResetPinModule.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/di/ResetPinModule.kt	(date 1665290906066)
@@ -1,7 +1,6 @@
 package com.chachadeveloper.equitymobile.di
 
-import com.chachadeveloper.equitymobile.presentation.changeResetPIN.ResetPinViewModel
-import com.chachadeveloper.equitymobile.presentation.createPin.CreatePinViewModel
+import com.chachadeveloper.equitymobile.presentation.reset_pin_screen.ResetPinViewModel
 import org.koin.androidx.viewmodel.dsl.viewModel
 import org.koin.dsl.module
 
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/LoadingDialog.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/LoadingDialog.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/LoadingDialog.kt
new file mode 100644
--- /dev/null	(date 1665290905098)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/LoadingDialog.kt	(date 1665290905098)
@@ -0,0 +1,48 @@
+package com.chachadeveloper.equitymobile.presentation.alartDialog
+
+import androidx.compose.foundation.background
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.material.Card
+import androidx.compose.material.CircularProgressIndicator
+import androidx.compose.material.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.text.style.TextAlign
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.window.Dialog
+
+@Composable
+fun LoadingDialog(onDismiss:() -> Unit) {
+    Dialog(onDismissRequest = { onDismiss() }) {
+
+        Card(
+            shape = RoundedCornerShape(8.dp),
+            modifier = Modifier,
+            elevation = 8.dp
+        ) {
+            Column(
+                Modifier
+                    .background(Color.White)
+                    .padding(12.dp)
+            ) {
+                Text(
+                    text = "Loading.. Please wait..",
+                    Modifier
+                        .padding(8.dp), textAlign = TextAlign.Center
+                )
+
+                CircularProgressIndicator(
+                    strokeWidth = 4.dp,
+                    modifier = Modifier
+                        .align(Alignment.CenterHorizontally)
+                        .padding(8.dp)
+                )
+            }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/di/CreatePasswordModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.di\r\n\r\nimport com.chachadeveloper.equitymobile.presentation.createPassword.CreatePasswordViewModel\r\nimport com.chachadeveloper.equitymobile.presentation.login.LoginViewModel\r\nimport com.chachadeveloper.equitymobile.presentation.register.RegisterViewModel\r\nimport org.koin.androidx.viewmodel.dsl.viewModel\r\nimport org.koin.dsl.module\r\nimport retrofit2.converter.moshi.MoshiConverterFactory\r\n\r\nval createPasswordModule = module {\r\n    viewModel { CreatePasswordViewModel() }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/di/CreatePasswordModule.kt b/app/src/main/java/com/chachadeveloper/equitymobile/di/CreatePasswordModule.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/di/CreatePasswordModule.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/di/CreatePasswordModule.kt	(date 1665290906108)
@@ -1,11 +1,8 @@
 package com.chachadeveloper.equitymobile.di
 
-import com.chachadeveloper.equitymobile.presentation.createPassword.CreatePasswordViewModel
-import com.chachadeveloper.equitymobile.presentation.login.LoginViewModel
-import com.chachadeveloper.equitymobile.presentation.register.RegisterViewModel
+import com.chachadeveloper.equitymobile.presentation.create_password_screen.CreatePasswordViewModel
 import org.koin.androidx.viewmodel.dsl.viewModel
 import org.koin.dsl.module
-import retrofit2.converter.moshi.MoshiConverterFactory
 
 val createPasswordModule = module {
     viewModel { CreatePasswordViewModel() }
Index: app/src/main/java/com/chachadeveloper/equitymobile/di/ResetPasswordModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.di\r\n\r\nimport com.chachadeveloper.equitymobile.presentation.changeResetPassword.ResetPasswordViewModel\r\nimport com.chachadeveloper.equitymobile.presentation.createPin.CreatePinViewModel\r\nimport org.koin.androidx.viewmodel.dsl.viewModel\r\nimport org.koin.dsl.module\r\n\r\nval resetPasswordModule = module {\r\n    viewModel { ResetPasswordViewModel() }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/di/ResetPasswordModule.kt b/app/src/main/java/com/chachadeveloper/equitymobile/di/ResetPasswordModule.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/di/ResetPasswordModule.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/di/ResetPasswordModule.kt	(date 1665290906156)
@@ -1,7 +1,6 @@
 package com.chachadeveloper.equitymobile.di
 
-import com.chachadeveloper.equitymobile.presentation.changeResetPassword.ResetPasswordViewModel
-import com.chachadeveloper.equitymobile.presentation.createPin.CreatePinViewModel
+import com.chachadeveloper.equitymobile.presentation.reset_password_screen.ResetPasswordViewModel
 import org.koin.androidx.viewmodel.dsl.viewModel
 import org.koin.dsl.module
 
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/AlertDialog.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/AlertDialog.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/AlertDialog.kt
new file mode 100644
--- /dev/null	(date 1665290905058)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/alartDialog/AlertDialog.kt	(date 1665290905058)
@@ -0,0 +1,62 @@
+package com.chachadeveloper.equitymobile.presentation.alartDialog
+
+
+import androidx.compose.foundation.layout.Column
+import androidx.compose.material.*
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.ui.tooling.preview.Preview
+
+@Composable
+@Preview(showBackground = true)
+fun AlertDialog() {
+    MaterialTheme {
+        Column {
+            val openDialog = remember { mutableStateOf(false)  }
+
+            Button(onClick = {
+                openDialog.value = true
+            }) {
+                Text("Click me")
+            }
+
+            if (openDialog.value) {
+
+                AlertDialog(
+                    onDismissRequest = {
+                        // Dismiss the dialog when the user clicks outside the dialog or on the back
+                        // button. If you want to disable that functionality, simply use an empty
+                        // onCloseRequest.
+                        openDialog.value = false
+                    },
+                    title = {
+                        Text(text = "Dialog Title")
+                    },
+                    text = {
+                        Text("Here is a text ")
+                    },
+                    confirmButton = {
+                        Button(
+
+                            onClick = {
+                                openDialog.value = false
+                            }) {
+                            Text("This is the Confirm Button")
+                        }
+                    },
+                    dismissButton = {
+                        Button(
+
+                            onClick = {
+                                openDialog.value = false
+                            }) {
+                            Text("This is the dismiss Button")
+                        }
+                    }
+                )
+            }
+        }
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/chachadeveloper/equitymobile/ui/theme/Theme.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chachadeveloper.equitymobile.ui.theme\r\n\r\nimport androidx.compose.foundation.isSystemInDarkTheme\r\nimport androidx.compose.material.MaterialTheme\r\nimport androidx.compose.material.darkColors\r\nimport androidx.compose.material.lightColors\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.SideEffect\r\nimport androidx.compose.ui.graphics.Color\r\nimport com.google.accompanist.systemuicontroller.rememberSystemUiController\r\n\r\nprivate val DarkColorPalette = darkColors(\r\n    primary = primaryDark,\r\n    primaryVariant = primaryDarkVariant,\r\n    secondary = primaryDark,\r\n    background = primaryDark\r\n)\r\n\r\nprivate val LightColorPalette = lightColors(\r\n    primary = primaryDark,\r\n    primaryVariant = primaryDarkVariant,\r\n    secondary = primaryDark,\r\n    background = Color.White\r\n\r\n)\r\n\r\n\r\n@Composable\r\nfun EquityMobileTheme(darkTheme: Boolean = true, content: @Composable () -> Unit) {\r\n    val colors = if (darkTheme) {\r\n        DarkColorPalette\r\n    } else {\r\n        LightColorPalette\r\n    }\r\n    val systemUiController = rememberSystemUiController()\r\n\r\n    SideEffect {\r\n        systemUiController.setSystemBarsColor(\r\n            color = if (darkTheme) primaryDark else lightGray\r\n        )\r\n    }\r\n    MaterialTheme(\r\n        colors = colors,\r\n        typography = Typography,\r\n        shapes = Shapes,\r\n        content = content\r\n    )\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/ui/theme/Theme.kt b/app/src/main/java/com/chachadeveloper/equitymobile/ui/theme/Theme.kt
--- a/app/src/main/java/com/chachadeveloper/equitymobile/ui/theme/Theme.kt	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/ui/theme/Theme.kt	(date 1665290906185)
@@ -26,7 +26,10 @@
 
 
 @Composable
-fun EquityMobileTheme(darkTheme: Boolean = true, content: @Composable () -> Unit) {
+fun EquityMobileTheme(
+    darkTheme: Boolean = true,
+    content: @Composable () -> Unit
+) {
     val colors = if (darkTheme) {
         DarkColorPalette
     } else {
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Project-wide Gradle settings.\r\n# IDE (e.g. Android Studio) users:\r\n# Gradle settings configured through the IDE *will override*\r\n# any settings specified in this file.\r\n# For more details on how to configure your build environment visit\r\n# http://www.gradle.org/docs/current/userguide/build_environment.html\r\n# Specifies the JVM arguments used for the daemon process.\r\n# The setting is particularly useful for tweaking memory settings.\r\norg.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8\r\n# When configured, Gradle will run in incubating parallel mode.\r\n# This option should only be used with decoupled projects. More details, visit\r\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\r\n# org.gradle.parallel=true\r\n# AndroidX package structure to make it clearer which packages are bundled with the\r\n# Android operating system, and which are packaged with your app\"s APK\r\n# https://developer.android.com/topic/libraries/support-library/androidx-rn\r\nandroid.useAndroidX=true\r\n# Kotlin code style for this project: \"official\" or \"obsolete\":\r\nkotlin.code.style=official\r\n# Enables namespacing of each library's R class so that its R class includes only the\r\n# resources declared in the library itself and none from the library's dependencies,\r\n# thereby reducing the size of the R class for that library\r\nandroid.nonTransitiveRClass=true
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle.properties b/gradle.properties
--- a/gradle.properties	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/gradle.properties	(date 1665290903994)
@@ -2,7 +2,7 @@
 # IDE (e.g. Android Studio) users:
 # Gradle settings configured through the IDE *will override*
 # any settings specified in this file.
-# For more details on how to configure your build environment visit
+# For more_screen details on how to configure your build environment visit
 # http://www.gradle.org/docs/current/userguide/build_environment.html
 # Specifies the JVM arguments used for the daemon process.
 # The setting is particularly useful for tweaking memory settings.
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/.idea/misc.xml	(date 1665290905138)
@@ -1,5 +1,32 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="DesignSurface">
+    <option name="filePathToZoomLevelMap">
+      <map>
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable-v24/ic_launcher_foreground.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_back_background.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_back_foreground.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_chevron_left.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_chevron_right.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_fingerprint_background.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_fingerprint_foreground.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_forward_background.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_forward_foreground.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_home.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_launcher_background.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_manage_device_background.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_manage_device_foreground.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_notifications_background.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_notifications_foreground.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_phone_background.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_phone_foreground.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_share.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_signout_background.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/ic_signout_foreground.xml" value="0.1" />
+        <entry key="..\:/Users/Stephen/AndroidStudioProjects/EquityMobile/app/src/main/res/drawable/window_background.xml" value="0.1" />
+      </map>
+    </option>
+  </component>
   <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Add project specific ProGuard rules here.\r\n# You can control the set of applied configuration files using the\r\n# proguardFiles setting in build.gradle.\r\n#\r\n# For more details, see\r\n#   http://developer.android.com/guide/developing/tools/proguard.html\r\n\r\n# If your project uses WebView with JS, uncomment the following\r\n# and specify the fully qualified class name to the JavaScript interface\r\n# class:\r\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\r\n#   public *;\r\n#}\r\n\r\n# Uncomment this to preserve the line number information for\r\n# debugging stack traces.\r\n#-keepattributes SourceFile,LineNumberTable\r\n\r\n# If you keep the line number information, uncomment this to\r\n# hide the original source file name.\r\n#-renamesourcefileattribute SourceFile
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
--- a/app/proguard-rules.pro	(revision def1d7dc5f2e709af5a8d1ef358e12a34d50651d)
+++ b/app/proguard-rules.pro	(date 1665290904034)
@@ -2,7 +2,7 @@
 # You can control the set of applied configuration files using the
 # proguardFiles setting in build.gradle.
 #
-# For more details, see
+# For more_screen details, see
 #   http://developer.android.com/guide/developing/tools/proguard.html
 
 # If your project uses WebView with JS, uncomment the following
Index: app/src/main/java/com/chachadeveloper/equitymobile/presentation/homePager/HomePager.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/chachadeveloper/equitymobile/presentation/homePager/HomePager.kt b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/homePager/HomePager.kt
new file mode 100644
--- /dev/null	(date 1665290905506)
+++ b/app/src/main/java/com/chachadeveloper/equitymobile/presentation/homePager/HomePager.kt	(date 1665290905506)
@@ -0,0 +1,108 @@
+package com.chachadeveloper.equitymobile.presentation.homePager
+
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.background
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.lazy.LazyRow
+import androidx.compose.foundation.shape.CircleShape
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import com.chachadeveloper.equitymobile.R
+import com.chachadeveloper.equitymobile.ui.theme.primaryPink
+import com.google.accompanist.pager.ExperimentalPagerApi
+import com.google.accompanist.pager.HorizontalPager
+import com.google.accompanist.pager.rememberPagerState
+
+@OptIn(ExperimentalPagerApi::class)
+@Composable
+@Preview(showBackground = true)
+fun HomePager() {
+    val slideImage = remember { mutableStateOf(R.drawable.ic_chevron_right) }
+
+    val pagerState = rememberPagerState(pageCount = 3)
+
+    HorizontalPager( state = pagerState) { page ->
+        when(page)  {
+
+            0 -> {
+                slideImage.value = R.drawable.ic_launcher_foreground
+            }
+
+            1 -> {
+                slideImage.value = R.drawable.ic_notifications_foreground
+            }
+
+            2 -> {
+                slideImage.value = R.drawable.ic_security_foreground
+            }
+        }
+
+        Column(horizontalAlignment = Alignment.CenterHorizontally) {
+            Image(
+                painterResource(slideImage.value),
+                contentDescription = ""
+            )
+        }
+
+        Spacer(modifier = Modifier.padding(10.dp))
+
+        DotsIndicator(
+            totalDots = 3,
+            selectedIndex = currentPage,
+            selectedColor = primaryPink,
+            unSelectedColor = Color.White
+        )
+
+
+
+    }
+
+
+}
+
+@Composable
+fun DotsIndicator(
+    totalDots : Int,
+    selectedIndex : Int,
+    selectedColor: Color,
+    unSelectedColor: Color,
+){
+
+    LazyRow(
+        modifier = Modifier
+            .wrapContentWidth()
+            .wrapContentHeight()
+
+    ) {
+
+        items(totalDots) { index ->
+            if (index == selectedIndex) {
+                Box(
+                    modifier = Modifier
+                        .size(5.dp)
+                        .clip(CircleShape)
+                        .background(selectedColor)
+                )
+            } else {
+                Box(
+                    modifier = Modifier
+                        .size(5.dp)
+                        .clip(CircleShape)
+                        .background(unSelectedColor)
+                )
+            }
+
+            if (index != totalDots - 1) {
+                Spacer(modifier = Modifier.padding(horizontal = 2.dp))
+            }
+        }
+    }
+}
\ No newline at end of file
